(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    484241,      12182]
NotebookOptionsPosition[    445488,      10880]
NotebookOutlinePosition[    447941,      10939]
CellTagsIndexPosition[    447330,      10926]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["  Introduction", "Chapter",
 CellChangeTimes->{{3.6885295326450014`*^9, 3.688529534507243*^9}, {
  3.6885334362351274`*^9, 3.6885334383315253`*^9}}],

Cell[CellGroupData[{

Cell["\[Pi] is indicated by Pi", "Item",
 CellChangeTimes->{{3.688528239883212*^9, 3.6885282470439854`*^9}, {
   3.6885284669863873`*^9, 3.688528476230549*^9}, {3.688528637102685*^9, 
   3.688528653210425*^9}, 3.68852949838216*^9, {3.688533443339864*^9, 
   3.68853345353366*^9}, {3.6886265537390733`*^9, 3.6886265537430763`*^9}}],

Cell[TextData[{
 "nearly all operations in  ",
 StyleBox["Mathematica returns after manipulating and do not change the \
actual value, so we have to take it as return we we want to change.",
  FontSlant->"Italic"],
 "\n"
}], "Item",
 CellChangeTimes->{{3.688528239883212*^9, 3.6885282470439854`*^9}, {
   3.6885284669863873`*^9, 3.688528476230549*^9}, {3.688528637102685*^9, 
   3.688528653210425*^9}, 3.68852949838216*^9, {3.688533443339864*^9, 
   3.68853345353366*^9}, {3.6886265537390733`*^9, 3.6886266353726034`*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is case sensitive language"
}], "Item",
 CellChangeTimes->{{3.688627396067088*^9, 3.688627417488896*^9}}],

Cell["It uses camel Notation for function names", "Item",
 CellChangeTimes->{{3.688627396067088*^9, 3.688627440016356*^9}, {
  3.690084215025635*^9, 3.69008421658568*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",
 CellChangeTimes->{{3.688528217802491*^9, 3.6885282180186357`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.6885283234509974`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"finding", " ", "numerical", " ", "value", " ", "of", " ", 
  "something", " ", "we", " ", "can", " ", "use", " ", 
  RowBox[{"N", "[", 
   RowBox[{"<", "value", ">"}], "]"}], " ", "or", " ", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"<", "value", ">"}], ",", 
    RowBox[{"int_precision", "_digits"}]}], "]"}]}]], "Item", "Input",
 CellChangeTimes->{{3.688528317196828*^9, 3.688528345134454*^9}, {
  3.6885283780363903`*^9, 3.688528418549918*^9}}],

Cell[CellGroupData[{

Cell["N[Pi]", "Item", "Input",
 CellChangeTimes->{{3.688528317196828*^9, 3.6885283694006305`*^9}}],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{3.6885283698259144`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "20"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["3.1415926535897932384626433832795028841971693993751058209394`20.\
"], "Output",
 CellChangeTimes->{3.6885283922388563`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is case sensitive language so,"
}], "Item",
 CellDingbat->"\[FivePointedStar]",
 CellChangeTimes->{
  3.688528603288143*^9, {3.68852865840989*^9, 3.6885286870689974`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "*", "pi"}]], "Input",
 CellChangeTimes->{{3.688528680402551*^9, 3.6885286822677946`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "pi"}]], "Output",
 CellChangeTimes->{3.6885286828661933`*^9}]
}, Open  ]],

Cell["which is not 2*Pi", "Item",
 CellChangeTimes->{{3.688528697031164*^9, 3.6885287149891357`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.6885289754780283`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", "21.8", "]"}], " ", "//", 
  RowBox[{"round", " ", "to", " ", "nearest", " ", "integer"}]}]], "Input",
 CellChangeTimes->{{3.688528909335933*^9, 3.6885289365840983`*^9}, {
  3.6885290718191867`*^9, 3.688529077141736*^9}}],

Cell[BoxData["22"], "Output",
 CellChangeTimes->{3.6885289169850335`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", 
   RowBox[{"21.6", ",", "0.5"}], "]"}], "//", 
  RowBox[{
  "round", " ", "to", " ", "nearest", " ", "multipleof", " ", 
   "0.5"}]}]], "Input",
 CellChangeTimes->{{3.688529080169756*^9, 3.6885291126594152`*^9}}],

Cell[BoxData["21.5`"], "Output",
 CellChangeTimes->{3.688529095696106*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Suppressing output in Mathematica", "Chapter",
 CellChangeTimes->{{3.6900803261073084`*^9, 3.690080332727719*^9}}],

Cell[CellGroupData[{

Cell["\<\
 generally mathematica evaluates each and every line and show output for it\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.690080356164878*^9}}],

Cell["\<\
if we do not want output for some line we can suppress output using \
semicolon(;), this is same as matlab\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.6900803864304237`*^9}, {
  3.690080422273324*^9, 3.6900804222783227`*^9}}],

Cell["\<\
we will do it when we wanted mathematica to execute that line but do not show \
us output of that.(for execution shift+enter)\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.6900803864304237`*^9}, {
  3.690080422273324*^9, 3.6900804693807273`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var1", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "output", " ", "of", " ", "this", " ", "line", " ", "will", " ", "be", " ",
     "shown"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690080390454107*^9, 3.6900804032316275`*^9}, {
  3.6900804787934313`*^9, 3.6900804925245857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6900803968813915`*^9, 3.6900804754617777`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"var2", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "output", " ", "of", " ", "this", " ", "line", " ", "will", " ", "not", 
    " ", "be", " ", "shown"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690080398033159*^9, 3.690080411391066*^9}, {
  3.690080498132325*^9, 3.6900805103598995`*^9}}],

Cell[TextData[{
 "\n",
 StyleBox["Mathematical Operators", "Chapter"]
}], "Text",
 CellChangeTimes->{{3.688529468982561*^9, 3.6885294861860294`*^9}, {
   3.6885295416740227`*^9, 3.6885295450132484`*^9}, 3.688529780520404*^9, {
   3.690080513256835*^9, 3.690080514789852*^9}}],

Cell[CellGroupData[{

Cell["+ and - for add and subtract", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529660721456*^9}}],

Cell[" * or space for multiplication so (a b) is same as (a*b)", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529708840536*^9}}],

Cell["/ for division and ^ for power\[LineSeparator]", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529749148962*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["    Mathematical Functions", "Chapter",
 CellChangeTimes->{{3.6885297639833784`*^9, 3.688529801579443*^9}, 
   3.690080313795106*^9}],

Cell[CellGroupData[{

Cell["Mod[x,y] return reminder", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529830407662*^9}}],

Cell["Quotient[x,y] returns quotient of division", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.6885298487628984`*^9}}],

Cell["\<\
N[x] returns numerical represenation of fraction or other expression\
\>", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688532999654775*^9}}],

Cell["N[x,n] return numerical value upto n digits after decimal", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688533022650106*^9}, {3.688533286215249*^9, 
  3.688533286219251*^9}}],

Cell["BaseForm[x,b] convert base 10 number x in base b", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688533022650106*^9}, {3.688533286215249*^9, 
  3.68853331504747*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"16", " ", "Pi"}]], "Input",
 CellChangeTimes->{{3.6885299265385976`*^9, 3.6885299369955683`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.688529937695036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"16", "Pi"}], "]"}]], "Input",
 CellChangeTimes->{{3.688529939550272*^9, 3.688529949569951*^9}}],

Cell[BoxData["50.26548245743669`"], "Output",
 CellChangeTimes->{3.688529950224387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"20", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885333191932335`*^9, 3.688533331346336*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"202\"\>", "\<\"3\"\>"],
   20,
   Editable->False],
  BaseForm[#, 3]& ]], "Output",
 CellChangeTimes->{3.6885333317806263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"20", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885333379397316`*^9, 3.6885333438876967`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"40\"\>", "\<\"5\"\>"],
   20,
   Editable->False],
  BaseForm[#, 5]& ]], "Output",
 CellChangeTimes->{3.6885333443480034`*^9}]
}, Open  ]],

Cell["", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Referring to previous calculations", "Chapter",
 CellChangeTimes->{{3.688530021543882*^9, 3.688530039861616*^9}}],

Cell[CellGroupData[{

Cell["\<\
one of the most important feature of mathematica is that it can refer to \
previously done calculations and this is the reason why every \
calculation(input as well as output) have a number associated with it. ex- \
In[11] and Out[11]\
\>", "Item",
 CellChangeTimes->{{3.688530043333932*^9, 3.6885301478771477`*^9}}],

Cell["\<\
if we wanted to refer to last previous output then use % sign \
\>", "Item",
 CellChangeTimes->{{3.6885301828224955`*^9, 3.6885302233019495`*^9}, 
   3.68853039908873*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"%", "  ", "//", 
  RowBox[{
  "which", " ", "as", " ", "the", " ", "last", " ", "output"}]}]], "Input",
 CellChangeTimes->{{3.6885302339070196`*^9, 3.6885302428199625`*^9}}],

Cell[BoxData[{"50.26548245743669`", "\[IndentingNewLine]", "%11"}], "Input",
 CellChangeTimes->{{3.6885303802011385`*^9, 3.688530381565048*^9}}],

Cell[CellGroupData[{

Cell[BoxData["50.26548245743669"], "Input",
 CellChangeTimes->{{3.6885303846571093`*^9, 3.6885303869966693`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.688530382085395*^9}]
}, Open  ]],

Cell["\<\
 to work with output no 11 we can use %11 or Out[11], this will acts as \
variable\
\>", "Item",
 CellChangeTimes->{{3.68853032207285*^9, 3.6885303468509054`*^9}, {
  3.688530408738163*^9, 3.6885304269212875`*^9}}],

Cell[BoxData["%11"], "Input",
 CellChangeTimes->{{3.688530370114414*^9, 3.688530370897936*^9}, {
  3.6885304195173492`*^9, 3.6885304196054087`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Input",
 CellChangeTimes->{3.6885304302625136`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Out", "[", "11", "]"}]], "Input",
 CellChangeTimes->{{3.6885304395427003`*^9, 3.6885304421219435`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.6885304427433577`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Using variables", "Chapter",
 CellChangeTimes->{{3.688530491307227*^9, 3.6885305078562593`*^9}}],

Cell[CellGroupData[{

Cell[" rules for creating variables are same as C", "Item",
 CellChangeTimes->{{3.6885305093822775`*^9, 3.688530520422639*^9}, {
  3.6885310907274027`*^9, 3.688531103264761*^9}}],

Cell["\<\
_(underscore ) can \[OpenCurlyQuote]t be used here, because we use them in \
function definitions for variables\
\>", "Item",
 CellChangeTimes->{{3.6885305093822775`*^9, 3.688530520422639*^9}, {
  3.6885310907274027`*^9, 3.6885311162213984`*^9}, {3.690081363396265*^9, 
  3.6900813936439314`*^9}}],

Cell["\<\
rules of variables applied to all identifiers(function names etc.)\
\>", "Item",
 CellChangeTimes->{{3.690083198096404*^9, 3.6900832157601805`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "=", "20", " "}]], "Input",
 CellChangeTimes->{{3.6885305364793415`*^9, 3.6885305650834107`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "setraw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot assign to raw object \
\[NoBreak]\\!\\(2\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/setraw\\\", ButtonNote -> \
\\\"Set::setraw\\\"]\\)\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6885305397855453`*^9, 3.6885305728756056`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.688530539786546*^9, 3.68853056755606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", "20"}]], "Input",
 CellChangeTimes->{{3.6885310357250586`*^9, 3.688531036352477*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6885310368668194`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "*", 
   RowBox[{"20", "/", "3"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.688531038107647*^9, 3.688531040150008*^9}}],

Cell[BoxData[
 FractionBox["400", "3"]], "Output",
 CellChangeTimes->{3.688531042056279*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"_a", "=", "20", "  "}]], "Input",
 CellChangeTimes->{{3.6885310493341317`*^9, 3.688531050987753*^9}, {
  3.6885311276900473`*^9, 3.6885311375666285`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Integer\\)\[NoBreak] in \
\[NoBreak]\\!\\(Blank[20]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.688531053821642*^9, 3.6885311395679636`*^9}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6885310538226423`*^9, 3.688531139570965*^9}]
}, Open  ]],

Cell["for clearing a variable we can use Clear[var_name] method.", "Item",
 CellChangeTimes->{{3.690084232620372*^9, 3.69008424907656*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Importing and Exporting data from Files", "Chapter",
 CellChangeTimes->{{3.6885311979479165`*^9, 3.688531236500763*^9}}],

Cell[CellGroupData[{

Cell["\<\
Import[\[OpenCurlyDoubleQuote]<file_path>\[CloseCurlyDoubleQuote]] is the \
function which is used to import data \
\>", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885320981192503`*^9}}],

Cell["file_path could be absolute path, relative path or url", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885321145091763`*^9}, {3.6885322828683662`*^9, 
  3.6885322828733687`*^9}}],

Cell["file could be text , csv(stylesheet) , gif or any type", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885321145091763`*^9}, {3.6885322828683662`*^9, 
  3.6885323081722355`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"var", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\info.txt\>\"", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.688532161243333*^9, 3.6885321915235205`*^9}, {
  3.6885322545504866`*^9, 3.6885322557282724`*^9}, {3.688532312865365*^9, 
  3.688532313918066*^9}}],

Cell[BoxData["\<\"10\\n20\\n30\\n40\\n50\\n60\\n70\"\>"], "Output",
 CellChangeTimes->{3.6885322562956505`*^9, 3.6885323155731688`*^9, 
  3.6885324268019075`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6885322501195335`*^9, 3.6885322525321417`*^9}}],

Cell["\<\
for showing data in table form we can use TableForm[data_list] function\
\[LineSeparator]\
\>", "Item",
 CellChangeTimes->{{3.6885323280504875`*^9, 3.6885323614402733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "var", "]"}]], "Input",
 CellChangeTimes->{{3.6885323641670895`*^9, 3.688532368317384*^9}}],

Cell[BoxData[
 TagBox["\<\"10\\n20\\n30\\n40\\n50\\n60\\n70\"\>",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.68853236871865*^9, 3.688532429690833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
similarly for exporting we use Export[\[OpenCurlyDoubleQuote]file_path\
\[CloseCurlyDoubleQuote],variable_name].\
\>", "Item",
 CellChangeTimes->{{3.6885325070149145`*^9, 3.688532579946594*^9}}],

Cell["\<\
if file specified in file_path not available file will be created.\
\>", "Item",
 CellChangeTimes->{{3.6885325070149145`*^9, 3.6885325786667414`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\infoexport.txt\>\"", ",", 
   "var"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885325844415903`*^9, 3.6885326163466578`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\infoexport.txt\"\>\
"], "Output",
 CellChangeTimes->{3.6885326168399878`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Built-in Functions", "Chapter",
 CellChangeTimes->{{3.6885327175877914`*^9, 3.6885327347932615`*^9}}],

Cell[CellGroupData[{

Cell["Sqrt[x] find square root", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.688532753016412*^9}}],

Cell["IntegerPart[x] returns integer part  of a fraction", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885327689680448`*^9}}],

Cell["Ceiling[x]  and Floor[x] make integer up and down", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885327995389547`*^9}}],

Cell["Round[x] rounds number  (.5 or heigher goes up) ", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.688532857512923*^9}}],

Cell["\<\
Max[x]  and Min[x] finds largest and smallest number in input set\
\>", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885328863131213`*^9}}],

Cell["Factorial[x] or x! finds factorial of a number( e.g- 5!=120)", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885329211313334`*^9}, {
  3.688533169040445*^9, 3.6885331690454473`*^9}}],

Cell["\<\
we can apply each function on list and then we get ans as list also\
\>", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885329211313334`*^9}, {
  3.688533169040445*^9, 3.688533183769263*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "196", "]"}]], "Input",
 CellChangeTimes->{{3.688533052503008*^9, 3.6885330580507064`*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.6885330585500383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Pi", "*", "4"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.688533061473988*^9, 3.68853307320533*^9}}],

Cell[BoxData["12.56637061435917295385057353311801153679`10."], "Output",
 CellChangeTimes->{{3.6885330677151504`*^9, 3.688533073553562*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{
   "12", ",", "32.23", ",", "3.2", ",", "42", ",", "23.2", ",", "1", ",", 
    "123"}], "}"}], " ", 
  RowBox[{"(*", " ", "list", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.688533076408465*^9, 3.6885331343733344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32.23`", ",", "3.2`", ",", "42", ",", "23.2`", ",", "1", ",", 
   "123"}], "}"}]], "Output",
 CellChangeTimes->{3.6885330977418375`*^9, 3.6885331370060883`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6885330998902717`*^9, 3.6885331032234945`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.688533103854913*^9, 3.6885331392705975`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["blist"], "Input",
 CellChangeTimes->{{3.6885331525584555`*^9, 3.688533153208889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32.23`", ",", "3.2`", ",", "42", ",", "23.2`", ",", "1", ",", 
   "123"}], "}"}]], "Output",
 CellChangeTimes->{3.688533153577135*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6885331048175545`*^9, 3.6885331101170883`*^9}}],

Cell[BoxData["3242"], "Output",
 CellChangeTimes->{3.6885331105163555`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.688533111765188*^9, 3.6885331156467752`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32", ",", "3", ",", "42", ",", "23", ",", "1", ",", "123"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6885331160581217`*^9, 3.6885331421955476`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"5", "!"}], " ", 
  RowBox[{"(*", "factorial", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6885332047612576`*^9, 3.6885332131999273`*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{{3.6885332072389097`*^9, 3.6885332152092657`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factorial", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.688533217426709*^9, 3.6885332304613996`*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{{3.688533224179211*^9, 3.688533230847659*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"120", ",", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.688533258924054*^9, 3.688533273071486*^9}, 
   3.6885337311014566`*^9},
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"78\"\>", "\<\"16\"\>"],
   120,
   Editable->False],
  BaseForm[#, 16]& ]], "Output",
 CellChangeTimes->{{3.688533250795993*^9, 3.6885332736898985`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Lists in Mathematica", "Chapter",
 CellChangeTimes->{{3.688624847492653*^9, 3.6886248522163324`*^9}, 
   3.6886271218098583`*^9}],

Cell["list are specified by {} as function are defined by []", "Item",
 CellChangeTimes->{{3.6886248542436857`*^9, 3.688624876542077*^9}}],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6886248529988565`*^9}],

Cell[CellGroupData[{

Cell["    Creating a list", "Section",
 CellChangeTimes->{{3.6886249526162453`*^9, 3.6886249661252537`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.68862499679342*^9, 3.688625002615301*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886250034008265`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Range[] function generates a string", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.688625071369671*^9}}],

Cell["Range[max] generates list {1,2,3,....,max}", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.6886250888488564`*^9}}],

Cell["Range[min,max] generates list{min,min+1,....,max}", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.6886251093470416`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.6886253007403865`*^9, 3.6886253055221395`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.688625305909402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886253074924517`*^9, 3.6886253145051303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",",
    "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.688625314893384*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "20", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.688625316375372*^9, 3.6886253213546925`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "13", ",", "16", ",", "19"}], "}"}]], "Output",
 CellChangeTimes->{3.6886253218900485`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"x", ",", 
   RowBox[{"x", "+", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6886252541902623`*^9, 3.68862527351868*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"2", "+", "x"}], ",", 
   RowBox[{"3", "+", "x"}], ",", 
   RowBox[{"4", "+", "x"}], ",", 
   RowBox[{"5", "+", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.68862526048746*^9, 3.6886252740540376`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[" Referring and Editing a list", "Chapter"]], "Section",
 CellChangeTimes->{3.688627257235835*^9}],

Cell[CellGroupData[{

Cell["\<\
we have to use double square brackets for referring a list items\
\>", "Item",
 CellChangeTimes->{{3.6886257192029076`*^9, 3.6886257654908166`*^9}}],

Cell["indexing starts from 1 same as matlab", "Item",
 CellChangeTimes->{{3.6886257192029076`*^9, 3.6886257725955534`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6886256782145133`*^9, 3.688625685866618*^9}, {
  3.688625757013166*^9, 3.6886257578707376`*^9}, {3.6886257924063025`*^9, 
  3.688625801586054*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{
  3.688625686467016*^9, 3.6886257586182346`*^9, {3.6886257935130424`*^9, 
   3.6886258030400205`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886257422638063`*^9, 3.6886257461363907`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.6886257468408585`*^9, 3.688625760122236*^9}}]
}, Open  ]],

Cell["\<\
we can use negating indexing for counting from end (same as python)\
\>", "Item",
 CellChangeTimes->{{3.6886270009161253`*^9, 3.688627016353941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626993308524*^9, 3.688626996951479*^9}}],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.688626997659953*^9}]
}, Open  ]],

Cell["\<\
for multiple index values from list we have to use enter their indexes as list\
\>", "Item",
 CellChangeTimes->{{3.6886258103198767`*^9, 3.688625873811511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "values", " ", "of", " ", "index", " ", "2", " ", "and", " ", "4", " ", 
    "will", " ", "be", " ", "outputted"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.688625882952606*^9, 3.6886259070042048`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{{3.688625890483996*^9, 3.688625907906807*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for range of values from index i to index j we have to use double semi \
colon(;;)\
\>", "Item",
 CellChangeTimes->{{3.6886259107196836`*^9, 3.688625944478739*^9}}],

Cell["\<\
example for indexes 2 to 4 we have to use 2;;4 instead of {2,3,4}(list of \
indexes)\
\>", "Item",
 CellChangeTimes->{{3.688625950754011*^9, 3.688626006273758*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626010042796*^9, 3.6886260165961614`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "9", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.688626016931387*^9}]
}, Open  ]],

Cell["changing value or multiple values could be done as referring", "Item",
 CellChangeTimes->{{3.6886260815879803`*^9, 3.688626103434834*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", "100", 
  RowBox[{"(*", " ", 
   RowBox[{
   "value", " ", "of", " ", "index", " ", "2", " ", "has", " ", "been", " ", 
    "updated", " ", "to", " ", "100"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886261114662623`*^9, 3.688626170955255*^9}}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.688626123236109*^9, 3.688626137320779*^9}, 
   3.6886261716016865`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["elist"], "Input",
 CellChangeTimes->{{3.6886261331690135`*^9, 3.6886261338244476`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "100", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{{3.688626134140659*^9, 3.6886261392460623`*^9}, 
   3.688626175503291*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", 
    RowBox[{"2", ";;", "4"}], "]"}], "]"}], "=", "2", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "values", " ", "or", " ", "indexes", " ", "range", " ", "update", " ", 
    "to", " ", "2"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886260582478647`*^9, 3.688626064666142*^9}, {
  3.6886261798722*^9, 3.6886261979124165`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.688626065176484*^9, {3.6886261254305735`*^9, 3.688626141433521*^9}, 
   3.6886261986459055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["elist"], "Input",
 CellChangeTimes->{{3.688626067489029*^9, 3.688626069944228*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.6886260703164697`*^9, 3.6886261294012184`*^9, 
  3.68862620096445*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 we can use ReplacePart[] function to update many indexes at a  time\
\>", "Item",
 CellChangeTimes->{{3.6886262780053053`*^9, 3.688626307762705*^9}}],

Cell["\<\
specially useful when indexes are not adjacenet to use range type (;;)\
\>", "Item",
 CellChangeTimes->{{3.6886262780053053`*^9, 3.688626331253887*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplacePart", "[", 
   RowBox[{"elist", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "10"}], ",", 
      RowBox[{"2", "\[Rule]", "20"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"index", " ", 
    RowBox[{"1", "'"}], "s", " ", "value", " ", "replaced", " ", "with", " ", 
    "10", " ", "and", " ", "so", " ", "on"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886263361403155`*^9, 3.688626396203935*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.688626368933702*^9, 3.6886264014734507`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Adding and removing items from a list", "Section",
 CellChangeTimes->{{3.688626447919466*^9, 3.6886264586215997`*^9}}],

Cell[CellGroupData[{

Cell["Adding Items", "Subsection",
 CellChangeTimes->{{3.6886268875991397`*^9, 3.688626896938563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886264993215704`*^9, 3.6886265074990587`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6886265082015295`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "[", 
  RowBox[{"[", "11", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626509620476*^9, 3.6886265124503603`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(11\\)\[NoBreak] of \
\[NoBreak]\\!\\({10, 20, 30, 40, 50, 60, 70, 80, 90, 100}\\)\[NoBreak] does \
not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6886265135560975`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", 
    ",", "80", ",", "90", ",", "100"}], "}"}], "\[LeftDoubleBracket]", "11", 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.688626513566107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["error occured because only 10 items are there in list", "Item",
 CellChangeTimes->{{3.688626517235552*^9, 3.6886265318139195`*^9}, {
  3.688626654381089*^9, 3.688626654408106*^9}}],

Cell["\<\
We can use append[list,new_value] function to append new_value to list\
\>", "Item",
 CellChangeTimes->{{3.688626517235552*^9, 3.6886265318139195`*^9}, {
  3.688626654381089*^9, 3.6886266920583286`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Append", "[", 
   RowBox[{"flist", ",", "110"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "we", " ", "have", " ", "to", " ", "take", " ", "it", " ", "as", " ", 
    "returns", " ", "as", " ", "no", " ", "function", " ", "changes", " ", 
    "original"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886266974399157`*^9, 3.6886267056343784`*^9}, {
  3.6886267536449633`*^9, 3.688626789108124*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100", ",", "110", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886267060626616`*^9, {3.6886267546296163`*^9, 3.6886267921806955`*^9}}]
}, Open  ]],

Cell["\<\
 for adding at beginnig we use Prepend[list,new_value] function\
\>", "Item",
 CellChangeTimes->{{3.6886268257082415`*^9, 3.6886268440390053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Prepend", "[", 
   RowBox[{"flist", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886268480696945`*^9, 3.688626864239524*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", 
   "70", ",", "80", ",", "90", ",", "100", ",", "110", ",", "110"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6886268650830836`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deleting item ", "Subsection",
 CellChangeTimes->{{3.688626907713749*^9, 3.6886269125579767`*^9}}],

Cell["\<\
 we can use Delete[list,index] function to delete a specific value from list\
\>", "Item",
 CellChangeTimes->{{3.688626936112668*^9, 3.688626955706931*^9}}],

Cell[CellGroupData[{

Cell[BoxData["flist"], "Input",
 CellChangeTimes->{{3.688626960344025*^9, 3.6886269608013277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", 
   "70", ",", "80", ",", "90", ",", "100", ",", "110", ",", "110"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.688626961366704*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Delete", "[", 
   RowBox[{"flist", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688626964453763*^9, 3.6886269675668373`*^9}, {
  3.6886270265509357`*^9, 3.6886270344441986`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", 
   "80", ",", "90", ",", "100", ",", "110", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{3.6886270350826263`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   List Counting and Math Functions", "Section",
 CellChangeTimes->{{3.688627269529029*^9, 3.688627289447833*^9}, {
  3.688627319809716*^9, 3.688627345671957*^9}, {3.688628529152068*^9, 
  3.688628535594363*^9}}],

Cell["length of a list can be find by Length[list] function", "Item",
 CellChangeTimes->{{3.6886273520712223`*^9, 3.6886273809754934`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886274506514454`*^9, 3.688627490068722*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{{3.688627475714153*^9, 3.688627490404947*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688627493591071*^9, 3.688627500150446*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6886275005677233`*^9}]
}, Open  ]],

Cell["\<\
occurance of a number can be counted using Count[list,num] function\
\>", "Item",
 CellChangeTimes->{{3.6886275082748632`*^9, 3.688627529774194*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{"alist", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.688627532623092*^9, 3.688627539799411*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6886275405749254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for searching a number in list we can use Position[list,num] function \
\>", "Item",
 CellChangeTimes->{{3.6886275575092144`*^9, 3.688627602801453*^9}, {
  3.6886278946185656`*^9, 3.688627901033841*^9}}],

Cell["it returns indexes in form of list of list ", "Item",
 CellChangeTimes->{{3.6886275575092144`*^9, 3.688627602801453*^9}, {
  3.6886278946185656`*^9, 3.6886279091152306`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"alist", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.68862759120172*^9, 3.6886276080549583`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "10", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6886275948841767`*^9, 3.688627608552287*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"10", ",", "10", ",", "20", ",", "30", ",", "20", ",", "10"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.688627642158692*^9, 3.688627657458892*^9}, {
  3.6886277798478823`*^9, 3.68862778576883*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "10", ",", "20", ",", "30", ",", "20", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.688627657888179*^9, {3.6886278780365105`*^9, 3.688627880861395*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"alist", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886276585796385`*^9, 3.688627668843481*^9}, {
   3.6886277961807704`*^9, 3.6886277974446135`*^9}, 3.68862785626589*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "6", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6886276657754374`*^9, 3.6886276691436815`*^9}, 
   3.688627883104888*^9}]
}, Open  ]],

Cell["we can use Flatten[2dlist] flat a matrix as a list(vector)", "Item",
 CellChangeTimes->{{3.6886279167142982`*^9, 3.688627951508492*^9}}],

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Position", "[", 
   RowBox[{"alist", ",", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886279641989512`*^9, 3.6886279778335724`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "6"}], "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "now", " ", "these", " ", "are", " ", "the", " ", "indexes", " ", "where", 
    " ", "10", " ", "exists"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886279874910126`*^9, 3.688628000053854*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.688627731474634*^9, 3.688627770188444*^9}}],

Cell[CellGroupData[{

Cell["Maths function for List", "Subsection",
 CellChangeTimes->{{3.688628045581306*^9, 3.688628054455222*^9}}],

Cell[CellGroupData[{

Cell["sum of list can be found by Total[list]", "Item",
 CellChangeTimes->{{3.688628071077304*^9, 3.6886281087634273`*^9}}],

Cell["\<\
for mean use Mean[list] , it may be fraction so use N[Mean[list]]\
\>", "Item",
 CellChangeTimes->{{3.688628071077304*^9, 3.688628144177762*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886280841590257`*^9, 3.6886280941676974`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6886280948151283`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688628096633342*^9, 3.6886280987077246`*^9}}],

Cell[BoxData["550"], "Output",
 CellChangeTimes->{3.6886280990489516`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886281020309396`*^9, 3.6886281049709*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.6886281054091916`*^9}]
}, Open  ]],

Cell[" we can get Running total using Accumulate[list] function ", "Item",
 CellChangeTimes->{{3.688628179084264*^9, 3.6886281918968043`*^9}, {
  3.6886282648009443`*^9, 3.688628264804947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628196871122*^9, 3.6886282034254923`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6886282037707224`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Accumulate", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886282049565115`*^9, 3.6886282084828625`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
    "36", ",", "45", ",", "55"}], "}"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6886282594238224`*^9, 3.688628259430828*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{3.688628260792737*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 difference b/w consecutive elements of list can be foundby Differences[list] \
method \
\>", "Item",
 CellChangeTimes->{{3.6886282858855276`*^9, 3.688628325018771*^9}, {
  3.688628401806547*^9, 3.688628401813552*^9}}],

Cell["it calculate differences using alist[i+1]-alist[i]", "Item",
 CellChangeTimes->{{3.6886282858855276`*^9, 3.688628325018771*^9}, {
  3.688628401806547*^9, 3.688628421612751*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628335395689*^9, 3.688628344076478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.68862834439669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Differences", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886283459847493`*^9, 3.688628348264269*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6886283486115007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["similarly we can also find ratios of consecutive elements", "Item",
 CellChangeTimes->{{3.6886284271054134`*^9, 3.688628448141507*^9}}],

Cell["ratios are calculate alist[i+1]/alist[i]", "Item",
 CellChangeTimes->{{3.6886284271054134`*^9, 3.6886284590567837`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.688628383077479*^9, {3.688628424586735*^9, 3.688628425447307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "1", ",", "3", ",", "7", ",", "8"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.688628464710553*^9, 3.6886284919357057`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "1", ",", "3", ",", "7", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.688628492335971*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ratios", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886284930704613`*^9, 3.6886284982889395`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["1", "4"], ",", "3", ",", 
   FractionBox["7", "3"], ",", 
   FractionBox["8", "7"]}], "}"}]], "Output",
 CellChangeTimes->{3.688628498755251*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Random Number Generation", "Section",
 CellChangeTimes->{{3.6886288524279566`*^9, 3.6886288628360505`*^9}}],

Cell[CellGroupData[{

Cell["Random Integers", "Subsection",
 CellChangeTimes->{{3.6886290753218484`*^9, 3.6886290820263186`*^9}}],

Cell[CellGroupData[{

Cell["RandomInteger[max] gives a random integer from 0 to max", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886289356077967`*^9}}],

Cell["\<\
RandomInteger[{min,max}] gives random integer from min to max ,CAREFUL watch \
{ and }\
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886289654376836`*^9}}],

Cell["RandomInteger[] gives 0 or 1", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.688628982026744*^9}}],

Cell["\<\
RandomInteger[max,n] generates list of n random number from 0 to max, that is \
why we used { } there \
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886290250812216`*^9}, {3.688629321969714*^9, 
  3.6886293345460987`*^9}}],

Cell["\<\
RandomInteger[max,{n,m}] generates matrix of random number of dimention n*m
\
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886290614836226`*^9}, {3.688629091681755*^9, 
  3.688629098307171*^9}, {3.688629181927435*^9, 3.6886291911776013`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Reals", "Subsection",
 CellChangeTimes->{{3.6886291995121574`*^9, 3.6886292056692643`*^9}}],

Cell[CellGroupData[{

Cell["RandomReal[] gives real number b/w 0 and 1", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.688629248349717*^9}}],

Cell["RandomReal[max] gives random real b/w 0 and max", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886292766668377`*^9}}],

Cell["RandomReal[{min,max}] gives random real b/w min and max", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886292994220095`*^9}}],

Cell["\<\
RandomReal[max,n] generates list of n random real b/w 0 and max\
\>", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886293020372667`*^9}, {
  3.6886293375481005`*^9, 3.6886293688639765`*^9}}],

Cell["\<\
RandomReal[max,{n,m}] generates matrix of random real b/w 0 and max of n*m\
\>", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886293020372667`*^9}, {
  3.6886293375481005`*^9, 3.688629400529087*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Note", "-", 
  RowBox[{
  "there", " ", "are", " ", "also", " ", "functions", " ", "like", " ", 
   "RandomPrime", " ", "which", " ", "generate", " ", "random", " ", "Prime", 
   " ", "number", " ", "and", " ", "syntax", " ", "is", " ", "like", " ", 
   RowBox[{"above", "."}]}]}]], "Input",
 CellChangeTimes->{{3.6886295249556136`*^9, 3.6886295330380006`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Sorting ,Reversing and Padding", "Section",
 CellChangeTimes->{{3.688628549078355*^9, 3.6886285558403797`*^9}, {
  3.6886299601696663`*^9, 3.6886299684952188`*^9}}],

Cell[CellGroupData[{

Cell["Sorting", "Subsection",
 CellChangeTimes->{{3.688628562059529*^9, 3.6886285689130964`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628606726386*^9, 3.6886286118918285`*^9}, {
  3.688628650676688*^9, 3.688628680880825*^9}, {3.688628737783805*^9, 
  3.6886287409681163`*^9}, {3.688629565653778*^9, 3.688629569613417*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57", ",", "0", ",", "72", ",", "73", ",", "53", ",", "26", ",", "58", ",", 
   "27", ",", "91", ",", "60"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886297663209667`*^9, {3.6886302940820627`*^9, 3.6886303059509783`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for sorting we can use Sort[list,cmp] function by default cmp is Less\
\>", "Item",
 CellChangeTimes->{{3.6886295893101163`*^9, 3.6886296350577383`*^9}}],

Cell["for sorting Descending we have to use Greater comp function\
\[LineSeparator]", "Item",
 CellChangeTimes->{{3.6886295893101163`*^9, 3.6886296535960965`*^9}, {
  3.6886296951497993`*^9, 3.688629700763543*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Note", "-", " ", 
  RowBox[{
  "even", " ", "in", " ", "sort", " ", "data", " ", "is", " ", "note", " ", 
   "modified", " ", "of", " ", "original", " ", "we", " ", "have", " ", "to", 
   " ", "assign", " ", "back", " ", "on", " ", "return", " ", "if", " ", 
   "wanted", " ", "to", " ", "change"}]}]], "Input",
 CellChangeTimes->{{3.6886297045200453`*^9, 3.6886297404780703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.688629574368588*^9, 3.6886295784623156`*^9}, {
   3.688629665768211*^9, 3.6886296686171103`*^9}, 3.68862975595006*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "26", ",", "27", ",", "53", ",", "57", ",", "58", ",", "60", ",", 
   "72", ",", "73", ",", "91"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886295787985425`*^9, 3.6886296689453297`*^9, {3.6886297568546553`*^9, 
   3.688629768379339*^9}, 3.6886303084866657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "changed", " ", "or", " ", "sorting"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886297513693295`*^9, 3.6886297857359114`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57", ",", "0", ",", "72", ",", "73", ",", "53", ",", "26", ",", "58", ",", 
   "27", ",", "91", ",", "60"}], "}"}]], "Output",
 CellChangeTimes->{{3.688630284575207*^9, 3.688630312141353*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sort", "[", 
   RowBox[{"a", ",", "Less"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"same", " ", "as", " ", 
    RowBox[{"Sort", "[", "a", "]"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886303193541617`*^9, 3.688630370383306*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "26", ",", "27", ",", "53", ",", "57", ",", "58", ",", "60", ",", 
   "72", ",", "73", ",", "91"}], "}"}]], "Output",
 CellChangeTimes->{3.6886303711658273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"a", ",", "Greater"}], "]"}]], "Input",
 CellChangeTimes->{{3.688630373376301*^9, 3.6886303787408805`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "91", ",", "73", ",", "72", ",", "60", ",", "58", ",", "57", ",", "53", ",",
    "27", ",", "26", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6886303792992487`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reversing ", "Subsection",
 CellChangeTimes->{{3.688629953082942*^9, 3.688629954596951*^9}}],

Cell["we can reverse using Reverse[list] function", "Item",
 CellChangeTimes->{{3.688629792388344*^9, 3.6886298017836075`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.6886298048806725`*^9, 3.688629807681542*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "46", ",", "23", ",", "7", ",", "47", ",", "26", ",", "66", ",", "38", ",", 
   "85", ",", "5", ",", "43"}], "}"}]], "Output",
 CellChangeTimes->{3.6886298080067563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.688629820293948*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "43", ",", "5", ",", "85", ",", "38", ",", "66", ",", "26", ",", "47", ",", 
   "7", ",", "23", ",", "46"}], "}"}]], "Output",
 CellChangeTimes->{3.6886298206381807`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Padding", "Subsection",
 CellChangeTimes->{{3.6886299862660637`*^9, 3.6886299993162813`*^9}}],

Cell[CellGroupData[{

Cell["padding means adding some elements to left or right", "Item",
 CellChangeTimes->{{3.688630001173519*^9, 3.688630013132492*^9}}],

Cell["\<\
we can make alist of desired length by padding with some element on left or \
right\
\>", "Item",
 CellChangeTimes->{{3.688630001173519*^9, 3.6886300377304125`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6886300400500956`*^9, 3.688630053498059*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886300539733753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
we can pad a list at left using  0 by function PadLeft[list,final_length] \
\>", "Item",
 CellChangeTimes->{{3.688630057567774*^9, 3.688630124490388*^9}}],

Cell["\<\
we can pad a list at left using  n by function PadLeft[list,final_length,n] \
\>", "Item",
 CellChangeTimes->{{3.688630057567774*^9, 3.6886301437107334`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PadLeft", "[", 
  RowBox[{"alist", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886301479605646`*^9, 3.688630159971572*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886301606600313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PadLeft", "[", 
  RowBox[{"alist", ",", "12", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6886301622731085`*^9, 3.6886301787323527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.688630173380782*^9, 3.688630179131615*^9}}]
}, Open  ]],

Cell["\<\
similarly we can use PadRight[list,final_length] and \
PadRight[list,final_length,n]\
\>", "Item",
 CellChangeTimes->{{3.688630188013539*^9, 3.6886302220395164`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying first and last value in list", "Section",
 CellChangeTimes->{{3.6887968967366643`*^9, 3.6887969130331087`*^9}}],

Cell[CellGroupData[{

Cell["\<\
 to know first value we use First[list]  we can also use 1 index\
\>", "Item",
 CellChangeTimes->{{3.6887969161822157`*^9, 3.688796945805561*^9}, {
  3.688797039826309*^9, 3.6887970439430666`*^9}}],

Cell["\<\
to know last we can use Last[list]  we can also use last index or -1\
\>", "Item",
 CellChangeTimes->{{3.6887969161822157`*^9, 3.688796943373938*^9}, {
  3.6887970301077824`*^9, 3.688797037257593*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "  ", "=", 
  RowBox[{"{", 
   RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6887969510238905`*^9, 3.6887969760462794`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{3.6887969766787024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688796978897189*^9, 3.6887969815109344`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.688796981900195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887969835092726`*^9, 3.6887969920588045`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6887969927983007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688796998780304*^9, 3.68879700081166*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.6887970018923817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887970037146034`*^9, 3.688797008966114*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.6887970093153515`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", 
   RowBox[{"Length", "[", "alist", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688797010332028*^9, 3.68879702567982*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.688797026350271*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selecting List items by rules", "Section",
 CellChangeTimes->{{3.688797089934708*^9, 3.68879711023382*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mlist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887971153608484`*^9, 3.6887971405141954`*^9}, {
  3.68879849552672*^9, 3.688798500324931*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.688797141094892*^9, 3.688798500910324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 to select value using some rule we use Select[list,Predicate]  \
\>", "Item",
 CellChangeTimes->{{3.6887971432063065`*^9, 3.6887971821188927`*^9}}],

Cell["\<\
this will return only the value which satisfy the give predicate\
\>", "Item",
 CellChangeTimes->{{3.6887971432063065`*^9, 3.688797196594576*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using predicates or Testing Expressions", "Subsection",
 CellChangeTimes->{{3.6887973588117514`*^9, 3.6887973629345055`*^9}, {
  3.6887974751788745`*^9, 3.6887974798740153`*^9}, {3.6887986736551127`*^9, 
  3.688798674824897*^9}}],

Cell[CellGroupData[{

Cell["\<\
there is a lot of predicate availabe in Walfram language for checking value \
\>", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.688797395296323*^9}, {
  3.688797498950142*^9, 3.688797503483178*^9}, {3.688798281161993*^9, 
  3.6887982811639977`*^9}}],

Cell["all can take Expression and  returns true or false", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.688797395296323*^9}, {
  3.688797498950142*^9, 3.688797503483178*^9}, {3.688798281161993*^9, 
  3.6887982874742155`*^9}, {3.6887983831631527`*^9, 3.6887983895063953`*^9}}],

Cell["most of them are ended with Q ex- EvenQ,OddQ etc", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.6887974358935432`*^9}, {
  3.6887975307824464`*^9, 3.6887975318321395`*^9}, {3.6887975811271715`*^9, 
  3.688797592496301*^9}, {3.6887977027562904`*^9, 3.6887977044664373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Types of Testing Expressions", "Subsubsection",
 CellChangeTimes->{{3.6887975993108616`*^9, 3.688797614212903*^9}, 
   3.688798601675947*^9}],

Cell[CellGroupData[{

Cell["there are many types , main are following", "Item",
 CellChangeTimes->{{3.6887976195434685`*^9, 3.688797644292585*^9}}],

Cell[TextData[{
 StyleBox["Number Predicates", "Code"],
 "\[LineSeparator]    \[LineSeparator]           ",
 StyleBox["With Q -", "Code"],
 "  IntegerQ[x],EvenQ[x],OddQ[x],PrimeQ[x],CoprimeQ[x1,x2,...]\[LineSeparator]\
              PossibleZeroQ[x] - if it is possible to get 0 with expression \
inside any time \[LineSeparator]          \[LineSeparator]           ",
 StyleBox["With Out Q - ", "Code"],
 " Positive,Negative,NonPositive,NonNegative          "
}], "Item",
 CellChangeTimes->{{3.6887976195434685`*^9, 3.6887976928256483`*^9}, {
  3.6887979558352184`*^9, 3.6887979666409845`*^9}, {3.688798177805189*^9, 
  3.6887981864169483`*^9}, {3.6887982377458916`*^9, 3.688798430971812*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6887984799386716`*^9, 3.6887984809313354`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "for", " ", "selecting", " ", "odd", " ", "numbers", " ", "from", " ", 
    "given", " ", "list", " ", "we", " ", "can", " ", "use", " ", "OddQ", " ",
     "predicate"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Select", "[", 
   RowBox[{"mlist", ",", "OddQ"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887972071381645`*^9, 3.688797243607638*^9}, 
   3.688798485353916*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887984860173593`*^9, 3.688798503463029*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"mlist", ",", "PrimeQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887985077985897`*^9, 3.688798516685527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.6887985170547743`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating our own Predicate ", "Subsection",
 CellChangeTimes->{{3.688798692955434*^9, 3.6887987001242313`*^9}}],

Cell[CellGroupData[{

Cell["we can also use our own predicate to test the values", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.688798799107692*^9}}],

Cell["\<\
In this case the value of list will be supplied to Hash \[OpenCurlyQuote]#\
\[CloseCurlyQuote] sign and then we can test our condition \
\>", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.6887988456639004`*^9}}],

Cell["And \[OpenCurlyQuote]&\[CloseCurlyQuote] sign is used to tell the end \
of condition", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.688798856724831*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688798723782589*^9, 3.6887987332354336`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6887987335756626`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"alist", ",", 
   RowBox[{
    RowBox[{"#", ">", "4"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.688798736647715*^9, 3.688798760659309*^9}, {
   3.688798793932227*^9, 3.688798794303479*^9}, 3.688798859355589*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.688798748565688*^9, 3.6887987615078754`*^9}, 
   3.688798795258115*^9, 3.688798865143461*^9}]
}, Open  ]],

Cell["\<\
if we want to get n elements from the output we can give another attributes\
\[LineSeparator]it will return only first n which has passed the test\
\>", "Item",
 CellChangeTimes->{{3.688798967662702*^9, 3.6887990078056116`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"alist", ",", 
    RowBox[{
     RowBox[{"#", ">", "4"}], "&"}], ",", "2"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "only", " ", "2", " ", "will", " ", "come", " ", "from", " ", "all", " ", 
    "result"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6887990103853416`*^9, 3.6887990332431636`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887990195354586`*^9, 3.688799033566383*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deleting Duplicate values from a list", "Section",
 CellChangeTimes->{{3.688799090793316*^9, 3.688799096777318*^9}}],

Cell[CellGroupData[{

Cell["\<\
for deleting duplicate value we can use DeleteDuplicates[list]\
\>", "Item",
 CellChangeTimes->{{3.6887990999174194`*^9, 3.688799146310629*^9}}],

Cell["order will be maintained as the original", "Item",
 CellChangeTimes->{{3.6887990999174194`*^9, 3.6887991552436047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
    "6"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6887991330221753`*^9, 3.688799142626604*^9}, {
  3.6887995232811117`*^9, 3.688799524018608*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.688799169157509*^9, 3.688799524780114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688799157831333*^9, 3.688799163411065*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "12", ",", "3", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887991637853174`*^9, 3.68879917146605*^9}, 
   3.6887995271426945`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining Multiple Lists ", "Section",
 CellChangeTimes->{{3.6887991830768185`*^9, 3.6887991894761267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list1", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688799192952454*^9, 3.6887992076458125`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.68879920799705*^9, 3.688799314773139*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list2", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688799209627138*^9, 3.6887992223956842`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.688799319059003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list3", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"5", ",", "50", ",", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887992862309823`*^9, 3.6887993311706295`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", 
   "40", ",", "45", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{3.688799302130147*^9, 3.688799332265359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Join[list1,list2,list3...]", "Subsection",
 CellChangeTimes->{{3.6887999814691887`*^9, 3.6888000042461147`*^9}}],

Cell["\<\
we can use Join[l1,l2,l3.....] function which can join n lists and return \
joined\
\>", "Item",
 CellChangeTimes->{{3.6887992261451902`*^9, 3.688799273023145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"list1", ",", "list2", ",", "list3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887992754587765`*^9, 3.6887992842396483`*^9}, {
  3.688799337508868*^9, 3.6887993403627768`*^9}, {3.6887993866253815`*^9, 
  3.6887994026716385`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50",
    ",", "60", ",", "70", ",", "80", ",", "90", ",", "100", ",", "5", ",", 
   "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", 
   ",", "45", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{
  3.688799340745033*^9, {3.6887993891090393`*^9, 3.6887994032910533`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 if we do not want duplicate to come we can use Union[l1,l2,....]\
\>", "Item",
 CellChangeTimes->{{3.688799442007585*^9, 3.6887994950269055`*^9}}],

Cell["\<\
Note- Union gives Sorted output (DeleteDuplicates[] do not) and remove \
duplicates\
\>", "Item",
 CellChangeTimes->{{3.688799442007585*^9, 3.6887995486255984`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.688799630629982*^9, 3.6887996391506834`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887996351570096`*^9, 3.6887996396019845`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.688799642305794*^9, 3.6887996660513315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6887996667898273`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Union[list1,list2,list3...] and Union[list]", "Subsection",
 CellChangeTimes->{{3.6888000248186646`*^9, 3.6888000415393677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"alist", ",", "blist"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"sorted", " ", "and", " ", "remove", " ", "duplicate"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.688799669091366*^9, 3.688799690554242*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12", ",", "21"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6887996757528214`*^9, 3.6887996926226263`*^9}}]
}, Open  ]],

Cell["\<\
 we some times use Union on a single list to sort and remove duplicate\
\>", "Item",
 CellChangeTimes->{{3.688799694485873*^9, 3.6887997100918436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.6887997194681168`*^9, 3.688799719994466*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.6887997204647827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688799723748977*^9, 3.6887997267465167`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.6887997270937505`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Intersection[list1,list2,list3...] and Intersection[list]", "Subsection",
 CellChangeTimes->{{3.688800050478381*^9, 3.6888000602052693`*^9}}],

Cell["\<\
Intersection[l1,l2,....] is same  as Union[] it give intersection and sorted \
\>", "Item",
 CellChangeTimes->{{3.6887997606677294`*^9, 3.688799805564452*^9}}],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.6887998091860056`*^9, 3.6887998096993494`*^9}, 
   3.6888000705408387`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.6887998103597946`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["blist"], "Input",
 CellChangeTimes->{{3.6887998110032234`*^9, 3.688799811644651*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.688799811970868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{"alist", ",", "blist"}], "]"}]], "Input",
 CellChangeTimes->{{3.688799813554931*^9, 3.688799820265419*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.6887998206286592`*^9}]
}, Open  ]],

Cell["\<\
on one list it will only sort and remove duplicate same as Union[]\
\>", "Item",
 CellChangeTimes->{{3.688799838625217*^9, 3.688799851298224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Intersection", "[", "alist", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.688799822656019*^9, 3.6887998335388145`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.688799830934072*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Riffle", "Subsection",
 CellChangeTimes->{{3.688800074262714*^9, 3.688800076885058*^9}}],

Cell["we can use Riffle[]  to interperse data of two list", "Item",
 CellChangeTimes->{{3.688800139322042*^9, 3.688800157247795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.688800167680044*^9, 3.6888001866337514`*^9}, {
  3.6888002345623255`*^9, 3.6888002391094427`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{{3.688800168883234*^9, 3.6888001868837647`*^9}, 
   3.6888002500660744`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6888001886807337`*^9, 3.6888002032729626`*^9}, {
  3.688800244581406*^9, 3.6888002468784037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.688800203772986*^9, 3.688800247831582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{"alist", ",", "blist"}], "]"}]], "Input",
 CellChangeTimes->{{3.688800205835593*^9, 3.6888002147742996`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "x", ",", "b", ",", "y", ",", "c", ",", "z"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6888002151649437`*^9, 3.6888002518786736`*^9}]
}, Open  ]],

Cell["\<\
if one ends before other cyclically value will be take for that list\
\>", "Item",
 CellChangeTimes->{{3.68880021855575*^9, 3.6888002274242587`*^9}, {
  3.6888002682959814`*^9, 3.6888002766870584`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6888002805622644`*^9, 3.6888003290566597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "x", ",", "b", ",", "y", ",", "c", ",", "x", ",", "d", ",", "y", 
   ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{{3.688800293127588*^9, 3.688800329728573*^9}}]
}, Open  ]],

Cell["for more see refrence", "Item",
 CellChangeTimes->{{3.688800336573354*^9, 3.6888003742801695`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrices and Vectors in Mathematica", "Chapter",
 CellChangeTimes->{{3.689921686311863*^9, 3.689921693403593*^9}}],

Cell[CellGroupData[{

Cell["Creating Matrices and Vectors", "Section",
 CellChangeTimes->{{3.689922246096796*^9, 3.6899222530994687`*^9}}],

Cell[CellGroupData[{

Cell["\<\
vectors are simply list, vectors could be either row or column vector\
\>", "Item",
 CellChangeTimes->{{3.689921698188785*^9, 3.689921745391843*^9}, {
  3.6899222257452207`*^9, 3.6899222376561646`*^9}}],

Cell["Matrices can be seen as 2D vector or list", "Item",
 CellChangeTimes->{{3.689921698188785*^9, 3.689921765330381*^9}, {
  3.6899224637495546`*^9, 3.689922466693447*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vect1", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899217691234736`*^9, 3.68992177991567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.689921780689186*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899217823502927`*^9, 3.6899217978686485`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689921791414345*^9, 3.6899218048383017`*^9}, 
   3.6899220153441505`*^9}]
}, Open  ]],

Cell["\<\
we can convert our matrix to symbolic matrix for using MatrixForm[mat] \
function\
\>", "Item",
 CellChangeTimes->{{3.689921947329299*^9, 3.6899219675838146`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat2", "=", 
  RowBox[{"MatrixForm", "[", "Mat1", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899219703356533`*^9, 3.6899220123161297`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.689921977952733*^9, 3.689922019708062*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NOTE", "-", " ", 
  RowBox[{
  "We", " ", "never", " ", "able", " ", "to", " ", "apply", " ", "any", " ", 
   "operation", " ", "on", " ", "matrix", " ", "form", " ", "it", " ", "is", 
   " ", "just", " ", "for", " ", "demonstration", " ", "in", " ", "visual", 
   " ", 
   RowBox[{"manner", "."}]}]}]], "Input",
 CellChangeTimes->{{3.689924972503436*^9, 3.689925005386381*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Mat1"], "Input",
 CellChangeTimes->{{3.689921993257943*^9, 3.689921995596509*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689921995961753*^9, 3.68992202195356*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat1", "=", 
  RowBox[{"Mat1", "+", "1", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "matrix", " ", "addition", " ", "operation", " ", "can", " ", "be", " ", 
     "applied"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.689922000671894*^9, 3.689922004100187*^9}, {
  3.6899221901103415`*^9, 3.6899222035955195`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6899220045364685`*^9, 3.689922024959567*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat2", "=", 
  RowBox[{"Mat2", "+", "1", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"addition", " ", 
     RowBox[{"can", "'"}], "t", " ", "be", " ", "applied", " ", "as", " ", 
     "it", " ", "is", " ", "symbolic"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6899220563264503`*^9, 3.689922061799097*^9}, {
  3.6899221682446156`*^9, 3.689922182731411*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "2", "3"},
      {"4", "5", "6"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{3.68992206227542*^9, 3.689922183107669*^9}]
}, Open  ]],

Cell["\<\
 here we have used a different variable to get into matrix form because once \
a variable is converted into matrix form it just remain for symbolic \
representation and matrix operations such addition,subtraction etc can\
\[CloseCurlyQuote]t be applied to it;\
\>", "Item",
 CellChangeTimes->{{3.6899220641486683`*^9, 3.689922164902385*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operations on Matrices", "Section",
 CellChangeTimes->{{3.689922258727228*^9, 3.6899222643950176`*^9}}],

Cell[CellGroupData[{

Cell["addition and subtraction", "Subsection",
 CellChangeTimes->{{3.689922726459812*^9, 3.6899227313050413`*^9}}],

Cell[CellGroupData[{

Cell["\<\
addition  and subtraction are  simply operations in which  correponding \
elements of matrices are added/subtracted.\
\>", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.68992239621894*^9}}],

Cell["\<\
adding,subtracting,diving and multipling using scalar do it for every \
elements.\
\>", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.6899224444136567`*^9}, {3.689922584663975*^9, 
  3.6899225846689787`*^9}}],

Cell["matrices of same dimensions can be added/subtracted only", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.6899224444136567`*^9}, {3.689922584663975*^9, 
  3.6899226054810133`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.68992234403312*^9, 3.689922357172894*^9}, {
  3.6899226115981026`*^9, 3.689922611711172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922357442068*^9, 3.6899226200419335`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899223579434023`*^9, 3.6899223721758995`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922373618859*^9, 3.6899226229418693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat3", "=", 
  RowBox[{"mat1", "+", "mat2"}]}]], "Input",
 CellChangeTimes->{{3.689922375822329*^9, 3.689922385852023*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899226776851325`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat4", "=", 
   RowBox[{"mat1", "-", "mat2"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.689922679740505*^9, 3.6899226967098255`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922697275203*^9}]
}, Open  ]],

Cell["\<\
to get dimension of a  matrix or vector we can use Dimensions[mat] method\
\>", "Item",
 CellChangeTimes->{{3.6899224857701917`*^9, 3.6899225118203793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat3", "]"}]], "Input",
 CellChangeTimes->{{3.6899225505702314`*^9, 3.689922554388779*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6899225548100576`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiplication", "Subsection",
 CellChangeTimes->{{3.689922747235174*^9, 3.6899227505093637`*^9}, 
   3.689922989022394*^9}],

Cell[CellGroupData[{

Cell["\<\
for matrix multiplication no. of columns in first should be equal to no. of \
rows in second\
\>", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.6899227825803547`*^9}}],

Cell["\<\
matrix multiplication in not commutative but it is associative.\
\>", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.689922802785838*^9}, {
  3.6899229967765923`*^9, 3.6899229967815704`*^9}}],

Cell["operator id dot(.)", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.689922802785838*^9}, {
  3.6899229967765923`*^9, 3.6899230143773127`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"2", " ", "by", " ", "3"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899230167829247`*^9, 3.689923096450742*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899230186461697`*^9, 3.6899230617265463`*^9, 
  3.689923097430396*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"3", " ", "by", " ", "2"}], "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.689923023535987*^9, 3.6899230239882917`*^9}, {
  3.6899230697579393`*^9, 3.689923107276969*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899230248308506`*^9, 3.689923080212909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat5", "=", 
  RowBox[{"mat1", " ", ".", " ", "mat2", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"we", " ", "get", " ", "2", "*", " ", "2"}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.689922805849882*^9, 3.689922827000002*^9}, {
  3.689922873898287*^9, 3.689922874634778*^9}, {3.6899231234637656`*^9, 
  3.689923171935214*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"22", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "40"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689923125124873*^9, 3.6899231380885243`*^9}, {
  3.689923170214066*^9, 3.6899231730169387`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating Matrices", "Section",
 CellChangeTimes->{{3.689924381318465*^9, 3.689924385737419*^9}}],

Cell[CellGroupData[{

Cell["\<\
for generating a matrix having all elements as some constant value we can \
\[LineSeparator]use ConstantArray [x,{n,m,...}] \[LineSeparator]x- constant \
value\[LineSeparator]n,m,.... - dimensions of the matrix\
\>", "Item",
 CellChangeTimes->{{3.689924391537284*^9, 3.689924397645361*^9}, {
  3.689924485808748*^9, 3.6899245805103226`*^9}, {3.6899246561245933`*^9, 
  3.689924656127595*^9}}],

Cell["\<\
we can use this formula for creating just a list having some constant value\
\>", "Item",
 CellChangeTimes->{{3.689924391537284*^9, 3.689924397645361*^9}, {
  3.689924485808748*^9, 3.6899245805103226`*^9}, {3.6899246561245933`*^9, 
  3.689924683537887*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689924583241144*^9, 3.6899246054179463`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689924595635416*^9, 3.6899246060713797`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689924612193799*^9, 3.689924615524027*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "2", "2", "2"},
     {"2", "2", "2", "2"},
     {"2", "2", "2", "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899246162735257`*^9}]
}, Open  ]],

Cell["\<\
for creating identity matix we use IdentityMatrix[n] , for n by n matrix\
\>", "Item",
 CellChangeTimes->{{3.689924701704008*^9, 3.6899247301469836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imat", "=", 
  RowBox[{"IdentityMatrix", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899247342727375`*^9, 3.689924739590294*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.689924739927513*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "imat", "]"}]], "Input",
 CellChangeTimes->{{3.689924742751397*^9, 3.6899247455362597`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0"},
     {"0", "0", "1", "0", "0"},
     {"0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.689924745851463*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transposing a Matrix", "Section",
 CellChangeTimes->{{3.6899248006008325`*^9, 3.6899248071602073`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899248093766885`*^9, 3.689924832107856*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899248341592236`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"MatrixForm", "[", "mat1", "]"}]}]], "Input",
 CellChangeTimes->{{3.689924942502418*^9, 3.6899249499513845`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"2", "3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899249503356423`*^9}]
}, Open  ]],

Cell["for transposing we use Transpose[mat] function", "Item",
 CellChangeTimes->{{3.689924891090212*^9, 3.689924909258051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "mat1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899249112153616`*^9, 3.6899249538840084`*^9}, {
  3.6899250149627705`*^9, 3.6899250221935954`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"2", "3"},
     {"3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.689924935730551*^9, 3.6899249545404453`*^9}, 
   3.689925022603863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["for find inverse we use Inverse[mat] method", "Item",
 CellChangeTimes->{{3.689925035565509*^9, 3.6899250670156155`*^9}}],

Cell["we need to have square matrix for this", "Item",
 CellChangeTimes->{{3.689925035565509*^9, 3.689925075504281*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.689925051618114*^9, 3.6899251064642887`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689925115289177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"invmat3", "=", 
  RowBox[{"Inverse", "[", "mat3", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899251199823093`*^9, 3.689925135041356*^9}, {
  3.689925184000023*^9, 3.6899251972841005`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899251975823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat3", " ", ".", " ", "invmat3", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"a", " ", "*", " ", "inv", 
     RowBox[{"(", "a", ")"}]}], " ", "=", " ", "identity"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689925202249417*^9, 3.689925228592148*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899252087499795`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elementwise Calculations in Matrices", "Section",
 CellChangeTimes->{{3.6899253066732483`*^9, 3.689925316026492*^9}}],

Cell[CellGroupData[{

Cell["\<\
in elementwise calculations corresponding elements of each matrix are picked \
up and perform operation with each other\
\>", "Item",
 CellChangeTimes->{{3.6899254059437604`*^9, 3.68992544677*^9}}],

Cell["\<\
matrix multiplication is denoted by dot (. ), while element wise \
multiplication is shown by astric(*) or space.(as before) \
\>", "Item",
 CellChangeTimes->{{3.6899254059437604`*^9, 3.6899254836040087`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.689925317478456*^9, 3.689925325762538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689925327189702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899253276670246`*^9, 3.689925346035282*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899253464755735`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "mat2", "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat1", "  ", "mat2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899253478635006`*^9, 3.689925375271292*^9}, 
   3.689925487797814*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "16", "27"},
     {"40", "55", "72"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6899253519732447`*^9, 3.6899253755164547`*^9}, 
   3.6899254882060776`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat1", "+", "mat2"}], "]"}]], "Input",
 CellChangeTimes->{{3.689925383004453*^9, 3.689925387076175*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"8", "10", "12"},
     {"14", "16", "18"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899253874324055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat1", "/", "mat2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899253887873096`*^9, 3.6899253977973237`*^9}, {
  3.689925500952712*^9, 3.689925501184868*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "7"], 
      FractionBox["1", "4"], 
      FractionBox["1", "3"]},
     {
      FractionBox["2", "5"], 
      FractionBox["5", "11"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899253983186707`*^9, 3.6899255018663244`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Referring to matrix rows and columns", "Section",
 CellChangeTimes->{{3.6899255342497835`*^9, 3.6899255457264404`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "14", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.689925550788823*^9, 3.6899255633311872`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "14", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899255636724167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.6899255684846296`*^9, 3.689925572182093*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "14", "21"},
     {"8", "9", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.689925572588367*^9}]
}, Open  ]],

Cell["\<\
for referring value in 2D array(matrix ) we need row and column so we will \
provide two argument in mat[ [ i , j ] ] insted of 1 in array a [ [ i ] ]\
\>", "Item",
 CellChangeTimes->{{3.6899256020620365`*^9, 3.6899256732767496`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "remember", " ", "here", " ", "we", " ", "have", " ", "1", " ", "based", 
    " ", "indexing"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899256774215155`*^9, 3.6899257007430763`*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.689925682743065*^9}]
}, Open  ]],

Cell["for getting while row or column we use \[OpenCurlyQuote]All\
\[CloseCurlyQuote] keyword", "Item",
 CellChangeTimes->{{3.6899257289699106`*^9, 3.6899257457441044`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "gives", " ", "all", " ", "columns", " ", "for", " ", "row", " ", "1"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899257625713434`*^9, 3.6899257836025944`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "14", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{3.689925769400898*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.689925787810398*^9, 3.6899257929448223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.6899257934441576`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
similary as simple list we can also provide range of indexes instead of \
\[OpenCurlyQuote]All\[CloseCurlyQuote] using  double semi colon \
\[OpenCurlyQuote];;\[CloseCurlyQuote]\
\>", "Item",
 CellChangeTimes->{{3.689925809301897*^9, 3.689925851969365*^9}}],

Cell["we can also provide list of index as list ", "Item",
 CellChangeTimes->{{3.689925809301897*^9, 3.689925865454362*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"same", " ", "as", " ", "simple", " ", "list"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689925867162507*^9, 3.6899259221199665`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "14", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{{3.689925877231223*^9, 3.689925902418028*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899258796728535`*^9, 3.6899259086659985`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{{3.6899258907112155`*^9, 3.689925909144309*^9}}]
}, Open  ]],

Cell["\<\
we can also change value using the above method as we are using with lists\
\>", "Item",
 CellChangeTimes->{{3.6899259488267417`*^9, 3.689925963442492*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mat", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All"}], "]"}], "]"}], "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.6899259660764446`*^9, 3.6899259725847883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689925977018749*^9, 3.6899259857715883`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"100", "100", "100"},
     {"8", "9", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6899259778523035`*^9, 3.6899259861208215`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899260158656693`*^9, 3.6899260162759485`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899257540776787`*^9, 3.689925759173071*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Converting matrix to list", "Section",
 CellChangeTimes->{{3.6899260233186436`*^9, 3.6899260281338525`*^9}}],

Cell["we can use Flatten[mat] method to convert matrix to list", "Item",
 CellChangeTimes->{{3.6899260292776175`*^9, 3.6899260460759583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899260469035187`*^9, 3.6899260564448853`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689926056672036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689926057114324*^9, 3.689926060248422*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.689926060560627*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899259326288195`*^9, 3.689925945916686*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions in Mathematica", "Chapter",
 CellChangeTimes->{{3.690081272199855*^9, 3.6900812796488256`*^9}}],

Cell[CellGroupData[{

Cell["Creating a Function", "Section",
 CellChangeTimes->{{3.6900812857038593`*^9, 3.6900812897005215`*^9}}],

Cell["\<\
syntax for defining a function is different from other languages here,\
\[LineSeparator]syntax is \
\>", "Item",
 CellChangeTimes->{{3.690081641152027*^9, 3.690081682985259*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<", "function_name", ">", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"<", "var_name", ">", "_"}], ",", 
     RowBox[{"<", "var_name", ">", "_"}], ",", ".."}], "]"}]}], " ", ":=", 
  " ", 
  RowBox[{"<", "expression_here", ">"}]}]], "Code",
 CellChangeTimes->{{3.690081695061311*^9, 3.6900817487531056`*^9}}],

Cell[CellGroupData[{

Cell["\<\
underscore( _ ) is used after each variable name to show it is a argument \
variable.\
\>", "Item",
 CellChangeTimes->{{3.6900817615676484`*^9, 3.690081806385604*^9}}],

Cell["example for making a function for mulitplying a number by 2", "Item",
 CellChangeTimes->{{3.6900817615676484`*^9, 3.690081819981668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"timestwo", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"x", "*", "2"}]}], ";"}], " ", 
  RowBox[{"(*", "definition", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"timestwo", "[", "10", "]"}], " ", 
  RowBox[{"(*", "calling", "*)"}]}]}], "Code",
 CellChangeTimes->{{3.6900818285732403`*^9, 3.690081843947489*^9}, {
   3.690082679507364*^9, 3.6900827469324646`*^9}, 3.6900827911959753`*^9, {
   3.6900828524780345`*^9, 3.690082875152149*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690082856829937*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 it is a good practice to not use Camel notation for user defined functions \
to that we never get conflict with already defined functions\
\>", "Item",
 CellChangeTimes->{{3.690083145057044*^9, 3.6900831764479713`*^9}}],

Cell["\<\
pass by value mechanism is followed in mathematica and so a variable passed \
will not change its value until we take it in return\
\>", "Item",
 CellChangeTimes->{{3.690082947009632*^9, 3.690082989553155*^9}}],

Cell["\<\
now if we pass some variable then its value value will not be changed until \
it is taken back reassigned.\
\>", "Item",
 CellChangeTimes->{{3.6900828901451483`*^9, 3.6900829420793505`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "10"}]], "Input",
 CellChangeTimes->{{3.6900829035921106`*^9, 3.6900829095640917`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.690082909984372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timestwo", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.690082911680503*^9, 3.6900829147085238`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690082915237874*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"remain", " ", "same", " ", "as", " ", "before"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.690082916241542*^9, {3.6900829999190736`*^9, 3.6900830075651636`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.690082916545745*^9, 3.690083008023468*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"timestwo", "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"for", " ", "getting", " ", "changed", " ", "val"}]}]}]], "Input",
 CellChangeTimes->{{3.6900828268311977`*^9, 3.6900828447849092`*^9}, {
  3.6900830210061235`*^9, 3.6900830427496214`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690083024492447*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.6900830254440813`*^9}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6900830257152634`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"let", " ", "us", " ", "make", " ", "a", " ", "function", " ", "for",
   " ", "power"}]], "Item", "Input",
 CellChangeTimes->{{3.690082846542076*^9, 3.6900828465460777`*^9}, {
  3.6900831161682215`*^9, 3.6900831265527096`*^9}, {3.690083231210044*^9, 
  3.6900832375902987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"power", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{"a", "^", "b"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"power", "[", 
  RowBox[{"2", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.690083239217383*^9, 3.6900832713424063`*^9}}],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{{3.6900832430319257`*^9, 3.690083272024861*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clearing/Deleting a function", "Section",
 CellChangeTimes->{{3.690083304763583*^9, 3.69008331309914*^9}}],

Cell["\<\
we can delete a function from its existence using Clear[fn_name] method same \
as variables.\
\>", "Item",
 CellChangeTimes->{{3.690083314846305*^9, 3.690083336951041*^9}, {
  3.6900841931130247`*^9, 3.690084197529971*^9}, {3.6900863718850145`*^9, 
  3.690086374072483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "power", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "removing", " ", "power", " ", "function", " ", "from", " ", "memory"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690083356340968*^9, 3.69008339207022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"power", "[", 
   RowBox[{"2", ",", "5"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"now", " ", 
    RowBox[{"power", "[", "]"}], " ", "is", " ", "not", " ", "availabe"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690083360855977*^9, 3.690083379585372*^9}}],

Cell[BoxData[
 RowBox[{"power", "[", 
  RowBox[{"2", ",", "5"}], "]"}]], "Output",
 CellChangeTimes->{3.6900833650547776`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding comments and documentation", "Section",
 CellChangeTimes->{{3.6900836043330193`*^9, 3.6900836167172756`*^9}}],

Cell[CellGroupData[{

Cell[" for comment we can use (* and *) in mathematica", "Item",
 CellChangeTimes->{{3.6900836193240137`*^9, 3.690083633514475*^9}}],

Cell["\<\
when we define a function we may add some documentation to it so that any one \
can easily able to understand the basic functionality of that funciton.\
\>", "Item",
 CellChangeTimes->{{3.6900836193240137`*^9, 3.690083681905259*^9}, {
  3.6900863518430333`*^9, 3.6900863529417644`*^9}}],

Cell["\<\
 for getting help about any method we can use ?<function_name> \
\>", "Item",
 CellChangeTimes->{{3.6900837201715956`*^9, 3.690083746236973*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ex", " ", "-", 
  RowBox[{"for", " ", "Plot", " ", "function", " "}]}]], "Input",
 CellChangeTimes->{{3.6900837488957458`*^9, 3.6900837573904085`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Plot"}]], "Input",
 CellChangeTimes->{{3.6900837606615906`*^9, 3.6900837618764*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function of \\!\\(\
\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several functions \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"}\\\"}], \\\"\
\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) takes \
the variable \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to be in the \
geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690083762330702*^9},
 CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"power", "[", 
    RowBox[{"a_", ",", "exp_"}], "]"}], ":=", 
   RowBox[{"a", "^", "exp"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69008368494158*^9, 3.6900837036460495`*^9}}],

Cell["\<\
for adding help or documentation we need to use usage keyword\
\>", "Item",
 CellChangeTimes->{{3.6900837082336383`*^9, 3.690083714862057*^9}, {
  3.6900837860995474`*^9, 3.690083806902943*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"power", "::", "usage"}], "=", 
   "\"\< gives a to the power exp \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.690083841583583*^9, 3.690083870727542*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "power"}]], "Input",
 CellChangeTimes->{{3.690083875385648*^9, 3.6900838852942533`*^9}}],

Cell[BoxData[
 StyleBox["\<\" gives a to the power exp \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900838858596306`*^9},
 CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6900839035979924`*^9}]
}, Open  ]],

Cell[CellGroupData[{

->{654, 659},
WindowMargins->{{Automatic, 21}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{32000,,

Cell[CellGroupData[{

Cell["\<\
 one of the most ofter problem in mathematica is that the variables and \
function do not go away if we create a new notebook they remain in RAM.\
\>", "Item",
 CellChangeTimes->{{3.6900843201649323`*^9, 3.6900843754802685`*^9}}],

Cell["\<\
so if i define a variable and create a new notebook then i will be able to \
find it there as well, it might cause some problem so Clear[] if some problem \
occurs.\
\>", "Item",
 CellChangeTimes->{{3.6900843201649323`*^9, 3.6900844199196663`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting in Mathematica", "Chapter",
 CellChangeTimes->{{3.6900845061642003`*^9, 3.690084512661532*^9}}],

Cell[CellGroupData[{

Cell["Barchart ", "Section",
 CellChangeTimes->{{3.6900858863317347`*^9, 3.69008588814194*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"alist", "=", 
   RowBox[{"{", 
    RowBox[{"4500", ",", "3000", ",", "2150", ",", "5879"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6900858913791018`*^9, 3.690085910487838*^9}, 
   3.690085995270364*^9}],

Cell["\<\
for making barchart from a data we have to use Barchart[list] keyword\
\>", "Item",
 CellChangeTimes->{{3.6900859113874383`*^9, 3.6900859319991827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6900859848334045`*^9, 3.690086032086138*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 
            4500.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.949181437280785`, 
           115.23823737572286`}, {-57.36468163998896, 108.25674931298138`}}],
         StatusArea[#, 4500]& ,
         TagBoxNote->"4500"],
        StyleBox["4500", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4500, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 3000.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{122.43918674581329`, 
           203.72824268425535`}, {-2.3408713223321485`, 108.2567493129814}}],
         StatusArea[#, 3000]& ,
         TagBoxNote->"3000"],
        StyleBox["3000", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3000, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 2150.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{210.9291920543458, 292.21824799278795`}, {
           28.839287857673355`, 108.25674931298141`}}],
         StatusArea[#, 2150]& ,
         TagBoxNote->"2150"],
        StyleBox["2150", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2150, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 5879.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{299.4191973628783, 
           380.70825330132044`}, {-107.94990459202141`, 108.2567493129814}}],
         StatusArea[#, 5879]& ,
         TagBoxNote->"5879"],
        StyleBox["5879", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5879, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5437956204379562, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}],
          LineBox[{{4.456204379562044, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
            0.}]}], {{}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690086004224331*^9, 3.6900860327035465`*^9}}]
}, Open  ]],

Cell["BarChart3D[list] forms a 3D chart which we can roll ", "Item",
 CellChangeTimes->{{3.690086053959715*^9, 3.690086069780262*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart3D", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6900860715774755`*^9, 3.6900860777005415`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{
     {EdgeForm[GrayLevel[0.85]], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0.985, 0.02, 0.02}], 
        Scaled[{0.985, 0.98, 0.02}], Scaled[{0.015, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0.985, 0.02, 0.02}], 
        Scaled[{1, 0, 0}], Scaled[{0, 0, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.985, 0.02, 0.02}], Scaled[{1, 0, 0}], Scaled[{1, 1, 0}], 
        Scaled[{0.985, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{1, 1, 0}], Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0, 0, 0}], 
        Scaled[{0, 0.99999, 0}], Scaled[{0.015, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0, 0, 0}], Scaled[{1, 0, 0}], Scaled[{1, 1, 0}], 
        Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}]}, 
     {Opacity[0], EdgeForm[None], 
      CuboidBox[{{-0.21440000000000003`, -0.25, 0}, {4.502400000000001, 1.25, 
        0.024}}]}, 
     {EdgeForm[None], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{0.985, 0.98, 0.98}], Scaled[{0.015, 0.98, 0.98}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{1, 1, 0}], Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{1, 1, 0}], Scaled[{1, 1, 1}], Scaled[{0.985, 0.98, 0.98}], 
        Scaled[{0.985, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.98}], Scaled[{0.985, 0.98, 0.98}], 
        Scaled[{1, 1, 1}], Scaled[{0, 1, 1}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0, 0.99999, 0}], 
        Scaled[{0, 1, 1}], Scaled[{0.015, 0.98, 0.98}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0, 0.99999, 0}], Scaled[{1, 1, 0}], Scaled[{1, 1, 1}], 
        Scaled[{0, 1, 1}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}]}},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], 
    {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
     0.1]}], 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{0., 0., 0.}, {0., 1., 0.}, {0., 1., 
              4500.}, {0., 0., 4500.}, {1., 0., 0.}, {1., 1., 0.}, {1., 1., 
              4500.}, {1., 0., 4500.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{46.20743986864818, 
           159.779061436419}, {-83.21950223347835, 136.37378414895548`}}],
         StatusArea[#, 4500]& ,
         TagBoxNote->"4500"],
        StyleBox["4500", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[4500, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{1.096, 0., 0.}, {1.096, 1., 0.}, {1.096, 
              1., 3000.}, {1.096, 0., 3000.}, {2.096, 0., 0.}, {2.096, 1., 
              0.}, {2.096, 1., 3000.}, {2.096, 0., 3000.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{147.1275984538591, 
           260.12552661233747`}, {-13.880210858410322`, 135.3451715846032}}],
         StatusArea[#, 3000]& ,
         TagBoxNote->"3000"],
        StyleBox["3000", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[3000, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{2.192, 0., 0.}, {2.192, 1., 0.}, {2.192, 
              1., 2150.}, {2.192, 0., 2150.}, {3.192, 0., 0.}, {3.192, 1., 
              0.}, {3.192, 1., 2150.}, {3.192, 0., 2150.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{249.15528327900472`, 361.84879689196106`}, {
           25.096820982287582`, 134.30542644237033`}}],
         StatusArea[#, 2150]& ,
         TagBoxNote->"2150"],
        StyleBox["2150", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[2150, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{3.2880000000000003`, 0., 0.}, {
              3.2880000000000003`, 1., 0.}, {3.2880000000000003`, 1., 
              5879.}, {3.2880000000000003`, 0., 5879.}, {4.288, 0., 0.}, {
              4.288, 1., 0.}, {4.288, 1., 5879.}, {4.288, 0., 5879.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{351.92128554502267`, 
           464.6845213304981}, {-156.39401390257723`, 133.25436700864333`}}],
         StatusArea[#, 5879]& ,
         TagBoxNote->"5879"],
        StyleBox["5879", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[5879, {"Graphics3DLabel"}], "Tooltip"]& ]}}}, {}, {}},
  Axes->{True, True, True},
  AxesEdge->{{-1, -1}, {1, -1}, {-1, 1}},
  AxesLabel->{None, None, None},
  BoxRatios->
   NCache[{1, 0.23320895522388058`, GoldenRatio^(-1)}, {
    1, 0.23320895522388058`, 0.6180339887498948}],
  Boxed->False,
  FaceGrids->{{{0, 1, 0}, {None, Automatic}}, {{0, 0, -1}, {
     None, None}}, {{-1, 0, 0}, {None, None}}},
  FaceGridsStyle->Automatic,
  ImageSize->{464.55063391082007`, 293.5159722282538},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRangePadding->Scaled[0.02],
  Ticks->{{{0, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.288, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.048, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.144, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.24, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {0., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}, {4.288, 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}}, {{0, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1., 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {0., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}, {1., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}}, Automatic},
  ViewPoint->{2.6324519069663888`, -10.02843701040368, -0.7075648987017805},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.690086078593136*^9, 3.6900861431009617`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
if we wanted to graph 2 or  series on a graph then we  can use a 2D list, \
where first row represents first value in all series and so on. \
\>", "Item",
 CellChangeTimes->{{3.690086128900497*^9, 3.6900861912290454`*^9}, {
  3.6900862871108775`*^9, 3.690086313913745*^9}, {3.690086358493465*^9, 
  3.690086366610509*^9}}],

Cell["\<\
each series is of a different color, so in following example we have 3 series \
and 2 values for (similarly for Bar3D)\
\>", "Item",
 CellChangeTimes->{{3.690086128900497*^9, 3.6900861912290454`*^9}, {
  3.6900862871108775`*^9, 3.6900863607729897`*^9}, {3.690086416678421*^9, 
  3.690086422754469*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"blist", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "200", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"400", ",", "500", ",", "600"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.69008619384379*^9, 3.6900862169612093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6900862191296515`*^9, 3.690086226074278*^9}, {
  3.6900863992514524`*^9, 3.690086427189429*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5141499085923217, 0.}]}, {{}, {{{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.6343692870201096, 0.}, {1.5484460694698354`, 
               100.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{28.062167808299794`, 82.11861403928971}, {
              72.70502430261682, 109.78430159583573`}}],
            StatusArea[#, 100]& ,
            TagBoxNote->"100"],
           StyleBox["100", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[100, {}], "Tooltip"]& ]}, 
        {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.6343692870201096`, 0.}, {2.5484460694698354`, 
               200.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{86.59821998500274, 140.65466621599262`}, {
              36.175747009397895`, 109.78430159583573`}}],
            StatusArea[#, 200]& ,
            TagBoxNote->"200"],
           StyleBox["200", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[200, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.6343692870201094`, 0.}, {3.5484460694698354`, 
               300.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{145.13427216170567`, 
              199.1907183926956}, {-0.3535302838210157, 109.78430159583573`}}],
            StatusArea[#, 300]& ,
            TagBoxNote->"300"],
           StyleBox["300", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[300, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3.7312614259597807`, 0.}, {4.645338208409506, 
               400.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{209.34200763889356`, 
              263.3984538698835}, {-36.882807577039955`, 
              109.78430159583573`}}],
            StatusArea[#, 400]& ,
            TagBoxNote->"400"],
           StyleBox["400", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[400, {}], "Tooltip"]& ]}, 
        {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4.73126142595978, 0.}, {5.645338208409506, 500.}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{267.87805981559654`, 
              321.9345060465865}, {-73.41208487025887, 109.78430159583573`}}],
            StatusArea[#, 500]& ,
            TagBoxNote->"500"],
           StyleBox["500", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[500, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5.73126142595978, 0.}, {6.645338208409506, 600.}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{326.41411199229947`, 
              380.47055822328946`}, {-109.94136216347778`, 
              109.78430159583573`}}],
            StatusArea[#, 600]& ,
            TagBoxNote->"600"],
           StyleBox["600", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[600, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.5141499085923217, 0.}, {6.76796197440585, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.6343692870201096, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.6343692870201096, 0.}]}],
          LineBox[{{6.645338208409506, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {6.645338208409506, 
            0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
           LineBox[{{3.5484460694698354`, 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {3.5484460694698354`, 
              0.}]}], LineBox[{{3.731261425959781, 0.}, 
             Offset[{-1.102182119232618*^-15, -6.}, {3.731261425959781, 
              0.}]}]}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5141499085923217, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.639853747714808, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {4.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.639853747714808, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {4.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.6900862265335855`*^9, {3.6900864054899597`*^9, 3.6900864278098373`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Histograms", "Section",
 CellChangeTimes->{{3.6900870427714715`*^9, 3.6900870462037663`*^9}}],

Cell["\<\
histograms tell us the frequency of data, x-axis is value and y-axis is \
frequency.\
\>", "Item",
 CellChangeTimes->{{3.69008718163198*^9, 3.690087229576903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "14", ",", "19", ",", "3", ",", "7", ",", "22", ",", "16", ",", 
    "14"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900870495509996`*^9, 3.6900870672009*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "14", ",", "19", ",", "3", ",", "7", ",", "22", ",", "16", ",", 
   "14"}], "}"}]], "Output",
 CellChangeTimes->{{3.6900870516023607`*^9, 3.6900870675201044`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.690087080798957*^9, 3.6900870845373325`*^9}, {
  3.690087131296259*^9, 3.690087154379843*^9}, {3.6900891971738567`*^9, 
  3.690089218891157*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6649999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6649999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {10., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{16.425800640512403`, 
          140.32247798238592`}, {-60.42604994827488, 106.28684442722334`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {20., 4}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{139.7724779823859, 
          263.66915532425946`}, {-115.8136814067743, 106.28684442722334`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{20., 0}, {30., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{263.1191553242594, 387.01583266613295`}, {
          50.34921296872393, 106.28684442722334`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.6, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 30.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.690087085279827*^9, {3.6900871328843193`*^9, 3.690087154857154*^9}}]
}, Open  ]],

Cell["\<\
one thing to that here 3 frequency if for [0..10) because 10 will be in next \
bucket.\
\>", "Item",
 CellChangeTimes->{{3.690087312662095*^9, 3.690087354632416*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scatter Plot", "Section",
 CellChangeTimes->{{3.690087412656469*^9, 3.6900874198606157`*^9}}],

Cell[CellGroupData[{

Cell["this is a simple plot which just plots some point in plan", "Item",
 CellChangeTimes->{{3.6900874264580145`*^9, 3.6900874487288837`*^9}}],

Cell["ListPlot[list] and ListPlot3D[list] can be used", "Item",
 CellChangeTimes->{{3.690087449988727*^9, 3.690087485002921*^9}, {
  3.690087645309656*^9, 3.6900876453156605`*^9}}],

Cell["\<\
here list contains all points in xy plane(if two values for each point)\
\[LineSeparator]if only one is given it will be considered as y value and X \
value will be taken as 1,2,3,5,.... and so on.\
\>", "Item",
 CellChangeTimes->{{3.690087449988727*^9, 3.690087485002921*^9}, {
   3.690087645309656*^9, 3.6900877643058896`*^9}, 3.6900878634900546`*^9, {
   3.6900896829894514`*^9, 3.6900897454850135`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900897225746636`*^9, 3.690089787634452*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 10.}, {2., 20.}, {3., 30.}, {4., 40.}, {5., 
    50.}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 0.}, {1., 10.}, {2., 
    20.}, {3., 30.}, {4., 40.}, {5., 50.}}, {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{6, 1}], 
       LineBox[{7, 2}], LineBox[{8, 3}], LineBox[{9, 4}], 
       LineBox[{10, 5}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{11, 12, 13, 14, 15}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 5.}, {0, 50.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900897369873514`*^9, 3.690089788094758*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"14", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.690087486642014*^9, 3.690087511494573*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6900919158743725`*^9, 3.690091915910388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6900919164377403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.690087623142211*^9, 3.690087627278961*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6900876276141863`*^9, 3.6900919193386755`*^9}]
}, Open  ]],

Cell["\<\
here size of points is very small so we can make them bigger using \
Properties, for this purpose we have \[OpenCurlyQuote]PointSize\
\[CloseCurlyQuote] Property and inside this we will set size using PointSize[]\
\>", "Item",
 CellChangeTimes->{{3.6900879055544696`*^9, 3.690087959813858*^9}, {
  3.6900879989653807`*^9, 3.6900880150182586`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Large", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900879625987167`*^9, 3.6900879844074764`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
     AbsoluteThickness[1.6], 
     PointBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6900879850218887`*^9, 3.690091931850795*^9}]
}, Open  ]],

Cell["\<\
we can also have points in 3d space giving 3 values to each point, but for \
this we have to use ListPlot3D[list] method\
\>", "Item",
 CellChangeTimes->{{3.690087867312601*^9, 3.6900878871101265`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"14", ",", "5", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "12", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "6", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900877716105776`*^9, 3.6900878005417457`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "12", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.69008780122219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6900878046254683`*^9, 3.6900878325970364`*^9}, {
  3.690088039449582*^9, 3.6900880897883415`*^9}, {3.6900919424928865`*^9, 
  3.6900919499236126`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxdVk2IHFUQntWDIEJ2J9PdMz2d+en5WbMkQYi5iIF3WclGT2ICBoVFSERh
jaAH9WJfRDAJIZGYrAcJ0fWw6k1X8dSgF0ERRS+uYOJJBFEv4kmtrvq+174u
Emrf9+rVq/qqXk2Pnzj78OnbWq3WK/L/9hblgDPdgb4bOmvoEfRiw47rOXQ3
1EXb9GgZONatyLTjOdxfJKbXZ8Bj6BT704Z/xHd9Etq1hqbLPMyjRB43x8AH
0LQjDjsHv6NRuM84isb5EnGX5I1xMf8+NM478Oh6wHG+2A8NPshvuQIdhX6F
h483dnc2dvtu7fJU/jHeIdZ97AMXHqrVzkbqZmrAvHOnZjs993p1bC33PPyr
0nUL/89LeLikdl13Vs9NPA8KX07cj3oP67bsdLkbu+Ma18zzcEzXsftE92se
LM4IcdY8PKMbHafH1shD2723LfLrzJ1Q2Yt7I3eyWn4/cdsqcchvyfxTr+38
EHqf51n1TdSxHHqeLQ/g7Av223X4dfs8z+F9medZ9Tr6oWz0fcm+5z54GgF3
fH/LiJv9Q//ot4L5Iz7hWXnbZl+xjivgje+TdWlbXX6bow6cAxHqO0Pdl2Cf
WJ2+mKLunAMpzk9Qd+DCs5b7ndzN9Q/WcYi+GqM/ERd5lnwWEIfZ5+j7Ae7h
3JlgnSFO8jFFn6V4N+wP5tOFv8S9uSnSQ7wyx776spK26buQt8y9MypYl3PP
xz/6nlLrxzvrOallu7Jo7+1l9hfnxtjOfZ3jXvZBbvY/zbx/5qP476h7Wc/d
ew9X0vF2ms9m5J6swp2Db5nDtNP9R+FX5qfl2zP9UOzj0PNnMCcc7vPzOXHq
7jnELXNVr93MwBP7d2x2h/vm/zzfG+3AS8H3wTlMzfnXD/FiEvLG8+v7PT8L
yOORqg5Rx/Ol72Nlyfgcxp4fO7dkdVzh+5zauznB/uDvT27+i722fyT1/Lyv
c6ttfo4PPM8nEYf5r3+H7L0ivnvGnk/yrvv38R1ntn46tv46knve7H2zLzin
yVti+6uc0z1bX2F/1XkdSx5//ptVfkcMffxrirM/6vgfUJz1zn38hnNe1vGf
O/TpLzfOxSEu8Zt95nln/K+pfTfExc+q2nM+13mZfRri4udGdXHOuPk7k7gL
ap+FuPh5W+1RDz9vE+DIs6j7zfyzL+v+/EvfP/u2njMvvlBJ4ztK8vvzj0o6
IS79eeCgyAecq/X7Pah4L8Sljk+pJCEu/fnulsgsCnG59+dbldTzXJXUcUvt
sxCXupt9L8QlnuFA5K0kxCWex05VEoW4xHPtDZEYc8r3YeYG6mcQ4tIn6uZU
FuIS51X1k4a4xPndt5U0+lziXNwjcpHx8Dszc3sUz0Jc7n1QpfFdKve+Wskd
3RCXez9Tgf+ynmOfK974juV3JueY/x0cuKP3V9INcbn3pap9/q5/H+n/ow8r
SUNc/GtfPdt4p+L/kDZQ4z2KH+2Trca7k35W+n/ouv8AixaUTQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{45, 1, 19}, {87, 55, 95}, {5, 3, 60}, {57, 31, 104}, {
          35, 2, 20}, {80, 50, 89}, {88, 56, 97}, {59, 42, 99}, {75, 39, 
          103}, {62, 24, 103}, {81, 49, 115}, {82, 50, 120}, {85, 54, 93}, {
          75, 40, 133}, {19, 18, 102}, {76, 44, 102}, {30, 1, 45}, {83, 51, 
          124}, {84, 53, 92}, {83, 52, 91}, {67, 33, 107}, {65, 32, 105}, {74,
           37, 125}, {60, 46, 5}, {88, 55, 133}, {70, 34, 111}, {77, 46, 
          104}, {12, 11, 91}, {77, 47, 6}, {41, 4, 56}, {79, 49, 8}, {82, 51, 
          90}, {78, 48, 7}, {11, 10, 90}, {13, 12, 92}, {10, 9, 89}, {86, 53, 
          131}, {14, 13, 94}, {15, 14, 96}, {18, 17, 101}, {84, 52, 128}, {16,
           15, 98}, {17, 16, 100}, {87, 54, 132}, {78, 47, 106}, {60, 3, 
          58}, {79, 48, 110}}], 
         Polygon3DBox[{{71, 70, 111, 112}, {41, 40, 25, 26}, {100, 99, 101, 
          17}, {69, 68, 108, 109}, {38, 37, 22, 23}, {6, 5, 46, 77}, {7, 6, 
          47, 78}, {68, 67, 107, 108}, {45, 44, 29, 30}, {9, 8, 49, 81}, {102,
           44, 45, 19}, {98, 97, 100, 16}, {76, 43, 28, 64}, {96, 95, 98, 
          15}, {94, 93, 96, 14}, {8, 7, 48, 79}, {43, 42, 27, 28}, {108, 107, 
          113, 114}, {74, 36, 21, 61}, {99, 42, 43, 101}, {126, 125, 129, 
          130}, {64, 29, 44, 76}, {125, 37, 38, 129}, {73, 72, 116, 117}, {
          119, 118, 123, 124}, {127, 126, 130, 131}, {131, 130, 85, 86}, {129,
           38, 39, 132}, {66, 65, 105, 106}, {112, 111, 118, 119}, {61, 22, 
          37, 74}, {113, 112, 119, 120}, {118, 117, 122, 123}, {123, 122, 127,
           128}, {109, 108, 114, 115}, {36, 35, 20, 21}, {86, 85, 93, 94}, {
          63, 27, 42, 59}, {122, 121, 126, 127}, {115, 114, 80, 81}, {72, 2, 
          35, 116}, {116, 35, 36, 121}, {117, 116, 121, 122}, {81, 80, 89, 
          9}}], Polygon3DBox[{{91, 52, 84, 92, 12}, {90, 51, 83, 91, 11}, {
          103, 24, 25, 40, 75}, {58, 57, 104, 46, 60}, {92, 53, 86, 94, 13}, {
          106, 105, 110, 48, 78}, {121, 36, 74, 125, 126}, {89, 50, 82, 90, 
          10}, {114, 113, 120, 50, 80}, {111, 34, 73, 117, 118}, {120, 119, 
          124, 51, 82}, {110, 109, 115, 49, 79}, {130, 129, 132, 54, 85}, {
          128, 127, 131, 53, 84}, {93, 54, 87, 95, 96}, {105, 32, 69, 109, 
          110}, {133, 40, 41, 56, 88}, {59, 4, 41, 26, 63}, {103, 39, 38, 23, 
          62}, {101, 43, 76, 102, 18}, {107, 33, 71, 112, 113}, {124, 123, 
          128, 52, 83}, {95, 55, 88, 97, 98}}], 
         Polygon3DBox[{{97, 56, 4, 59, 99, 100}, {104, 31, 66, 106, 47, 77}, {
          132, 39, 75, 133, 55, 87}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{19, 1, 30, 29, 64, 28, 27, 63, 26, 25, 24, 62, 23, 22, 61, 
       21, 20, 2, 72, 73, 34, 70, 71, 33, 67, 68, 69, 32, 65, 66, 31, 57, 58, 
       3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}]}, 
     {GrayLevel[0.2], Line3DBox[{19, 102, 76, 64}], Line3DBox[{58, 60, 5}], 
      Line3DBox[{6, 77, 104, 57}], Line3DBox[{7, 78, 106, 66}], 
      Line3DBox[{8, 79, 110, 105, 65}], Line3DBox[{9, 81, 115, 109, 69}], 
      Line3DBox[{10, 89, 80, 114, 108, 68}], 
      Line3DBox[{11, 90, 82, 120, 113, 107, 67}], 
      Line3DBox[{12, 91, 83, 124, 119, 112, 71}], 
      Line3DBox[{13, 92, 84, 128, 123, 118, 111, 70}], 
      Line3DBox[{14, 94, 86, 131, 127, 122, 117, 73}], 
      Line3DBox[{15, 96, 93, 85, 130, 126, 121, 116, 72}], 
      Line3DBox[{16, 98, 95, 87, 132, 129, 125, 74, 61}], 
      Line3DBox[{17, 100, 97, 88, 133, 75, 103, 62}], 
      Line3DBox[{18, 101, 99, 59, 63}]}, 
     {GrayLevel[0.2], Line3DBox[{19, 45, 30}], 
      Line3DBox[{20, 35, 116, 117, 118, 119, 120, 50, 89, 9}], 
      Line3DBox[{5, 46, 104, 31}], Line3DBox[{6, 47, 106, 105, 32}], 
      Line3DBox[{7, 48, 110, 109, 108, 107, 33}], 
      Line3DBox[{8, 49, 115, 114, 113, 112, 111, 34}], 
      Line3DBox[{10, 90, 51, 124, 123, 122, 121, 36, 21}], 
      Line3DBox[{11, 91, 52, 128, 127, 126, 125, 37, 22}], 
      Line3DBox[{12, 92, 53, 131, 130, 129, 38, 23}], 
      Line3DBox[{13, 94, 93, 54, 132, 39, 103, 24}], 
      Line3DBox[{14, 96, 95, 55, 133, 40, 25}], 
      Line3DBox[{15, 98, 97, 56, 41, 26}], Line3DBox[{16, 100, 99, 42, 27}], 
      Line3DBox[{17, 101, 43, 28}], Line3DBox[{18, 102, 44, 29}]}, {}, {}}},
   VertexNormals->CompressedData["
1:eJwVlmk8FfgbxQ0KJUQql0myNAojirSdqVCNtKeMJUtSkdBCyZCSUmlTJtFi
KansIqqffcu+XPvFdd3VvfZs4X//L55Xz6vzeb7nOUfN6fwhF1EREZFg4YgJ
J3SouCDJgE0iZO9SqsVp0LhoUOpn2AkH9a93w/KaYbogJny3Yj/8t1CDGt0a
oDT/debd4jpyNk3StynOg4QPnp8p/ibA5ge5RxUPvcQtqcL4y+/ZsLHR3upu
z8AYr8Zsp3IjCdmtlqwyGwlbwR7+JnsBHCsmFe96Ukm9ikiRnv4nOCyzz83h
8MFRfc5KK2ghNlWXdhXc/wz1Wd2I4BN8PJNiremQaSd5KwY2jf33HTv1dffN
fe+HwY3LoyKHOsnPEfOspOOFuCexSSZToh99G0de/7rdRVolPXV/nSqF9QKR
WicTHsTYo5IWLd3k0KMXok+9f+CNiK3+xGEujt17/7GY3kMGcm0C3S/X4JRs
3r9RxzgIUOLv2U+nE7+ABSOxn+vwdE9mWaopGwPO16sPNvWSmjvnvrATGtAZ
YJZCVWZh3YS08q4cBikYCX1v9aAJkqYnGczOPnzq8VLMe9BHKgxM+Ltcm+E8
vkx16i4D42/t/NyOMElx0nadNXqtMJ0XHuW4uhcmVbkbVCRYZGjjdfqdnja8
9CuSjUvtwbRuzmD1WxZp43dt+T2gA+GU+jW+Ot2I+q/sQ2c+FVFtd7oSjPpB
Ti+yVmhrwI6cgJalx+vwSs+307GwH2XpI94iC6l49ar1giytBNpX7ZT2KvBh
3aqXtE27BeZD27N2IgMKAr/9y5T4cL70XvKgZhv+3GZyO87iBVk/f79yfGk/
rJ7otIfy2+Gr8cLaPjSfzGu9NKul0A+t/JHkVo9OrI/2uNAxW0Mcd1ee9hrm
QlniruTcUxpkGvOHI02ayX1rJ5q1Awe9T9spaw524fE7L4cDpjQivWflh15b
FoazjaSKHnXBL2Thxl+X6YRS81fTOJ+BsyFHw7T2deFbin3C+Rt9ROATYe+l
Ssfvs58onCAarKTWbVE5WkxklNJ3fOivQN+ISe21BgHurPHfLmUeTTonrkbt
XNaBdn6imMi3fjzXr7V7xifIFqy/NlPHgGnwld98JlgYWLnzU6t7HRbFvY2k
0DgIO+e97Et6Nw5PnT2tt7oZF661yowL9cr+k05ZrN0IkRnZiyqSjdCui36d
PcqDMfPVnF1LM7R6zhcuyq+F269ZR+8PPDzMHOvU8GwHeyQz41NKBSrX+95z
NObB+/D5YG0WDbtuOD7en1iI0PrbFrf+4yIx5eMfJpQePJy/6onHTDYmu9Pb
Ems4mKbYR5a9oyNH5oLd6GQcPOWDnzjS2AgYXmp/cTkDTtkhcatccskZLowH
rdhY8KjF8J4/A5vNqmzt9OrJmrjJS91GLBSt3OGcIssAxafJ031fJ/lHTzFi
87Y+fHn3ULSNR8fkYHRuRnkvUYqK2dR1mY6gP+51Nsr3gJNR7P37w1oyIR3/
uvZAKpIkNO/7NwkQVRNLMfaqJpqFcro0yQJYRfoYl+cJALXbFrP//iCnrM0a
2I9/4JXcuaxMPwHibP/IU9pbRpYGnpBKiaiHDi+VzxYVoDre82d5RxFJ3V93
Qc2pGZnq+0yaD/PRVGqUJ2+cT5oOyGV8onRAX++g5Zh7P1ZIUYftinNIYEXs
bnPrbqzNWdLXY8mD37XW8vq6NHL/X80xl/t0LEp2qQwa5+DxR76p28F4EhYo
HuIZw8Deqj/dFruzMRqwQFVK6gbxOL0l++UjJkIWfHNckszE7ydKMn+mRcDI
PMGLf4SNaEuXKLNiBgZKBSXDaaWkpW6az31dAq1DKdoSAwK8Win/wq6kiiRu
oQQU7vwMKxSn2M4JoNlaGq6VnEYEMU+MX1xm48VM1VmxAAY2el4df15RS6zF
KZ17hz7ASdfQ175RgI6/tXPSdGrh17RvkUprP2hpFef4flRknbG4n7glGEP3
QjIOCPohYKxT8T3WjqMrrG675NaSWaNB07FqLvQc61+uSKIhMJf3Rk+khwwu
/rWLv5iJ5q/xA/r+XRhddGbwR1kaGdN/plwS2QzHyUBq+ls+opcF7bCk5hGD
R93HY8/UwfvYhMpkoACDfrkPtN9+w/1pU4VDPgx4MyrVog6yEZTdkSQbkoi1
5gxzk5Ie2Oq8UKeGcRG5pSZ76UAo2WMrODkc3ol6+bVez0/0Y5MoxU95rBpG
plvODI+zYWmgGKZ4iY4pibDbb2VKUSs2G6HNZmJx/BB58KwPgbjkde4CFfSr
8/yOfRXetcBSnp5CRUyM1iqJlQ0oPXQz3zGci3rHba/Oy9PAqZguac+tx1Sb
rb97Bw/iP6/aNu5txUKNEjnfrQX4N0a06t0FLq7Q90tx3HoQoSXEaWsH4fRk
xnpc6YP2liLHCrlePAmxNwvzriF9F7XcvI2+ofxaQlh6lQA1ESGVAepVJDrn
tqbm8RL43PF1S3onQFvv/sjhhApy3G3EhL+6Gq3bZbvdHQQI1XN+6GBUTBaw
DDPNOVTIBx6ViXcV8rzC9aOLeBkx1YwX6M7V42l0cLnlTz4cRM/0TOwoIFtp
R3TWlLdBtdzicEx6PzJedrt4nvhOmC1XdzPDaTgZXza5r40HrxtTleqi2cRT
MLnJc1UPmm9HudPbuVCYiTE7FRFPBvVDFOnPGZCwfKIjfYGNtuS3/pM+qSTD
VKy4gk1HRLfOicVfOCgaGX32Wesh0UzukJAzYOLpj0DvlIUsJM0f5iaNCHkz
PCfn9okFn/NLVObf6oP0nhD55VrlxEw1y8BMkoptU2bVUw7CHLedQuTTKpI7
yn3/wqoFWaHSbSsT+uFszTE+trCOeKHJTS6mDXIbNupY1fMwRFFp/HmwgWw6
VPcczA4Ufuj0XU/josFkSFNtQwLpONfnfvUBAxlv68z/ucJGX6d47MzTJhLm
bJOSr9aF+cuLPiZXcHApcWS7+0g6ab2uygwmfbjuKuaz6xgLyhdcV66PayYt
rUGneVndSH1sMR0awcazqUnn6RVfSa/k2sDtfUz8FfMkYEKBiYHmpWnlH1rJ
8t2W68829qCkTKXqiCkL9i1841s6+eT1Qg27DjE2htYXrXLIFPpA/NKxva7t
ZPni6JgHfDr8pe3khjv6kMVzfVNQ2EGKVn24OiPGgNbUvszk0wzkDnqHzl9N
IzEe6hI3hxloMnOJ/FP4b73SgjtM5LOFvUTX4K4PD4a827GD6t1oW8JdeXBv
OdnOLn51crII2zTK3rrxBbCwTfhuZf2FqJ7yMRjXoCJjaQhPvp0PUn2yINOy
jIgOzh2YCfuBq1vN8zcI+UxInlroffcrZJI1rMadGPgedCt2xJUNA35O6E+P
e4jSrexlsLvhax6iy9DmQWbec+MK6c/kwBHVzXnZrZguXS4ursOHvkTlxsqw
UmJX+WPv9+paPNTSMbTaL0DXMzsT+5VVOM7P9VKvZ+PAX99a8qh0fFDQDzoz
mofk31a7GGkxcZqrWiqXwURK4PWbOsLeqDc9n78skY6qYO/hykkOdhgdujwa
lE4ebRpbrvFTmNcBDjHXPfohs2egOGOmhJw7rbFt67MGRKjSae1cPmxvXHGV
pTYigt8R5fSKB4Nirx81qS2wmYh1KWupRtgb51i/BVyoLhL1tO8X6vu+1eiE
VwGuXG954xTCAm2X7yKbdX1g79y9xL4mFnbrpdWblBio2qx3xESYq/7R4X9r
0FOJ6yolcdOCLthM/irRSuXBfpWpQLe4GmcabN4NpHIxUXj49JBwf3OPDtvQ
rwA71xpE3bRmoyS84NTcVgYmaloUpbLiUNBpLPZ6aR+SNYvv3pNkQ8WJqecz
kEKubx6LM5LswVdDStM80f/r2NMXrFaD2ZmKewlWPGRl/Fng6dKJwJTGSPWB
AoRAg7lYj4MH51X1xHV6UStT881C8R2CN1BlFygxoZ+wTPmJEgvO6nn/JJcn
kVLFczqrjehwOb9dlb+Vi5izc9KRSYWwKbdq0p7loOPiZzWt3+j4TTSDyrmW
iCH7Mg81CgseFqOGsUuYOMMaK//WmUgemykcCT0p7Kl00XHlUxzcouTcVPBP
wiPqXPScPBuS6aSofFboV9unq+mhqZhmpayrFONAc7ImjNXUi/8BupiNDw==

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{302.4030745468559, 127.418604874361},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{4., 14.}, {5., 12.}, {4., 12.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.11559929941755943`, -3.369779150708608, 0.28500048670789746`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6900919502168093`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["List Line Plot", "Section",
 CellChangeTimes->{{3.690089543931566*^9, 3.6900895510382757`*^9}, {
  3.690091854258773*^9, 3.690091856321153*^9}}],

Cell[CellGroupData[{

Cell["\<\
ListLinePlot[list] can be used to create a line plot insted of Point\
\>", "Item",
 CellChangeTimes->{{3.6900895564729*^9, 3.690089577228502*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a line \
through a list of values, assumed to correspond to \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) coordinates 1, 2, \
\\!\\(\\*StyleBox[\\\"\[Ellipsis] \\\", \\\"TR\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a line \
through specific \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) positions. \\n\\!\\(\\*RowBox[{\\\
\"ListLinePlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots several lines. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListLinePlot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690089584069062*^9},
 CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "10", ",", "5", ",", "15"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.690089600569929*^9, 3.690089671771979*^9}, {
  3.6900899474655695`*^9, 3.6900899759792423`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {2., 10.}, {3., 5.}, {4., 15.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.690089615729777*^9, 3.6900896569222965`*^9}, {
  3.6900899514832497`*^9, 3.6900899764715705`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "50", ",", "20"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900899815431776`*^9, 3.6900900013579307`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 0.}, {2., 10.}, {3., 50.}, {4., 20.}, {4., 
    0.}}, {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[{{1, 5, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4}]}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 50.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69008999222029*^9, 3.690090001986344*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NOTE", "-", " ", 
  RowBox[{
  "for", " ", "PairedBarChart", " ", "see", " ", "video", " ", "and", " ", 
   "refrence"}]}]], "Code",
 CellChangeTimes->{{3.69008813559347*^9, 3.690088148108325*^9}, {
  3.690088187163744*^9, 3.6900881886247187`*^9}, {3.690089242856303*^9, 
  3.6900892461695104`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using Chart Options", "Section",
 CellChangeTimes->{{3.6900882390733767`*^9, 3.6900882436958876`*^9}}],

Cell[CellGroupData[{

Cell["we can set different types of properties for charts.", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088278600077*^9}}],

Cell["\<\
for using different color than default we can use ChartStyle property for all \
charts.(BarChart,Histogram)\
\>", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088307892909*^9}, {
  3.6900890205423193`*^9, 3.690089025119371*^9}, {3.690089182426974*^9, 
  3.6900891881397705`*^9}, {3.690089266530939*^9, 3.6900892714041967`*^9}, {
  3.6900901905452285`*^9, 3.6900901905482297`*^9}}],

Cell["for Plots(ListPlot,ListLinePlot,Plot) we can use PlotStyle ", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088307892909*^9}, {
  3.6900890205423193`*^9, 3.690089025119371*^9}, {3.690089182426974*^9, 
  3.6900891881397705`*^9}, {3.690089266530939*^9, 3.6900892714041967`*^9}, {
  3.6900901905452285`*^9, 3.6900902165624537`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"ChartStyle is an option for charting functions that specifies \
styles in which chart elements should be drawn.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ChartStyle"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900890099687195`*^9},
 CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"21", ",", "10", ",", "34", ",", "12"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900883101145444`*^9, 3.690088319436754*^9}, {
  3.6900883746329584`*^9, 3.6900883909646354`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "10", ",", "34", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{
  3.690088319965105*^9, {3.690088376435151*^9, 3.690088391229806*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "alist", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox["77", "4"]], "Output",
 CellChangeTimes->{3.6900891294587927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coloring ", "Subsection",
 CellChangeTimes->{{3.6900891342433877`*^9, 3.690089136501895*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Yellow", ",", "Blue", ",", "Orange"}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900883211358943`*^9, 3.690088370024886*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 21.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{22.175154179318778`, 
           106.09915347174865`}, {-25.577193217919557`, 112.51951695520117`}}],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 10.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{113.55305740382191`, 197.4770566962518}, {
           46.47108353942943, 112.5195169552012}}],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 34.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{204.93096062832504`, 
           288.85495992075494`}, {-110.72515665842282`, 112.51951695520118`}}],
         StatusArea[#, 34]& ,
         TagBoxNote->"34"],
        StyleBox["34", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[34, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 12.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{296.30886385282815`, 380.23286314525814`}, {
           33.371396856275055`, 112.51951695520117`}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5437956204379562, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}],
          LineBox[{{4.456204379562044, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
            0.}]}], {{}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690088370655301*^9, 3.6900883930009837`*^9}}]
}, Open  ]],

Cell[TextData[{
 "if Colors are given then those colors will be used and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will not provide any colors, all colors will be provided cyclicly to all \
bars.it means if colors are less than bars then cyclically colors are proided."
}], "Item",
 CellChangeTimes->{{3.6900884242813377`*^9, 3.6900885127417145`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Yellow"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900888359285192`*^9, 3.690088934221509*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 21.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{22.175154179318778`, 
           106.09915347174865`}, {-25.577193217919557`, 112.51951695520117`}}],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 10.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{113.55305740382191`, 197.4770566962518}, {
           46.47108353942943, 112.5195169552012}}],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 34.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{204.93096062832504`, 
           288.85495992075494`}, {-110.72515665842282`, 112.51951695520118`}}],
         StatusArea[#, 34]& ,
         TagBoxNote->"34"],
        StyleBox["34", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[34, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 12.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{296.30886385282815`, 380.23286314525814`}, {
           33.371396856275055`, 112.51951695520117`}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[
    StyleBox[{
      {Thickness[Tiny], 
       LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, 
      StyleBox[{
        {Thickness[Tiny], 
         LineBox[{{0.5437956204379562, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}],
          LineBox[{{4.456204379562044, 0.}, 
           Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
            0.}]}], {{}, {}, {}, {}, {}, {}}}, 
        StyleBox[{}, "GraphicsLabel",
         StripOnInput->False]}, "GraphicsTicks",
       StripOnInput->False]},
     Antialiasing->False], "GraphicsAxes",
    StripOnInput->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690088864699892*^9, 3.690088871091153*^9}, 
   3.6900889346677976`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"20", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"30", ",", "10"}], "}"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "only", " ", "one", " ", "color", " ", "can", " ", "be", " ", "used"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.69009022524023*^9, 3.690090344728485*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[{{15., 5.}, {20., 4.}, {30., 10.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{14.765625, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{15., 30.}, {0, 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.690090249009822*^9, 3.6900903326599226`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Filling", "Subsection",
 CellChangeTimes->{{3.6900891126525993`*^9, 3.690089119111904*^9}}],

Cell[CellGroupData[{

Cell["for ListPlot[] we have property \[OpenCurlyQuote]Filling\
\[CloseCurlyQuote] ", "Item",
 CellChangeTimes->{{3.6900888846749525`*^9, 3.6900888852053175`*^9}, {
   3.6900889397672105`*^9, 3.6900889570477886`*^9}, 3.6900890389899015`*^9, {
   3.690089285252372*^9, 3.6900892852583747`*^9}}],

Cell["it doesnot have ChartStyle.", "Item",
 CellChangeTimes->{{3.6900888846749525`*^9, 3.6900888852053175`*^9}, {
   3.6900889397672105`*^9, 3.6900889570477886`*^9}, 3.6900890389899015`*^9, {
   3.690089285252372*^9, 3.690089311647952*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"Filling is an option for ListPlot, Plot, Plot3D, and related \
functions that specifies what filling to add under points, curves, and \
surfaces. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Filling"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690088967274605*^9},
 CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"],

Cell["\<\
Filling could be \[OpenCurlyQuote]Axis\[CloseCurlyQuote], \
\[OpenCurlyQuote]Top\[CloseCurlyQuote], \[OpenCurlyQuote]Bottom\
\[CloseCurlyQuote], in Top axis comes from upperwards.\
\>", "Item",
 CellChangeTimes->{{3.690089802764624*^9, 3.690089879496373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900884129908123`*^9, 3.69008841726567*^9}, {
  3.690088748595083*^9, 3.6900888103664865`*^9}, {3.6900891434195056`*^9, 
  3.690089163659684*^9}, {3.690089300314392*^9, 3.6900893177182274`*^9}, {
  3.690089829451853*^9, 3.6900898427548447`*^9}, {3.690089882061079*^9, 
  3.6900898951868286`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}, {1., 0.}, {
    2., 0.}, {3., 0.}, {4., 0.}, {1., 21.}, {2., 10.}, {3., 34.}, {4., 
    12.}}, {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{5, 1}], 
       LineBox[{6, 2}], LineBox[{7, 3}], LineBox[{8, 4}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{9, 10, 11, 12}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900884136012173`*^9, 3.6900884177129593`*^9}, {
   3.6900887572218294`*^9, 3.690088810801778*^9}, {3.6900891541413403`*^9, 
   3.6900891647023797`*^9}, 3.6900893181465073`*^9, {3.690089827650652*^9, 
   3.6900898432221537`*^9}, {3.6900898901424685`*^9, 3.6900898959013047`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Legends", "Subsection",
 CellChangeTimes->{{3.690089353989502*^9, 3.690089354991167*^9}}],

Cell[CellGroupData[{

Cell["legends can be used in all charts and plots ", "Item",
 CellChangeTimes->{{3.690089357511839*^9, 3.6900893744568577`*^9}, {
  3.6900900662308145`*^9, 3.6900900662348156`*^9}, {3.6900917819250507`*^9, 
  3.6900917819290524`*^9}}],

Cell["Lables used to tell about whole Plot or chart", "Item",
 CellChangeTimes->{{3.6900927769082212`*^9, 3.6900927796230326`*^9}, {
  3.6900928146570606`*^9, 3.690092827907892*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Legends and Labels", "Subsubsection",
 CellChangeTimes->{{3.690091795867342*^9, 3.6900917987892895`*^9}, {
  3.6900927724472566`*^9, 3.6900927745166287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"PlotLegends is an option for plot functions that specifies \
what legends to use. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PlotLegends"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900900777394857`*^9},
 CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"PlotLabel is an option for graphics functions that specifies \
an overall label for a plot. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PlotLabel"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690092788998281*^9},
 CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]
}, Open  ]],

Cell["we can assign some string", "Item",
 CellChangeTimes->{{3.69009231173942*^9, 3.6900923177564335`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"110", ",", "40"}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Points\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900893763151035`*^9, 3.6900894911785564`*^9}, {
  3.690090118158925*^9, 3.6900901612531457`*^9}, {3.690090351661105*^9, 
  3.690090352252492*^9}, {3.690090390081068*^9, 3.690090407443009*^9}, {
  3.690091747444496*^9, 3.6900917797432003`*^9}, {3.690091824900454*^9, 
  3.69009183289279*^9}, {3.6900919820944824`*^9, 3.6900921337938595`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{100., 20.}, {110., 40.}}]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {99.84375, 0}, 
     PlotRange -> {{100., 110.}, {0, 40.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {99.84375, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{100., 110.}, {0, 40.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Points\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6900917756874886`*^9, 3.690091833580241*^9, {3.690091986959444*^9, 
   3.690092048941967*^9}, {3.6900920846897435`*^9, 3.690092098164607*^9}, 
   3.6900921341871223`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], ",", 
      RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Sin\>\"", ",", "\"\<Cos\>\"", ",", "\"\<Tan\>\""}], 
      "}"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"third", " ", "is", " ", "not", " ", "there"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6900893472269907`*^9, 3.690089348376758*^9}, {
  3.6900923209526224`*^9, 3.690092372843342*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Sin\"", "\"Cos\"", "\"Tan\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6900923321790996`*^9, 3.690092353844492*^9}}]
}, Open  ]],

Cell["\[OpenCurlyQuote]Automatic\[CloseCurlyQuote] will assign some numbers \
to them ", "Item",
 CellChangeTimes->{{3.690092277248481*^9, 3.69009229592307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900921563238983`*^9, 3.690092268885913*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.690092261382902*^9, 3.69009226945028*^9}}]
}, Open  ]],

Cell["\<\
\[OpenCurlyQuote]Expressions\[CloseCurlyQuote] will automatically say the \
expression for that curve\
\>", "Item",
 CellChangeTimes->{{3.690092395602358*^9, 3.690092432691553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690088598014834*^9, 3.6900886217694583`*^9}, 
   3.690089105828746*^9, {3.690092382356534*^9, 3.690092390236788*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwVmHk8VO8Xx2WdsUTWGZRmxlYiiijVPdEiUVmyb6FkiRISolDKXilr0mZJ
KuQrJU+iLNlSyFJkZ8xca5bE7/7+mXm9X+eZc55zzuece19Dc/YxPcXJwcGh
TXz8//vHlLEGB8ckJs37rlzJ8Df28XhO3FGBSSzTK8lZVvs39vwlx3iG5CQm
19juQ5L/jV05W/xop+ok5hpeMvz5Xx+2aYwifsFmEtPb9sjk16s+LKhv4M/Q
60nMDXRuhEn0YTLNl8q/uE9hbrt/2T0o/Ik5PH96KPnbNKateczs2Z0f2KNC
uwKBwTks8qRiqeLHOqzYkFcw8sMCZl7Xa69rn4L1k2VVMuP/YiwZjQRZ0yrU
LHYr9W7qCva1trqB6tuGPlmFXDF4wwG8Au/KjCt70ZrG3m5NPU4w7brbbzY0
iDZsb2rBDDjhXes264z5QbQ7tfyT4VFOCBsx7vxBHkIBp1JfOtlwQmD56QZV
tSE0/s80ItaXE5b1Qu0OBgyh72qfNw8+4oTP2KjqJu5hlJ34/NIdLi5o3V1l
4SM5gqr+pHlnkrlA79g+OwWlEdRnd9MlT5gLUvtWVJq0R5DMptPGSIYLejt3
cS9YjaDESjkaczsXYII+CflpI+jS9O1aPVcueBuUPXJTZhQZmV+Smq7mgpdT
zuwB0TF064G1+N16LqD8Mp7s3TiG2sd3rtNp4QLXuKLAZrUx5Hh1iT+0mwte
b9Ffc9NwDPm+CF4hT3MBOdJM49TVMZRCCh2iyXFDoKvxxvKJMTRYHl5scokb
Rt/ekPuvbBxtIrm8mg3lBlzlBJfk53HkbaZfkBzJDcj9SsaZ1nE0P8aV8zOB
G67lXG0fGh9H/FLX0tyzucEs8jrCZJhI/XzU1avfuME6QE3N6xITXVaIPVao
ygMXnaYZYSoTyGqrAF/Tdh4o3Ka2QUR7Am3bGV0xvpMHjthJZyXqTaBhoxuq
8gd5wGTTto1O1hPomF+kQLIDD5QxP1jqXJ9AtKqQmpAEHrj9edt8Tc8EWm74
G5p6lwfwS5O2R0cmUHt70I7/0nngSuHl31VTEyh6PPApnsMD5h+e7AjhZaGZ
df4Rzh944ONslhNtKwt9cjqLGUzxwKz0uwSdyyyU5THxx3WeB8x0gne9uM5C
QX6eL67+44GVWs480UQWUrvhvv4dmRdSNCLf5TxioeSXp/6q0nnh+BkDOc4a
FnJfsS8VM+OFIYOvhhcE2Ugo4+jW3te80OMsdks+mo3WxiD2nbe80KWi2MBK
ZCORIPUXBh944YClZ1BOMhuJW4mqFn3hhYy9Q/SJJ2wkK96++Vo/L6jOvD/w
toKNNsfaK6qI8AGoGK6cxtloS3DTUK8EH1ypPjagNcdGah7Y0yQZPqgJiyDN
LbHRNgOa/IoiHwgXfeHbz4ujndxDtK97+GBz4fJNeVkcGYR4rb/oyQedLho6
rP04MvT82aNyng8Wfne1VhzGkZHN0Yy+AD7Q5y8Mv3IUR8d11GUMw/lAIHoP
5bsljixnZyjrU/ngV7p45zt3HFkNuP74mskHJVTlbiFvHNm0tiVff0KcT8R7
j/niyOFVqeTkSz7g9loYfRyEo9NeweJVn/nAgN+oIiYaR2dsJ75dbOADz5iN
6fbxOPIwtL+zpZUP7EZ0PORu48hbGRO995MPchkpHb6pOPIf5BRxn+UD5Y0J
76xycBRpFy0gTCeBOVNNSe4DjloZIWtzlEjwsOmTye+PONrIPLsOUyVBH1o7
d+cTjsovmUj56JDg3fuLWfX1OJq9R2E0HyWBhcY9t8vfcaTnwK/oZk4Cn7OB
mlXtOEpUWFZetSbB523m5xZ/4GjL6161radIsJL6XF37J45Ofc3elRBMgv1C
l0rnB3H0OiVlj9JVEuSFR/d+GMYRp1M0oOsk0BGq9g4axVEm++xB/BYJXAIt
UQUTRxMljoejkklADaCEHWbhaNdlEyO5+ySYrWp+VM3GUbuAlumxXBJkBOmL
xU7hSP6b4omRAhKorX3i8GMaR75pFKuwYhKsN9AXkJjF0dpNy/YvK0gwxdV1
zfEPjuwmWU6HqknArC0yPTuPo2elvS69dST48zY21HMBRwcPVrkLt5FA843N
lM4SjpKESrxyukgQq3RWm/QXR/3fs32wPhK8in3fVUOwekaKb8cQCVq12F0X
l3EU6hLt78MkgYlknjblH44aNocE8k0R8T4/mMwlWHr6bPCDPyTouBbDs3mF
6HeZY6j2MpHfDtWAdIJLr5hcbV5Dhl4XY71/BPMa6Ee68ZFBdHe5+7FVHJkL
a0WtCpLhb5LJxC2CH7UrRieLkkFkfKKumuDJ+5S4rRQy/LTz5xwleO8p/sSa
9WRYV9J59y/BsVuWbzsyyHDTSSRyleCuGdbdeWUymFyQapwhWPldb0qCGhmy
c2bP/SA4IPxrupImGWbtS3wKCK4+XJWJdpLha4Z3nS/BoutKHlpiZGCL7AlV
JtjpR/YTfD8ZhIQOxDcR93/xICUnypAM+M2iRVeCl09HP5M7TgZdxbIPTKIe
hmohBaUnyOChmDTgTHDK3NlXx2yJ+H7XneuJeg6XOxaPOJEhP6trD51gzUiT
/8JOk+Fhb7+/B1H/8CP6ZVJeZJgXWOR/TPSrRVSr/OV5Mmg+Df33ZRFHG7oU
0aGLZKht7jEeIvrr9ZDysTeEDJ3mkctsov9k9eUa4RtkMKxLCfg293/9xV6j
xZNhunt9ZhKhnxbd9frbk8gwnK90Un+GuN+hvRUWWWQ4EdFT7j6Jo5DGpuAz
2US8KyqWvwl9Opo57gx6TgYt+UOJBwn9KjpeeX3/DRleFWT1d47hiH9IxPdl
BRlKN3X84yP0z/J4uLWymgzdgV/eMYj5eB3w8dlgCxnu8JrJy/cT8xfP/VBl
jAxO5TO1Bp2EP/G7DntwMhzIH5QeJOaRnKYge2yODHaz56hniXlteXow2XcN
P1T2itINmon7vL8RV0blh1t+jTH0asKfPvXIFzl+YBdmealUEv7q8kg/Ffjh
QnsCL70CR+zv9REc2/jhHq3e60cpkd+EYNAhQ37YFqa1w+MZ0V/f+9rWx/kh
nqwg9jsbR/oLqnMeFvxwZp/pmwOPify4j52Ld+YHZZ4Klx/pRL1kbp1uC+KH
R8kJwYxYwt9DmvzIFX6Q6+xoJ90g7qdU9HvhOj94pm0Q7Ikg7rP9m53sHX64
X3x0rVEwjkoMJcxc8vlhYJdYqSmxX1Nanor4F/ID2ahPKceV8Gexo+l6KT84
qpKjxhxxtN/Z8vCzKn5o6nWW0bEg9t+lVGyqmx/+qqswl/cR+eWu3xImKAC3
+d5/UJLE0aJY1pSyqAD0Kz848EEER9xh9NJWKQFgX8Z2HhbAkcwJJT1FhgBk
jfx3cQsH8bxYo2HVuFMAEhepWTpjbPTQen+kjJsAmOB/t3i8YaPn1Z8Pf/IS
gJQtbvP8RWz0ZuthYR9fAbC14nXKyGejJp6jaR8vC0DLmwbKrUw2Wiq0fOWe
JAD8ezMjP0awkTm/Z09pJXEfUi5mcISNHP1ZD0/WCMDXqJErs/ps5NHn4ybQ
KACVedeSb+1moyv/+U07/BCAtOJis0xVNipwDiXx4gKQUGJ1nlOYjXjf3dI0
lxWEvTxPsxeaWKjM803sZIAgOJ4oelamz0I2dzsFxS8LwsfFCNGPO1loqWIp
VjtCEL4/EDlQRrwf7BbdExeaIAhbN/DR/WRYqOJNZZxgriBMrpi5yE5PoGqe
L/HKnYKg3VDrsjtjAjU9+JnopCsE8/F+HiMDTORdtyISuU8I3KK2O7R1MJHw
jNytnENCYPViHavoCxMdP+h8i20mBN2X6hZ2FzPRt4nhWyFeQrBge+d23FUm
+rFz8nbKfSG4mWyhp0S8Xw1847zbsioE7syzVF+9cdTS9sSqg2ctnLU5v/hY
cxyVdxyU/SWwFsYFopc+K46je93Rj5lSa8HSJjisj38cGQ6IFvGqE7y7xNe5
dQwVTdObdzuthdjD2YJ5DmPoyjp9ct6HtXAr9dvWYK9RJHss4vLVq8JAEt4Z
tsFxGKnvkDq8MUoYWs50zPAcG0YH1ueLo1hhGKp7f6p/7zDyZrbmLycLg2nh
/pNBG4bRhyh618UXwmAtnZKs9HMIuX6o3OHdLQxn2pskQq2GUDuFI7BAWgTe
PsFEThwi3s+j92qk+YmAn0i96U2+fuSA3Zl/pr0O3PkpNxmnOtGtVPnyctY6
IDkNK13VakR+n+O+8xSLwpl5pfktux6jX8vr7Ev9xKARHWPamFdhuj9aB9w3
icPcGtPP05nfMYPrnhVmLHEILMv9vaa6FzPohOS9TyTgEk3jLCtxEHub5joo
kCMBjyRdSsUfDWJb7G5odOZJQLBkxW+N4kFMpLf5y4WXEjBMtS8xbhvEOgcd
OPLeSsBddytvfuoQ5jEZ4i72VQLSBrNGEzOHsFi+Mt3RfxLw0ueFVOrDYWyl
tudGCYckvLDMiPQqHMbORXO0h3NJwu+fk02alcOYuZDBufVkSZjY3tnzuG8Y
Wy/W8cRUXBLsijbz/t0wgr3YMCf0frMkrLOVHbqeOoK1aGn03bKUBG1flRd9
10axOIsn/Bk2kpBsXDQVeHcUM7wopZVtLwknNjVzcj0dxarf/Lv51kUSduIs
94mqUaxUt377gI8knL0Qbiq2ZgzL3OcSpXmDiIdsf+UFjmFexnfVOt5Ightf
mUKF3Ti2yZtk/fudJOQqc9mGeYxjw/HBEcwKSbAd5DumETiOObWc/LFaLQl7
XXPM3O6MY2ZmauHKXyVhyX1xRrpuHNtlXdN2aUwSXtfNfUvVYGJ8pxZDZKWl
4MSuZM6Pf5iYVeCp/GlZKSgoajpYtWYCy4352lkrJwWii4f8/xOcwAyL8nb4
K0iBjgBHsC99AotdtZ5sVJcCmUHxW2A8gYmmvXUJOyQFyrRiXfWsCUy2Odiw
34/4fd384526LMyrfyTwzUUpWOKfFvbez8Lez5nlxAdJQa/9aNUdYxbmILuF
W/cKwX/cp4ocWdhD9573d2KkgPzh0wAWwcIUufdoHHgkBTveBBxMrGFhGjtX
pHKbpeAp3eA2az8ba8gvY7xrlQKhrfKHeo3Y2JkN/lub2qTALyZfApmzsUyu
iYOz3VKwJliFZeDKxgSbOv1hVAoGLxvxXgtnY6POJd9+cFDgd2Abb/o7NhbZ
dq6XyUUBzqqzmNdHNiZnsIW5wkuBvdJgpFLHxixUH3MqCFFguOh5q287G6ua
T9Q4T6XABr7XCkqTRLxYrwTyNgrUCx7Lom3EsV2rSumyWhT4sLf7RJMCjrWd
H8jeqkOB5v+YT86o4JigpU3Fib0UUJJ14zy9A8cu0QxYDw0pUIdqnSKO4Jh4
Etfia2MKuMtuuZFxHMde8SLu2uMUUIT6rY9P4NgwU0uWbUGBn/6/ZwIdccz8
P8aRXS4UiLzOv3rAF8cmlXstjE9TYOXO9Y76AByLSU9zdnKnQOjhl9Q9wTj2
8cq6oOs+FBhZSmgZi8Ax9SOrua3BFPi1pbTSJQnHBPq6eD2TKBB3hOtBRyGO
NVRYvPZJpoB4Vos3vQTH4u+3nvRLo8DF1Cl12zc4JmpbX345iwImzv2R9ypw
jNJe5pv4nAJOJc92adbjWNdrrY13X1JgIX/Bk92AY+l3ChtTiyiw+kwo/F4z
jm0wyVN+/IYCWWrRFq++45h8Q8qvkmoKkKeXA/l/Efk+E499W0OBH889crf3
4VjOzcSdqJ4Cb+9lFxr249jmQzeSalso8KmqxUhvGMcmFLj1Gr9R4Ft1SA99
FMcKuK/gX9spIODru29qjMj340XD7h4KmIooR1mycGw6a2a+t5cC/GELp3A2
jhWH+Twd7KeAzb3tkv6TOLZjjxsHe5QC1+6FjByewbEFmYGCaSYFfJpYvKmz
OFa25GA7z6bAknHibNscju1+Y/Efxxzx++KH2tQFHFu51+rCs0DEq/0cI7eI
Y8j/6Dr+vxSYjLiZL7aEY1fM6yvWrlCgY9jh3hzBetsPeomtoULAsc9HPv3F
MW7Rj1QKNxXMgg5/CV/GsU+Te2pk+ahwLDxEXO0fjl1vLvOj8VOhv++fYg3B
Bi+06IpCVLDwDuA8uoJj/HGFzZtFqDB9MjX7I8FfPFUvbxWjwhZTeTGFVRyL
NczbrClJhQbN3kP+BB/dpPBDh0oFIceM/cUEi5AeXtsjS4WSazrkXoK/Dstu
15Ojgsr7tLsLBN/+lNJ3kE6Fa5dejxHv+5j5E/H4IwpUSIy/yjNHsGREou5x
ZSq0biWNdRDccVJwzFyFClGTVkm5BKfAjXvWalRIrorncyPYRo57v4MGYf/b
pCdGsOxK2JSzJhVOGR4+WEDc/2fP30w3bSrkVWqLahGc+e6ikdcuKki3/sp+
RuTvlDazeG4PFbKOxHGvJZh+ySfHH6iwwT5DxZGo34Al0zxInwo6ST6ymUR9
n+xw4ww7SAXGT7+OeqL+pyUGXkYcpoJ9uLz9ENEv5VkH+xtGVDi/Zc0LFtHP
sdYu/rhjVMj+nVw/MI9jXomtp+6doIKbta17KtH/ypOHpNysqLDxceNaH0If
ktvLa7VtqSAyrNqnSeinsu2pSqcTFbxeqpFvEfqSzJH+medChbil9c5KOOEv
MCE+6DQVcmpSxgoIfUrKXJqS8aLCz8fyUTHjhH2C9WjCmwqWilWZ/YS+K987
m78/T4UqEdLophHC7mRU6nCRCraKf0RvDhD2p3KXH4ZTIfyb+uDNbsLfxSQ1
32tUqNFLfeTcSZw3IPfp3aDC7uQTaSodhJ05rTcYR4WM3Vq74lsJu/pnklIq
FRynNO3u1RL+1ui+nU+ngrvhM56pT8T5by89azOpwE2TmNatIuz+qU3uT6hQ
cEQ99dF7wv7OK+n5SyoE/Zs5VEzsE6/Y3wcuF1HBQNRCPfEFcd7eYt64hAqd
inpu9vmEnQNs8LdU+OUkWVP7hLAfENu47TMVgqNnQwbuEfaWsvzSHiqYDCsa
bw4k7A/V7G/0UoHlhLEE/Yh4Fx6vte6ngsLjnwu9PoRdIu780ggV/FQXbSzd
CLutk/aeGSr87gq+HkPs08oh3qqPZGmoE/PyFdiKY86SX0xaBKXh6bO126I2
4RjnoYS+n8LSkGd0tX6SQcxnrtTKgoQ0/DEevh1HIfaph/LOrXRpsOj37GVx
EIwffpm+SxqWsrsvGjWxMeeNa/fm7ZGGtd0Kzjk1bIzTpLXhP5CG33/1HSY/
sDG9Ipvxrwel4f1KfrpRMRv76OepQDKTBpeveulqycTzZjE23c9TGqDb7XiG
LRtz3WyyOdxbGkpypfd3mbExbluJsoTz0hBVJBnHSzwP95ffb392URpOFmlo
bN7NxqpDX6z7HSENOkIK+zNlCOZqiTLOkIYAcYXaPR0s7JOQmJ9iozQcWj07
f3kfC1tQb+HlaJGGNF9GzU4dFrbFPC61s1UaAlsqKofVWFhSGh+K/SENvGn3
DcVlWZir0jJ5ZkAaJmXsNCrmJjDOfUMP0JI0dFw+m2mSPYGBX+kXK2UZuFzV
/SNtmYn5Jfs5bFORgVdCRyqvTTGx3LcaUwJqMuAecDHIeZiJiax5Lom2y8Dz
A8/9p5qZWG9c1kkFTAbE9qVsPf2IiYXm3JyfOiED6beD617uZ2LlXbaMmAgZ
EB5Lq2WFjmOSHp2WFtdlICh27J+D7zh2btEilnZTBlIfhBhVnRrH5Cmmc6Xx
MkCPFDl6ymgciz1hUDOYKgPPfAoThanjmF2LpufeVzLwds72HuerMWz5k1Dx
VI8MBGu/XEr4PorpFiI9qx2yIF/lc/vz4jDW9yDW3GmnLGwXig/9NTqMRcZb
nz6zWxZyBVb3jXUMY02eMzcD9WRBsrHdv6NkGHNSVPqaclQWWqqnHkudH8au
p8c7dp4m7JZDn7cODWGt1+xDbJJlYeYAEuatHsTcbf6W2C3IwnKj42yKQz8W
k3tByblgPeRX5Kjaz3RhdnVVE5nnN0Dsl6pMrLEJoyUcf9WjLAfnlo6/D3V9
hZ11WBgI75GDX2Nr3WQulCNNjnKtV8c2wkmUOvqJ6xvKZ6QFPni2ERpVpYQ3
RvxEQequpzYL0YCj4XKb7vgA+hA/f7JgLQ0GhJvK5P8NIF5WtIO6CA1aTtds
4xQZRHfyCi13iNFAuedBaZrWIHpOXz2sR6VBSENlH1wZRL/E09RsFGiQf8T9
lJXYENJfbJ6/uYcGm4Un93mqDyPBj7rRY2dpcCrjbBOuP4oyUr/cMPWhwcZN
AZsfmI6iLedto96do8H7/g0+eidHkfHG4Mi4CzTYH6V71zV0FMWHvg3VuESD
394O0ZJvRpGw7s4LlyKJ+K1KXZs3jSHR1zvsyOk02OQU5zy4Zhw9ivls45tB
gxtcJHUu4XG0zcXCuvs+DdZH6ZAlZMeRmWiARUEWDb5frq5et2McJZ0rOW6S
TQMT2+3Pvd3HkYSq5oHUQho8O7Ph5avGcUTJ1lDbVEsDnvItfptjmeioqnv6
qzoaPGU82Ho3hYkiXmeRdL7Q4J+jYD3+hInYH4UHDjbRIJV3NdTvPRNV97KS
Xb/TYGeyF+0di4nOU5+tyeqjgXVtl7L2kQlUH0tvk1ykwVSOwN53ixOIQ9xG
L3OJBq/PFSWJc7OQVvqtlwrLNHi0tW/Obi0LZeVxRGuu0sDcrAW9pbNQwOdf
e0156KBPU2vIM2QhBkd6btw6Ojw7uPDmeDILhVwQC+HeTIe/5KaIdAYbLV84
xDyvQocuy+w8UGGjYL9gm94tdGg/J3W+fRsbBfkP6LzdSodhacu2b/vYKPBi
8ZyPFh2ydMg3JRzZ6EKwmU830GHZfMq18B4bTQdH/TLQo4OXcteQw3028g15
Z/yfPh1ojjublh+z0bnLjC23DtJBF0ZqyIVs5B02M3rQiA4dYUmcZ+rZyCPi
jnORJR1kyzgati2x0XhEzVc5azq43tPbN7TKRu6RfyHOhg7i/+qYUTw4OnPN
Re6MPR0W32u13RfB0emo7T3rXeiQkiSdL6CII+eYbyduetOBnOPCzzLGUX8M
36c/PnRYI6UQ99AURydjdTVdz9OB8wSvzEFLHDnFPRbF/Ogw4ff2qKMTjhwS
LjTPXqID5fartq/ncWR9R+yw0zU6bExpCiq5haOJOqWbn6/TARM5tcnyLo5C
OXbXbblBhwKpoJNjKTh6ctb18GI0HfaSNrn1PsAR+1DJ4duJdAhSiUhdV4Cj
K6F1Nxdu0eF2X6Wr9isciZX8rHO4QwdStsVz42Ic6dB5DVXu0WHOLPTZkTIc
hS9bGFan0yH4utmuuGociW/3jN58nw7b+9PQjhoc5biH1Sdm0qF0bK6kpQ5H
De05hvYP6fD5TPtkWxOOJAsXDP9kE+dnL15W+IGj3BHBGLtcOmirOribduFI
dwPty8c8OmQr/yv36SHqEXP4SMJzOjRMGCQH9+Ho2am0I8pFdEiTXV7uGMHR
7owXMfHFdFDzshS4MYaj5taPX2Zf04GqtXhJmYmjWYx5pLKUDupmo3672Di6
HrAao1RGhzOdr1fzcRxRC8Qa4t7SoV7384jQFI72Su82snlPB8tN/I2PZnDU
cvx47IcKOggzFmvbZnHkEuXaoPiBDrntT+UW53D0532gYFwlHTY/vNoiOI+j
G7OxRjMf6dB6g6dbZAFH0ioPY62rCX97ivbyLOKo4GRJA/pEB0WKyN8xglub
fhrF1tJBa0ExJPIvjlx5pmOn6+jwg1MKdi3jaF6Xt9HqCx2YexVt+wiO9pUW
Qg10iLHmagz4hyPZPDVjhSY6FD1zvfuP4Be9enExzXSw1yK99lvB0T5Jy8ap
Fjrk5RQr9xD83chTyKqVDjM2mjPbVwm9RoQZV3wj9GbmKBZC8ELZnTj5NjoU
6627+ZrgmMmcxuh2OgyGq5n/JHiDUrnQVAfRH5nHfn8IfmXfYmzZSYfXyHn8
//+/6yUNxr3vooNL45mSRYLb6hcaGT3E+aNv2gYIPrNGaG30TzoILNoeqSB4
SZt2dPIXoRfV05I3Cd624eeyXx8d3LlPP9lDsAd3av7ib8Jf2afKXuL+j8bN
bUIHiHl1e+ftQ3BXiwiZa4gO1l+i8ieI/EVLG0qjhunwFgsItPz///H3b5wW
HCX2y4eetpdE/cIj9kvcGiP0Oy5TPUfUu8ydo1qCSQe+hUz9TQRPHiv3TZug
w7HqbnPDJRwp7wikybHpYFxnumBF9MtJVrPlMU7El0tQO0H0N4VzMlR5ijgf
priwl+h/y2i+asE0HY7sKTsh+QdHpGa3Ho1ZOuwxnj7UTegnML13p+48MZ/6
OizVaaJ+V9NH0QIdSugtD99N4mjUzTJ5/xIdhvTl2TsIfVppNs8a/yPqNxVj
8ofQc6J0zOPWFULf5mEeu8ZxVMtxyNSSgwGnHrM3eI3iSLux4qUTFwP4TPwd
UgZx5F0c5DDEzYDjJpXM2/04yk7dIeTBywDhq9OU/8+T5OkXHhfIDDio2W8p
Tszbn5X7CteFGaDMaxXr0YojtSHr7/zrGDBzcXB3azOhly8SEQmiDPB5L5+i
1Iij9uS4vhQJBlTPTZqnE/Nfon45PV+GAYMfrCRy3hH7SXKnofp6BtQGdhmE
vMGR/L/ZhdcbGMBqCdfESnCUVOdlUUFjwJJsnW78Cxz5Odut+6pEnK/g2WeS
haPnBpQPJzYxoPuIkVdSBo4G1b57d21mgGRok+MnYr+Z/z3SMKDKgC4Oq9zJ
RBxpJulG/dnOgFnl6FWvKzia+ST9TwaI/Npkx1ZsCf8K3wqu72OAey/XiwvE
vv0TGeMwpceAw7bv3/wg9vGS/jL6fIAB8bOs3AuHccT58Wf4+SMMYG5j7mBp
4UikIotUY8GAyHZTnSkBHN1eb12mYcWApCdjVzx5iX14eZ1HhjUDrK2Wtds5
cCS1O/zLeTsGZK9vXQ6ZY6MNb13iZZ0Z4FSSoSHyi422/Kco7nuWAfne8oPH
nrPRC4ne6h5vBtAFSvxbn7KRun+y/6FzDKi7vyv7wAM22q5J6pC9wICTwqZT
/26x0a6isdSaQAYsX3wQ918AGx1+8VxufSQDbrwyHzHcw0ans7ep1KYxgG2w
b46KWOi75ll++wwGiNQ7vSkvYaF9VTljU/eJ++knjBg9ZyHZPtlcmYcMeKCH
HmqlslArlU/BJ4cBBkfDVDf5stDeuO4Nkq8ZUJ+2TMrcyEKSfpGiro0M8KQW
2k34TKBITjS10MQAapUWbuA6gaYSF1viWgg9RDZ8uGM1gRoKvBNKvzGgUiRy
7yxMoPARK0GBLgaE7vh64bfIBGLbqPIWDTNg74ZCtwsFTGQ35jZ0cJQBk8yF
86VZTFR38VF19xihh333tcbvMNGTJKkIHhaRj78AWTaIiWya1nBYzzDgqL5B
VeEBJqq1293LmmXAcOd0kJcOE2kxAyrC/xD1pWioSqowkQhpIuT5IgN2KTc/
2iHCRJfvKdrt+8sA2dblgAJOJhqXP6nbvkz4r7N2E5sbR1bF6dKeKwzAPdxC
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"sin", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6900923907511234`*^9}]
}, Open  ]],

Cell["for Label we can provide Strings (for more see ref)", "Item",
 CellChangeTimes->{{3.6900929481328974`*^9, 3.6900929637959323`*^9}, {
  3.690093140121693*^9, 3.69009314785631*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Sin and Cos Functions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690088598014834*^9, 3.6900886217694583`*^9}, 
   3.690089105828746*^9, {3.690092382356534*^9, 3.690092390236788*^9}, {
   3.6900928604860415`*^9, 3.690092892218716*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"Sin and Cos Functions\"", TraditionalForm],
  PlotRange->{{1, 10}, {-0.9999999597402991, 0.9999999584722877}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900928758662972`*^9, 3.690092892540925*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6900928517022657`*^9, 3.6900928547753057`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chart Labels and Legends", "Subsubsection",
 CellChangeTimes->{{3.690092568847359*^9, 3.6900925764964666`*^9}, {
  3.6900927205519514`*^9, 3.690092722312117*^9}}],

Cell[CellGroupData[{

Cell["chart legends are used for charts", "Item",
 CellChangeTimes->{{3.690092577569179*^9, 3.6900925835261526`*^9}, {
  3.690092726788099*^9, 3.6900927267911*^9}}],

Cell["only String can be used here", "Item",
 CellChangeTimes->{{3.690092577569179*^9, 3.6900925835261526`*^9}, {
  3.690092726788099*^9, 3.6900927367766285`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"ChartLegends is an option for charting functions that \
specifies what legends should be used for chart elements. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ChartLegends"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690092590536192*^9},
 CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690092607096937*^9, 3.690092711071629*^9}, {
  3.6900927420561447`*^9, 3.6900927462169185`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.47103574702108164`, 0.}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.6333638863428048, 0.}, {1.5499541704857929`, 
                 1.}, "RoundingRadius" -> 0]}], StatusArea[#, 1]& , 
              TagBoxNote -> "1"], 
             StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.6333638863428048`, 0.}, {2.549954170485793, 
                 2.}, "RoundingRadius" -> 0]}], StatusArea[#, 2]& , 
              TagBoxNote -> "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.633363886342805, 0.}, {3.549954170485793, 3.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 3]& , TagBoxNote -> 
              "3"], 
             StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.733272227314391, 0.}, {4.649862511457378, 1.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 1]& , TagBoxNote -> 
              "1"], 
             StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.73327222731439, 0.}, {5.649862511457378, 3.}, 
                 "RoundingRadius" -> 0]}], StatusArea[#, 3]& , TagBoxNote -> 
              "3"], 
             StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.73327222731439, 0.}, {6.649862511457378, 2.}, 
                 "RoundingRadius" -> 0]}], StatusArea[#, 2]& , TagBoxNote -> 
              "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.833180568285976, 0.}, {7.749770852428965, 5.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 5]& , TagBoxNote -> 
              "5"], 
             StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
             Style[5, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.833180568285976, 0.}, {8.749770852428965, 2.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 2]& , TagBoxNote -> 
              "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.47103574702108164`, 0.}, {8.91534555453712, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.6333638863428048, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.6333638863428048, 
              0.}]}], 
           LineBox[{{8.749770852428963, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.749770852428963, 
              0.}]}], {{}, {}, {}, {
             LineBox[{{1.5499541704857926`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.5499541704857926`, 
                0.}]}], 
             LineBox[{{1.6333638863428046`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.6333638863428046`, 
                0.}]}], 
             LineBox[{{2.549954170485793, 0.}, 
               Offset[{-7.347880794884119*^-16, -4.}, {2.549954170485793, 
                0.}]}], 
             LineBox[{{2.6333638863428046`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.6333638863428046`, 
                0.}]}]}, {}, {}, {}, {
             LineBox[{{4.6498625114573775`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.6498625114573775`, 
                0.}]}], 
             LineBox[{{4.733272227314389, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.733272227314389, 
                0.}]}], 
             LineBox[{{5.6498625114573775`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.6498625114573775`, 
                0.}]}], 
             LineBox[{{5.733272227314389, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.733272227314389, 
                0.}]}]}, {}, {}, {
             LineBox[{{7.749770852428964, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.749770852428964, 
                0.}]}], 
             LineBox[{{7.833180568285975, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.833180568285975, 
                0.}]}]}, {
             LineBox[{{3.549954170485792, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.549954170485792, 
                0.}]}], 
             LineBox[{{3.73327222731439, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.73327222731439, 
                0.}]}], 
             LineBox[{{6.6498625114573775`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.6498625114573775`, 
                0.}]}], 
             LineBox[{{6.833180568285975, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.833180568285975, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            Directive[], {
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {1.0916590284142988`, 0.}], {
              0, 1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {2.091659028414299, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"c\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {3.0916590284142984`, 0.}], {
              0, 1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {4.191567369385885, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {5.191567369385884, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"c\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {6.191567369385884, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {7.29147571035747, 0.}], {0, 
              1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {8.29147571035747, 0.}], {0, 
              1}, Automatic, {1, 0}]}}, "GraphicsLabel", StripOnInput -> 
           False]}, "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.47103574702108164`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1.0916590284142988`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {1.0916590284142988`, 
          FormBox["\"a\"", TraditionalForm], 0}, {2.091659028414299, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2.091659028414299, 
          FormBox["\"b\"", TraditionalForm], 0}, {3.0916590284142993`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0916590284142993`, 
          FormBox["\"c\"", TraditionalForm], 0}, {3.641613198900092, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {4.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {4.191567369385885, 
          FormBox["\"a\"", TraditionalForm], 0}, {5.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {5.191567369385885, 
          FormBox["\"b\"", TraditionalForm], 0}, {6.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.191567369385885, 
          FormBox["\"c\"", TraditionalForm], 0}, {6.741521539871677, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {7.291475710357471, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {7.291475710357471, 
          FormBox["\"a\"", TraditionalForm], 0}, {8.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {8.29147571035747, 
          FormBox["\"b\"", TraditionalForm], 0}}, {{1.0916590284142988`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2.091659028414299, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0916590284142993`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.641613198900092, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {4.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {5.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.741521539871677, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {7.291475710357471, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {8.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a\"", "\"b\"", "\"c\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6900926404770007`*^9, {3.6900926841470737`*^9, 3.6900927116560125`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting Functions", "Section",
 CellChangeTimes->{{3.6900932425947537`*^9, 3.690093248202975*^9}}],

Cell[CellGroupData[{

Cell["Plot[] function can be used for this purpose", "Item",
 CellChangeTimes->{{3.690093260784915*^9, 3.6900932714900627`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) generates a plot of \
\!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) as a function of \!\(\*StyleBox[\\\"x\
\\\", \\\"TI\\\"]\) from \!\(\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) plots several functions \
\!\(\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"}\\\"}], \\\"\[Element]\\\", StyleBox[\\\
\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\) takes the variable \
\!\(\*StyleBox[\\\"x\\\", \\\"TI\\\"]\) to be in the geometric region \
\!\(\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690093279411276*^9},
 CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690093775158005*^9, 3.690093807339102*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw1VHsw1AkA3mJRkXAeu9m1/Oo4IpvIVre/D5dHnuWVx2+RVjhyHne5lPI4
ryS1OhU9rtP7aKYQPWSi5NlVV+5cXdnNymtaNpGWvW7m+ma++eab+b6/vpnP
dGvSZuF8Go3m+4n/6YnMrWrcbfv5T1tLE2k0GZmx6dvIEZN2UpKt9rRj4D25
4ENFe4JNHykO0Rj6rVVJJt/dWzyaIiEdePQrH6tVYVMlelRbM0TG1GNv/twC
DPjEGr90lJEpDyVndXhLUM7MY/0SKSdnex1ZziV64KU0XFHpek/++b1VQ0+u
IVp6K/ySzGdIU6FjTF/LUnCL5/hGHrPkxYSp9hI6B27StS9tg2lI6371qj7H
DIPW9Rvejc5DaQnPzWjecmQoCu1u7VIBqzYg6N1Rc6jrvIkLsKQj3jtuTlZm
CXo33W3RbTVE9ggnHuVZ42NPdcLhZA34HtGcCkuxxUBwDYPNXgh5+kHzxbar
4FSwI/FB9SK4rqxljEjscGSuYYFLhBbGPhb4XHtsjzDjFq/n8sUQjqh2OtSt
gWaz1ahZ4BL4DN/fVPmMB6H9mcmQFTqoFxXpD6qux87M9M2cSR1UOVW4csz4
+GlY9KSnRxfx6zXeljkBXpbaFzSP68E5MqEzONYJB6odmr2ivkCQMHiGKXJG
h/+vijSePrhvbCatxS5o7k4qXqFigGH1nlqL5RtwNT4LXS8M8Ea5bF1iiSvY
nqTjjlpDSHkRW1IVbnBRhuec2m2EqYk1exRhHtj27M5EQyADBfyrfd+83gh+
VnZdFIeJVu3h6d5wLxxOGr+pOcjEKlsXzq1eb4j3nZWealqKymOPw+/t8cWI
sHHb3Xxj+LdxIsQFfpAl6qp3R7FQ7Bwi+S5uE2o8OhUx1mz02uucobAZ0lhb
B5VJNkIzLGNmDf3BvNwnyu82gf6hKP9I9QDkRKac6fbkoMzs/MPJkQBMKRgH
PBs5eMad6/ccCoTFzfJjHctM4SLfd79uMAj20fd8dQpNMXF8NtCkLxjNlfpG
XZOmSPNrvp0r3QKLZv0inzAzdJxkxnpLQ+BNH2U9bjJDvOpzvfGBUMj+ft3S
bklAKy9Ru5UWjqTKA3qFBwn0V5rveqhFoUn+5QelkoAP22pMSQrQH1VjMGbS
SDqzk88ne8pJA/fQvNY2AmqSC7pm5yhUZ6/OkZlcJJf7LdR8XjFOOk/Iu85d
/tQ3tRC0hVAYPtFMiiWf8uKL5S8nKLi2InzK5BhJiFfO/tApI7e0QVZ+gkBi
r6HuHTsKtFSt6CdPCfwTyshI66Lwx4NU4/FxAlnpobHRDAF2uoUspnMKyZih
9AGWUEa+5g5mlf5MgN9QsbKVQ2H/i2vvOnsIaLAoW/dGChF2zJqhYQKhVplx
bDUBPATdRdPTBPa088tqVgjwl3dRCofzI3lUUVS3fZWMtNx+o0NTRMDgErQ9
DCn8rpv/tXsngWJlf1jtFQpVsWPvhYMEVqvJ12YqKJSITj9JmySQe/qyowYh
gOpXM067FQQS5HoZQQ4CnAwdXRvMiSP14w+utmTIyK55y95uPEQgTOKpV6xL
IbVaFpXXTsCK+4I+comCm0rw0qoBAko76fWaKQpcm4XTV+UEoruYp+zZApxr
iY65MUMggO0UlM0VIKqklMWfI9Dkfn2+1ToBPv8Z7X983vOz/xcsmi+Z
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[
       PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74, 55,
         58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 44, 43, 
        42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 
        25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 
        7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 71}}]]}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
       29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
        47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 63, 
       59, 75, 69, 64, 76, 70, 77, 50}]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> True},
  PlotRange->{{0, 10}, {0., 120.99999551020412`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900937926118355`*^9, 3.690093808109221*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690093820682423*^9, 3.690093820722416*^9}}],

Cell["we can plot multiple functions givings list of expressions", "Item",
 CellChangeTimes->{{3.6900938478415923`*^9, 3.690093867034545*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Tan", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6900938735305433`*^9, 3.6900939415052414`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA2PFNMQAA8D9anKMFJev4P8JQp41O
C/A/l87eiwoS+T+srwDqnBbwPwDFWZRGOfk/gG2zojkt8D+8AsVYx4j5Pynp
GBRzWvA/LyJNXBEs+j964OP25bTwP/hMVlMMhfs/ZD89UzTA8D9sdMXeA7L7
P06elq+Cy/A/ULUt8mnf+z8iXEloH+LwP4gJpNiIO/w/yteu2VgP8T+ZPxvq
Rfn8PxvPebzLafE/PUmDHYOM/j8GLtMYGnXxP0qBiPpPwf4/8IwsdWiA8T+9
efYKrfb+P8RK3y0Fl/E/xHVq9SFj/z9sxkSfPsTxP+0CKdOgIQBAvL0PgrEe
8j9JW6VCcxEBQKYcad7/KfI/vIBYfgUxAUCQe8I6TjXyP6YhZi74UAFAZDl1
8+pL8j9WyIRsBpIBQA212mQkefI/I6MpsP0YAkBerKVHl9PyPyeHFEBAPANA
c4g8Gdnf8j/qlNeGHGYDQIhk0+oa7PI/RKALdpWQA0CyHAGOngTzP+BUew5s
5wNABo1c1KU18z+SLfIYGp0EQBtp86XnQfM/U41A2UjMBEAwRYp3KU7zP0iq
sAI1/ARAWv23Gq1m8z+5he2VWF4FQK9tE2G0l/M/Gt3qE1ssBkDESaoy9qPz
P3OJbnMCYgZA2iVBBDiw8z+rRbTDkZgGQATebqe7yPM/PeUSKYEIB0BYTsrt
wvnzP1CEPaBe9AdAAC+BetFb9D/56/G70gIKQBULGEwTaPQ/7d+0vG9KCkAq
564dVXT0PxV7tud4kwpAVJ/cwNiM9D/X9Sdt/SkLQKgPOAfgvfQ/1IeE7ypq
DEC9687YIcr0Px/T+xKCvgxA0sdlqmPW9D+Rlv+NrhQNQHw306NL4/Q/RY5e
T3JyDUDVszlK
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[CompressedData["
1:eJwVkHk4lHsfh82MfZpOh+cZMfMMKUU5ltKC+H2L5KXlXA6SJMdWUlIkdVRU
Y4m0SVGWJEtIUWlzfg9ROrJEry0n60hkG7KM7e3943Pd133d/32WuB+x82JK
SUkl/9z/ydx9f6lUrzKMaGUc9LrOob2jvF6d/OlN8romrkIOXR8TKtzWrwyn
nbZLstZw6IfXn6mKh5WhwHq5O3FjAe15V3Oz2Ywy1Cf9+qvYh03XpZstWDSv
DAFWKjoPNNk0ynJq6GQQ8P3TJZ8nrYq0Wn7swUg5Av62hSMJ9op07WvJtXol
AuKbRlj5dgq0aVNdl48OAaYGK1K2hcnRYyZm0Sd1CTj0XvVFg5UcnZuUuTpK
n4Cmw9Xf3TlyNN8jJCxrLQE7Ck67eifJ0jMDWupfNxGgec42Zn+FDP0366Sz
pzMBXcb3qg5vkaaDvLsYgXsJGOx+WuK4WJrWe789+7wbAV+fN5b397PolFjN
yTRvAi7bKC1QvMGiQ1U/3Og4RgCz2Szp4SCT3qyv/tE1mgBl7gOZ7NcMWnI1
KtgvloDxcKtjD28x6IKxUfUzVwm4cTfCSPc4g176ssIv6SYB3FMb34frM2jp
LccWtN4jgC0gHYKypehy5/Ktu18T8Pp8+bIyt3l8plh/6AAmoNAka9NbrXm8
TiMxPriUgGXWo+on+udwhshPdLOCAPPIwsVNwXM43H/x+YZPBLz9q30F3J7F
1uG+f/8xQMCoyyGW3sw0jvtc7aM/TEC6zp3k+app3G6wmmSPEvDiZtoei9Rp
HPx50rd0kgAjv5RJVatpnGUQrmooTcKhDAtWfbwEy39ODVzII4Go9dzHtp3C
9gbSGn0UCUtWbxetXzqFU4X7K8s1SJCxaD1aPD2JNxjoaZ5eToJ3d+Cf1XmT
+IDwVU2/IQm3/S7+3k1O4gr9hpXvrUnINrIMah4bx4TQuCHdlgSpkMZ0mbpx
7NZyJyx0Bwnnjj+KCM4fx5MXPJrW25NgmOoepec7jrVbhoUZ+0hIsnxmWyL6
gSMvsDvOB5EQ6kUlF/eMYetmuGmeTkLYskX6OUqj+GWiZzc7k4Q0Z2vvlAkx
1nWJNGzOJqHyhbMH3SrGi9pqKgPySfjos/9SeKYYN3e7SmW/JOHUm3BtEonx
weEQH+WPJFxZ9MeC6uMjOEbuhWnvLAl5rs1zJrNDeK6iNfKpFBd+mT1rF1U7
hP0vSjWcY3HhumbqKzJ9CNtzrP0pBS5suxyq3mM7hCnlxnQ7ggvsONkeu+RB
/FDwg1O8kgvpdk7WH7cP4Nq1hu1Xd3HhWpHnbb/6PnzJMV3xjjMXygI3p2k8
6MM2J1TWZuzlgkNDSKNsWB8uez4b9dKDC/set0cc1u/DRab/rOk6woUQOa8L
cbHfcPImjwijSC5IfXpbX+fQiw9tv6HX+JwLm3YScYXSPVjOayqEr6YC92p3
2ftUdWCnYK8cMV8FXmYkxRbnd+Cs6I/NFeoqMFi0lqlzrQPbFGSvO66lAjuX
CAssd3XgmPndw1UGKtAwUawR1dmOlRJfepzdqgLMhUYmepI2zK/5y6YzUAW+
JTg9qQprxYbGcypZNSpAzQ/WrBr9L2a3t8j6xi0Gl9Q9lwQ1JfjQlTqveAdV
2J/m0rCkPhuViGTflCqoQZRot4X5qSpUzlEOXF6lBh19nYJGl1Y0aVArK1Wr
Br3j6lpB11uRrv2lhOY6NfD0Zk6s/6cVxSXK4ZgmNRiTrnbX2vAv8lwxozDa
pQb561y3Pia/IOYmUQqWqMFhnr9hW2MbgsCiSidtHuiubQnILO5AgTcDXVev
4kHFJ8v3YZ87UNZLwxG2Hg/kSoxFAVMdaBEjl4vX8GCKYbM3dW0naruU+qcW
4oFeR5xII78TncmMmhhx4MFs7Cq5iYwu9Lplz9Lo8zz4w2HL6pocEeIebN7l
GM6D3imtw8EfRMh/yjFmSRQPbJxWVcKACC1bbPejKJYHbs8vLTPQ70ExDtbv
uhN4cCUwpOfqkx7kUmvka/6IB1WBozuyy7+imXJO4UgrD7zEyjPxrD7k6BD9
9XUbD54OG8tWavehR93y/MhOHvzYGZCus6MPebKkhYJeHmQmbHc8kNCHPoDE
0XaUB2nM6b4Jw35051WPJF2BD7ndefbvfL8j08d4s9M6PtjgnYueygyh9pQY
ezdjPuik4f90GQ2hC7G7vQ9s5MMVhWeBuzyHULXvaFTwZj7ktK0bJMqGkNvy
FR9v7eDDBmbLsjMWwyj8duy+Zm8+RBy9Z36PM4LqhHtDnG/yQfVLZtaRUjE6
Ebgy1j2RDws4oYoObWLE95hIOZjEB+Koo6XfjBh5wdU3p+7xASRqEvP1o2hS
UqZ4O58Pso2PdQ/njyKBv27C53d80Db4Xf/+gzHk4zz91GWSD2+W/6iNqhtH
aaYllQbTfDDM9RMxfoyjFn5Eh/QcH6rYmatplQm0rU2Jk8ei4J6Tk7ey6wTS
81zpObuQgqPqbaUGgxNIfHi3UrLWz24Z47eRmkIrd6prH9OmoIiX7HbLcgp5
GIjMrFZRUBwqSNp2aAp9Evv7DBpQsEYp0erN6yn07EQkbb6RgtKuAmKRuwSd
Civya7OjwGyB2r/H8TQqcD99odCBgpiB55oyA9Oo38IiMcKJgp7MjgMyvBnk
IltTru9KgWb4aQe34BlkHt3DD/WhwBvVRT/dMIuYN8hKjVAKeovLzj7+OIdM
gj63j52jICd+x3dLuXkUsOvueIWQgh1fNJUPmc2jbtXfNI9GU5B3rZUIzZlH
b5MtT5bEU9BpWc0J3yoF0VkBK9zzKHi+pcVW15QBC79FqgU8oqCEON0i2cuA
azrJnAuFFLTfd2GZhzHg1oOK0fsvKJDifCV13zMgI5eiv5VToE2b9Q+7MkFn
YHWhpIICGaGTME/IhNzfrDPYHyhYt6cmbiyXCYUPj8X8VkeB4XxIvN4sE+hH
75yOfqEAdJWX5qezwGKk1fZcBwXhQVpVvFoWvDUUm1/vpsBd4+F1vRkWVBXw
tZ72UaAnl+rr6CgNLU+OjkyO//wn5oHLcmUZGHvOuxj6iwAK1+xbMVcgCyem
DE5fVRKAWcaBpsk+WZAYW/mnkQKwWJgt7F8qB4xX/o5lPAFENfyr/umWHCws
LteU1xbAXymKvWcvy8PV2RZSdZUAxunSMNlaeSDMh+VX6gngnV1ydemvCsDD
akO2RgIwlJRZMRIUQLvkyKvLIIBt/izL3CJFyGEIH6ZaCMDkYmXVGJMNepsT
7z62EsCq6gmZdzvZsPZNWUT9NgFYx3sg00E2bC5XtVfZLYAIDR2RCHHAjef4
4pOzALbEuu48dowD/wP0RI46
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{1.5697683999510592`, 3.680882091591942}, {
        1.569780314353465, -3.6969707805590066`}}], 
       LineBox[{{4.71114644518174, 3.680882091591942}, {
        4.711159739514526, -3.6969707805590066`}}], 
       LineBox[{{7.85465839562941, 3.680882091591942}, {
        7.85467139451763, -3.6969707805590066`}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-3.6969707805590066`, 3.680882091591942}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", "x", ")"}], 
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"tan", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6900939272803*^9, 3.690093944615713*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{654, 659},
WindowMargins->{{Automatic, 76}, {-45, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"->{
  Cell[350953, 8974, 453, 11, 68, "Print",
   CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"]},
 "Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"->{
  Cell[118950, 4010, 193, 3, 44, "Print",
   CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]},
 "Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"->{
  Cell[390907, 9876, 2153, 36, 88, "Print",
   CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"]},
 "Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"->{
  Cell[190025, 5786, 450, 11, 47, "Print",
   CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"]},
 "Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"->{
  Cell[183961, 5635, 1995, 33, 88, "Print",
   CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"]},
 "Info-59173d98-7577-4534-ad73-126483fd6107"->{
  Cell[211815, 6407, 419, 10, 47, "Print",
   CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"]},
 "Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"->{
  Cell[208319, 6312, 477, 11, 47, "Print",
   CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"]},
 "Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"->{
  Cell[212237, 6419, 425, 10, 47, "Print",
   CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]},
 "Info-913b775d-8622-437f-a24c-3c3cd89342aa"->{
  Cell[115962, 3944, 2193, 36, 88, "Print",
   CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06", 445994, 10896},
 {"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016", 446145, 10899},
 {"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf", 446295, 10902},
 {"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57", 446447, 10905},
 {"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28", 446598, 10908},
 {"Info-59173d98-7577-4534-ad73-126483fd6107", 446750, 10911},
 {"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2", 446901, 10914},
 {"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0", 447052, 10917},
 {"Info-913b775d-8622-437f-a24c-3c3cd89342aa", 447203, 10920}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 2, 79, "Chapter"],
Cell[CellGroupData[{
Cell[759, 28, 330, 4, 31, "Item"],
Cell[1092, 34, 522, 10, 67, "Item"],
Cell[1617, 46, 173, 5, 31, "Item"],
Cell[1793, 53, 171, 2, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2001, 60, 96, 1, 32, "Input"],
Cell[2100, 63, 76, 1, 33, "Output"]
}, Open  ]],
Cell[2191, 67, 475, 10, 53, "Item"],
Cell[CellGroupData[{
Cell[2691, 81, 98, 1, 32, "Item"],
Cell[2792, 84, 89, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2918, 90, 103, 3, 32, "Input"],
Cell[3024, 95, 137, 2, 33, "Output"]
}, Open  ]],
Cell[3176, 100, 239, 7, 30, "Item"],
Cell[CellGroupData[{
Cell[3440, 111, 118, 2, 32, "Input"],
Cell[3561, 115, 95, 2, 33, "Output"]
}, Open  ]],
Cell[3671, 120, 101, 1, 31, "Item"],
Cell[3775, 123, 89, 1, 53, "Input"],
Cell[CellGroupData[{
Cell[3889, 128, 269, 5, 32, "Input"],
Cell[4161, 135, 73, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4271, 141, 261, 7, 32, "Input"],
Cell[4535, 150, 74, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4658, 157, 120, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[4803, 162, 167, 3, 31, "Item"],
Cell[4973, 167, 251, 5, 49, "Item"],
Cell[5227, 174, 270, 5, 49, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5534, 184, 378, 9, 32, "Input"],
Cell[5915, 195, 151, 3, 33, "Output"]
}, Open  ]],
Cell[6081, 201, 406, 10, 32, "Input"],
Cell[6490, 213, 275, 6, 89, "Text"],
Cell[CellGroupData[{
Cell[6790, 223, 112, 1, 31, "Item"],
Cell[6905, 226, 140, 1, 31, "Item"],
Cell[7048, 229, 130, 1, 49, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7227, 236, 139, 2, 79, "Chapter"],
Cell[CellGroupData[{
Cell[7391, 242, 108, 1, 31, "Item"],
Cell[7502, 245, 128, 1, 31, "Item"],
Cell[7633, 248, 209, 4, 31, "Item"],
Cell[7845, 254, 239, 3, 31, "Item"],
Cell[8087, 259, 229, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8353, 267, 121, 2, 32, "Input"],
Cell[8477, 271, 97, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8611, 278, 140, 3, 32, "Input"],
Cell[8754, 283, 87, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8878, 289, 153, 3, 32, "Input"],
Cell[9034, 294, 192, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9263, 306, 155, 3, 32, "Input"],
Cell[9421, 311, 191, 7, 33, "Output"]
}, Open  ]],
Cell[9627, 321, 16, 0, 32, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9680, 326, 122, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[9827, 331, 326, 6, 67, "Item"],
Cell[10156, 339, 181, 4, 31, "Item"]
}, Open  ]],
Cell[10352, 346, 197, 4, 32, "Input"],
Cell[10552, 352, 144, 1, 53, "Input"],
Cell[CellGroupData[{
Cell[10721, 357, 113, 1, 32, "Input"],
Cell[10837, 360, 97, 2, 33, "Output"]
}, Open  ]],
Cell[10949, 365, 224, 5, 31, "Item"],
Cell[11176, 372, 148, 2, 32, "Input"],
Cell[11327, 376, 98, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[11450, 382, 127, 2, 32, "Input"],
Cell[11580, 386, 99, 2, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[11728, 394, 105, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[11858, 399, 178, 2, 31, "Item"],
Cell[12039, 403, 307, 6, 49, "Item"],
Cell[12349, 411, 158, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12544, 419, 125, 2, 32, "Input"],
Cell[12672, 423, 513, 12, 23, "Message"],
Cell[13188, 437, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13319, 443, 118, 2, 32, "Input"],
Cell[13440, 447, 73, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13550, 453, 176, 4, 53, "Input"],
Cell[13729, 459, 92, 2, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13858, 466, 178, 3, 32, "Input"],
Cell[14039, 471, 497, 10, 23, "Message"],
Cell[14539, 483, 95, 1, 33, "Output"]
}, Open  ]],
Cell[14649, 487, 139, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14825, 493, 128, 1, 136, "Chapter"],
Cell[CellGroupData[{
Cell[14978, 498, 259, 5, 31, "Item"],
Cell[15240, 505, 244, 3, 31, "Item"],
Cell[15487, 510, 244, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15768, 518, 360, 9, 53, "Input"],
Cell[16131, 529, 162, 2, 166, "Output"]
}, Open  ]],
Cell[16308, 534, 96, 1, 32, "Input"],
Cell[16407, 537, 183, 4, 49, "Item"],
Cell[CellGroupData[{
Cell[16615, 545, 132, 2, 32, "Input"],
Cell[16750, 549, 191, 4, 166, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16978, 558, 204, 4, 31, "Item"],
Cell[17185, 564, 160, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17382, 572, 224, 5, 53, "Input"],
Cell[17609, 579, 137, 2, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[17795, 587, 109, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[17929, 592, 105, 1, 31, "Item"],
Cell[18037, 595, 133, 1, 31, "Item"],
Cell[18173, 598, 132, 1, 31, "Item"],
Cell[18308, 601, 129, 1, 31, "Item"],
Cell[18440, 604, 156, 3, 31, "Item"],
Cell[18599, 609, 194, 2, 31, "Item"],
Cell[18796, 613, 207, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19040, 622, 127, 2, 32, "Input"],
Cell[19170, 626, 73, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19280, 632, 168, 4, 32, "Input"],
Cell[19451, 638, 140, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19628, 644, 288, 7, 32, "Input"],
Cell[19919, 653, 214, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20170, 663, 130, 2, 32, "Input"],
Cell[20303, 667, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20434, 673, 99, 1, 32, "Input"],
Cell[20536, 676, 188, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20761, 686, 130, 2, 32, "Input"],
Cell[20894, 690, 75, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21006, 696, 130, 2, 32, "Input"],
Cell[21139, 700, 205, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21381, 710, 170, 4, 32, "Input"],
Cell[21554, 716, 100, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21691, 722, 130, 2, 32, "Input"],
Cell[21824, 726, 96, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21957, 732, 202, 5, 32, "Input"],
Cell[22162, 739, 218, 7, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22429, 752, 138, 2, 79, "Chapter"],
Cell[22570, 756, 138, 1, 31, "Item"],
Cell[22711, 759, 71, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[22807, 764, 108, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[22940, 769, 195, 4, 32, "Input"],
Cell[23138, 775, 147, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23322, 783, 120, 1, 31, "Item"],
Cell[23445, 786, 128, 1, 31, "Item"],
Cell[23576, 789, 135, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23748, 795, 128, 2, 32, "Input"],
Cell[23879, 799, 145, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24061, 807, 153, 3, 32, "Input"],
Cell[24217, 812, 223, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24477, 822, 161, 3, 32, "Input"],
Cell[24641, 827, 141, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24819, 835, 172, 4, 32, "Input"],
Cell[24994, 841, 300, 8, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[25343, 855, 121, 1, 86, "Section"],
Cell[CellGroupData[{
Cell[25489, 860, 158, 3, 31, "Item"],
Cell[25650, 865, 123, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25810, 871, 302, 6, 32, "Input"],
Cell[26115, 879, 228, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26380, 889, 151, 3, 32, "Input"],
Cell[26534, 894, 96, 1, 33, "Output"]
}, Open  ]],
Cell[26645, 898, 159, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[26829, 905, 166, 4, 32, "Input"],
Cell[26998, 911, 71, 1, 33, "Output"]
}, Open  ]],
Cell[27084, 915, 170, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[27279, 922, 371, 10, 53, "Input"],
Cell[27653, 934, 140, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27830, 942, 174, 4, 31, "Item"],
Cell[28007, 948, 174, 4, 49, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28218, 957, 174, 4, 32, "Input"],
Cell[28395, 963, 126, 3, 33, "Output"]
}, Open  ]],
Cell[28536, 969, 144, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[28705, 974, 341, 8, 32, "Input"],
Cell[29049, 984, 124, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29210, 991, 101, 1, 32, "Input"],
Cell[29314, 994, 200, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29551, 1003, 393, 10, 32, "Input"],
Cell[29947, 1015, 149, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30133, 1023, 97, 1, 32, "Input"],
Cell[30233, 1026, 196, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30466, 1035, 160, 3, 31, "Item"],
Cell[30629, 1040, 162, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30828, 1048, 474, 12, 53, "Input"],
Cell[31305, 1062, 172, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[31526, 1071, 127, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[31678, 1076, 102, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[31805, 1081, 193, 4, 32, "Input"],
Cell[32001, 1087, 215, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32253, 1097, 150, 3, 32, "Input"],
Cell[32406, 1102, 509, 11, 23, "Message"],
Cell[32918, 1115, 287, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33242, 1127, 186, 2, 31, "Item"],
Cell[33431, 1131, 213, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33681, 1140, 458, 10, 73, "Input"],
Cell[34142, 1152, 292, 6, 33, "Output"]
}, Open  ]],
Cell[34449, 1161, 157, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[34631, 1168, 183, 4, 32, "Input"],
Cell[34817, 1174, 252, 6, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35118, 1186, 104, 1, 53, "Subsection"],
Cell[35225, 1189, 166, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[35416, 1196, 99, 1, 32, "Input"],
Cell[35518, 1199, 250, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35805, 1210, 235, 5, 32, "Input"],
Cell[36043, 1217, 238, 5, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36342, 1229, 218, 3, 78, "Section"],
Cell[36563, 1234, 139, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[36727, 1239, 191, 4, 32, "Input"],
Cell[36921, 1245, 237, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37195, 1255, 129, 2, 32, "Input"],
Cell[37327, 1259, 73, 1, 33, "Output"]
}, Open  ]],
Cell[37415, 1263, 159, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[37599, 1270, 152, 3, 32, "Input"],
Cell[37754, 1275, 72, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37863, 1281, 213, 4, 31, "Item"],
Cell[38079, 1287, 180, 2, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38296, 1294, 157, 3, 32, "Input"],
Cell[38456, 1299, 142, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38635, 1307, 266, 6, 32, "Input"],
Cell[38904, 1315, 215, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39156, 1325, 232, 4, 32, "Input"],
Cell[39391, 1331, 251, 7, 33, "Output"]
}, Open  ]],
Cell[39657, 1341, 142, 1, 31, "Item"],
Cell[39802, 1344, 194, 4, 32, "Input"],
Cell[39999, 1350, 323, 8, 32, "Input"],
Cell[40325, 1360, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[40442, 1365, 111, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[40578, 1370, 123, 1, 31, "Item"],
Cell[40704, 1373, 155, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40896, 1381, 193, 4, 32, "Input"],
Cell[41092, 1387, 215, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41344, 1397, 130, 2, 32, "Input"],
Cell[41477, 1401, 74, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41588, 1407, 127, 2, 32, "Input"],
Cell[41718, 1411, 73, 1, 33, "Output"]
}, Open  ]],
Cell[41806, 1415, 193, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[42024, 1421, 178, 4, 32, "Input"],
Cell[42205, 1427, 205, 5, 33, "Output"]
}, Open  ]],
Cell[42425, 1435, 137, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[42587, 1441, 273, 6, 53, "Input"],
Cell[42863, 1449, 209, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43109, 1459, 228, 5, 49, "Item"],
Cell[43340, 1466, 183, 2, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43560, 1473, 176, 4, 32, "Input"],
Cell[43739, 1479, 202, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43978, 1489, 136, 2, 32, "Input"],
Cell[44117, 1493, 194, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44348, 1503, 141, 1, 31, "Item"],
Cell[44492, 1506, 126, 1, 31, "Item"]
}, Open  ]],
Cell[44633, 1510, 117, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[44775, 1516, 212, 5, 32, "Input"],
Cell[44990, 1523, 158, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45185, 1532, 133, 2, 32, "Input"],
Cell[45321, 1536, 211, 6, 48, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[45593, 1549, 115, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[45733, 1554, 107, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[45865, 1559, 192, 2, 31, "Item"],
Cell[46060, 1563, 231, 5, 31, "Item"],
Cell[46294, 1570, 163, 2, 31, "Item"],
Cell[46460, 1574, 298, 6, 31, "Item"],
Cell[46761, 1582, 318, 6, 49, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47128, 1594, 104, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[47257, 1599, 126, 1, 31, "Item"],
Cell[47386, 1602, 133, 1, 31, "Item"],
Cell[47522, 1605, 141, 1, 31, "Item"],
Cell[47666, 1608, 210, 4, 31, "Item"],
Cell[47879, 1614, 219, 4, 31, "Item"]
}, Open  ]],
Cell[48113, 1621, 385, 7, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48547, 1634, 172, 2, 78, "Section"],
Cell[CellGroupData[{
Cell[48744, 1640, 97, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[48866, 1645, 330, 6, 32, "Input"],
Cell[49199, 1653, 266, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49502, 1664, 163, 3, 31, "Item"],
Cell[49668, 1669, 214, 3, 49, "Item"]
}, Open  ]],
Cell[49897, 1675, 405, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[50327, 1686, 198, 3, 32, "Input"],
Cell[50528, 1691, 316, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50881, 1703, 212, 5, 32, "Input"],
Cell[51096, 1710, 235, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51368, 1720, 281, 7, 32, "Input"],
Cell[51652, 1729, 213, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51902, 1739, 154, 3, 32, "Input"],
Cell[52059, 1744, 213, 5, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[52321, 1755, 98, 1, 53, "Subsection"],
Cell[52422, 1758, 127, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[52574, 1763, 128, 2, 32, "Input"],
Cell[52705, 1767, 212, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52954, 1777, 69, 1, 32, "Input"],
Cell[53026, 1780, 212, 5, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53287, 1791, 100, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[53412, 1796, 133, 1, 31, "Item"],
Cell[53548, 1799, 175, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53760, 1808, 198, 4, 32, "Input"],
Cell[53961, 1814, 147, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54145, 1822, 164, 3, 31, "Item"],
Cell[54312, 1827, 168, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54517, 1835, 156, 3, 32, "Input"],
Cell[54676, 1840, 224, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54937, 1850, 187, 4, 32, "Input"],
Cell[55127, 1856, 375, 11, 33, "Output"]
}, Open  ]],
Cell[55517, 1870, 176, 4, 31, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[55742, 1880, 129, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[55896, 1885, 207, 4, 31, "Item"],
Cell[56106, 1891, 211, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56354, 1900, 215, 5, 32, "Input"],
Cell[56572, 1907, 152, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56761, 1915, 130, 2, 32, "Input"],
Cell[56894, 1919, 71, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57002, 1925, 151, 3, 32, "Input"],
Cell[57156, 1930, 73, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57266, 1936, 126, 2, 32, "Input"],
Cell[57395, 1940, 73, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57505, 1946, 168, 4, 32, "Input"],
Cell[57676, 1952, 73, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57786, 1958, 184, 4, 32, "Input"],
Cell[57973, 1964, 71, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58093, 1971, 113, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[58231, 1976, 238, 5, 32, "Input"],
Cell[58472, 1983, 225, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58734, 1993, 158, 3, 31, "Item"],
Cell[58895, 1998, 156, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59088, 2006, 235, 3, 53, "Subsection"],
Cell[CellGroupData[{
Cell[59348, 2013, 265, 5, 31, "Item"],
Cell[59616, 2020, 281, 3, 31, "Item"],
Cell[59900, 2025, 285, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60222, 2033, 147, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[60394, 2039, 125, 1, 31, "Item"],
Cell[60522, 2042, 694, 12, 124, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61265, 2060, 102, 1, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[61392, 2065, 442, 10, 53, "Input"],
Cell[61837, 2077, 171, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62045, 2085, 159, 3, 32, "Input"],
Cell[62207, 2090, 137, 3, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[62405, 2100, 117, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[62547, 2105, 185, 2, 31, "Item"],
Cell[62735, 2109, 278, 5, 31, "Item"],
Cell[63016, 2116, 217, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63270, 2124, 178, 4, 32, "Input"],
Cell[63451, 2130, 205, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63693, 2140, 268, 6, 32, "Input"],
Cell[63964, 2148, 233, 5, 33, "Output"]
}, Open  ]],
Cell[64212, 2156, 238, 4, 49, "Item"],
Cell[CellGroupData[{
Cell[64475, 2164, 368, 10, 32, "Input"],
Cell[64846, 2176, 141, 3, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[65048, 2186, 122, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[65195, 2191, 154, 3, 31, "Item"],
Cell[65352, 2196, 126, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65515, 2202, 290, 7, 32, "Input"],
Cell[65808, 2211, 206, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66051, 2221, 139, 2, 32, "Input"],
Cell[66193, 2225, 199, 4, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[66441, 2235, 112, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[66578, 2240, 178, 4, 32, "Input"],
Cell[66759, 2246, 224, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67020, 2256, 191, 4, 32, "Input"],
Cell[67214, 2262, 213, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67464, 2272, 190, 4, 32, "Input"],
Cell[67657, 2278, 233, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67927, 2288, 118, 1, 53, "Subsection"],
Cell[68048, 2291, 174, 4, 31, "Item"],
Cell[CellGroupData[{
Cell[68247, 2299, 276, 5, 32, "Input"],
Cell[68526, 2306, 488, 9, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69051, 2320, 157, 3, 31, "Item"],
Cell[69211, 2325, 175, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69423, 2334, 99, 1, 32, "Input"],
Cell[69525, 2337, 212, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69774, 2347, 200, 4, 32, "Input"],
Cell[69977, 2353, 149, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[70175, 2362, 135, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[70335, 2367, 282, 7, 32, "Input"],
Cell[70620, 2376, 188, 4, 33, "Output"]
}, Open  ]],
Cell[70823, 2383, 162, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[71010, 2390, 99, 1, 32, "Input"],
Cell[71112, 2393, 186, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71335, 2403, 130, 2, 32, "Input"],
Cell[71468, 2407, 148, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[71665, 2416, 147, 1, 53, "Subsection"],
Cell[71815, 2419, 169, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[72009, 2426, 129, 2, 32, "Input"],
Cell[72141, 2430, 186, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72364, 2440, 99, 1, 32, "Input"],
Cell[72466, 2443, 147, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72650, 2451, 162, 3, 32, "Input"],
Cell[72815, 2456, 128, 3, 33, "Output"]
}, Open  ]],
Cell[72958, 2462, 156, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[73139, 2469, 155, 3, 32, "Input"],
Cell[73297, 2474, 146, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73492, 2483, 94, 1, 53, "Subsection"],
Cell[73589, 2486, 133, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[73747, 2491, 231, 5, 32, "Input"],
Cell[73981, 2498, 179, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74197, 2507, 231, 5, 32, "Input"],
Cell[74431, 2514, 147, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74615, 2522, 158, 3, 32, "Input"],
Cell[74776, 2527, 184, 4, 33, "Output"]
}, Open  ]],
Cell[74975, 2534, 212, 4, 31, "Item"],
Cell[CellGroupData[{
Cell[75212, 2542, 280, 7, 32, "Input"],
Cell[75495, 2551, 216, 5, 33, "Output"]
}, Open  ]],
Cell[75726, 2559, 105, 1, 31, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[75892, 2567, 120, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[76037, 2572, 116, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[76178, 2577, 212, 4, 31, "Item"],
Cell[76393, 2583, 174, 2, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76604, 2590, 197, 4, 32, "Input"],
Cell[76804, 2596, 145, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76986, 2604, 291, 8, 32, "Input"],
Cell[77280, 2614, 287, 8, 33, "Output"]
}, Open  ]],
Cell[77582, 2625, 173, 4, 31, "Item"],
Cell[CellGroupData[{
Cell[77780, 2633, 162, 3, 32, "Input"],
Cell[77945, 2638, 661, 18, 48, "Output"]
}, Open  ]],
Cell[78621, 2659, 402, 8, 32, "Input"],
Cell[CellGroupData[{
Cell[79048, 2671, 96, 1, 32, "Input"],
Cell[79147, 2674, 256, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79440, 2686, 348, 8, 32, "Input"],
Cell[79791, 2696, 259, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80087, 2708, 386, 8, 32, "Input"],
Cell[80476, 2718, 697, 19, 48, "Output"]
}, Open  ]],
Cell[81188, 2740, 351, 6, 49, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81576, 2751, 109, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[81710, 2756, 114, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[81849, 2761, 255, 5, 31, "Item"],
Cell[82107, 2768, 274, 6, 31, "Item"],
Cell[82384, 2776, 241, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82662, 2784, 337, 9, 32, "Input"],
Cell[83002, 2795, 257, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83296, 2807, 291, 8, 32, "Input"],
Cell[83590, 2817, 257, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83884, 2829, 147, 3, 32, "Input"],
Cell[84034, 2834, 235, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84306, 2846, 186, 4, 53, "Input"],
Cell[84495, 2852, 338, 12, 33, "Output"]
}, Open  ]],
Cell[84848, 2867, 167, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[85040, 2874, 134, 2, 32, "Input"],
Cell[85177, 2878, 117, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85343, 2887, 130, 2, 53, "Subsection"],
Cell[CellGroupData[{
Cell[85498, 2893, 184, 4, 31, "Item"],
Cell[85685, 2899, 206, 4, 31, "Item"],
Cell[85894, 2905, 153, 2, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86084, 2912, 369, 10, 32, "Input"],
Cell[86456, 2924, 284, 8, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86777, 2937, 461, 13, 32, "Input"],
Cell[87241, 2952, 296, 9, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87574, 2966, 361, 8, 32, "Input"],
Cell[87938, 2976, 294, 8, 33, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88293, 2991, 104, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[88422, 2996, 402, 7, 85, "Item"],
Cell[88827, 3005, 267, 5, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89131, 3015, 234, 6, 32, "Input"],
Cell[89368, 3023, 358, 9, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89763, 3037, 131, 2, 32, "Input"],
Cell[89897, 3041, 676, 19, 66, "Output"]
}, Open  ]],
Cell[90588, 3063, 164, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[90777, 3070, 161, 3, 32, "Input"],
Cell[90941, 3075, 543, 14, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91521, 3094, 134, 2, 32, "Input"],
Cell[91658, 3098, 753, 21, 102, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92460, 3125, 109, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[92594, 3130, 289, 8, 32, "Input"],
Cell[92886, 3140, 235, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93158, 3152, 160, 3, 32, "Input"],
Cell[93321, 3157, 639, 18, 48, "Output"]
}, Open  ]],
Cell[93975, 3178, 128, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[94128, 3183, 225, 4, 32, "Input"],
Cell[94356, 3189, 696, 20, 66, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95089, 3214, 127, 1, 31, "Item"],
Cell[95219, 3217, 120, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95376, 3223, 314, 10, 53, "Input"],
Cell[95693, 3235, 213, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95943, 3247, 211, 4, 32, "Input"],
Cell[96157, 3253, 302, 11, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96496, 3269, 292, 7, 32, "Input"],
Cell[96791, 3278, 215, 7, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[97055, 3291, 123, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[97203, 3296, 207, 4, 31, "Item"],
Cell[97413, 3302, 219, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97669, 3311, 287, 8, 32, "Input"],
Cell[97959, 3321, 233, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98229, 3333, 292, 8, 32, "Input"],
Cell[98524, 3343, 238, 7, 33, "Output"]
}, Open  ]],
Cell[98777, 3353, 87, 2, 32, "Input"],
Cell[CellGroupData[{
Cell[98889, 3359, 187, 4, 32, "Input"],
Cell[99079, 3365, 698, 19, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99814, 3389, 158, 3, 32, "Input"],
Cell[99975, 3394, 644, 18, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100656, 3417, 211, 4, 32, "Input"],
Cell[100870, 3423, 814, 24, 64, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[101733, 3453, 125, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[101883, 3458, 291, 8, 32, "Input"],
Cell[102177, 3468, 238, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102452, 3480, 133, 2, 32, "Input"],
Cell[102588, 3484, 640, 18, 48, "Output"]
}, Open  ]],
Cell[103243, 3505, 244, 4, 31, "Item"],
Cell[CellGroupData[{
Cell[103512, 3513, 341, 9, 32, "Input"],
Cell[103856, 3524, 71, 1, 33, "Output"]
}, Open  ]],
Cell[103942, 3528, 173, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[104140, 3534, 318, 9, 32, "Input"],
Cell[104461, 3545, 127, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104625, 3553, 173, 4, 32, "Input"],
Cell[104801, 3559, 118, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104956, 3567, 267, 5, 31, "Item"],
Cell[105226, 3574, 124, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105387, 3580, 318, 9, 32, "Input"],
Cell[105708, 3591, 151, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105896, 3599, 224, 6, 32, "Input"],
Cell[106123, 3607, 142, 3, 33, "Output"]
}, Open  ]],
Cell[106280, 3613, 166, 3, 31, "Item"],
Cell[106449, 3618, 223, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[106697, 3628, 133, 2, 32, "Input"],
Cell[106833, 3632, 672, 18, 48, "Output"]
}, Open  ]],
Cell[107520, 3653, 96, 1, 32, "Input"],
Cell[107619, 3656, 94, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107750, 3662, 114, 1, 78, "Section"],
Cell[107867, 3665, 142, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[108034, 3670, 290, 8, 32, "Input"],
Cell[108327, 3680, 233, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108597, 3692, 128, 2, 32, "Input"],
Cell[108728, 3696, 158, 4, 33, "Output"]
}, Open  ]],
Cell[108901, 3703, 94, 1, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[109044, 3710, 111, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[109180, 3715, 108, 1, 78, "Section"],
Cell[109291, 3718, 188, 4, 49, "Item"],
Cell[109482, 3724, 343, 9, 55, "Code"],
Cell[CellGroupData[{
Cell[109850, 3737, 177, 4, 31, "Item"],
Cell[110030, 3743, 143, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110210, 3749, 501, 12, 76, "Code"],
Cell[110714, 3763, 71, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110822, 3769, 230, 4, 31, "Item"],
Cell[111055, 3775, 220, 4, 31, "Item"],
Cell[111278, 3781, 200, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111515, 3790, 120, 2, 32, "Input"],
Cell[111638, 3794, 71, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111746, 3800, 129, 2, 32, "Input"],
Cell[111878, 3804, 71, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111986, 3810, 241, 6, 32, "Input"],
Cell[112230, 3818, 93, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112360, 3824, 301, 6, 32, "Input"],
Cell[112664, 3832, 71, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112772, 3838, 71, 1, 32, "Input"],
Cell[112846, 3841, 73, 1, 33, "Output"]
}, Open  ]],
Cell[112934, 3845, 301, 5, 34, "Item"],
Cell[CellGroupData[{
Cell[113260, 3854, 303, 8, 53, "Input"],
Cell[113566, 3864, 97, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113712, 3871, 112, 1, 78, "Section"],
Cell[113827, 3874, 284, 6, 31, "Item"],
Cell[114114, 3882, 273, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[114412, 3893, 305, 8, 32, "Input"],
Cell[114720, 3903, 126, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[114895, 3912, 122, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[115042, 3917, 132, 1, 31, "Item"],
Cell[115177, 3920, 296, 5, 31, "Item"],
Cell[115476, 3927, 155, 3, 31, "Item"]
}, Open  ]],
Cell[115646, 3933, 175, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[115846, 3940, 113, 2, 32, "Input"],
Cell[115962, 3944, 2193, 36, 88, "Print",
 CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]
}, Open  ]],
Cell[118170, 3983, 223, 6, 32, "Input"],
Cell[118396, 3991, 204, 4, 31, "Item"],
Cell[118603, 3997, 203, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[118831, 4006, 116, 2, 32, "Input"],
Cell[118950, 4010, 193, 3, 44, "Print",
 CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]
}, Open  ]],
Cell[119158, 4016, 71, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119266, 4022, 111, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[119402, 4027, 239, 4, 49, "Item"],
Cell[119644, 4033, 258, 5, 67, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[119963, 4045, 110, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[120098, 4050, 95, 1, 78, "Section"],
Cell[120196, 4053, 249, 7, 32, "Input"],
Cell[120448, 4062, 163, 3, 31, "Item"],
Cell[CellGroupData[{
Cell[120636, 4069, 133, 2, 32, "Input"],
Cell[120772, 4073, 7029, 188, 252, "Output"]
}, Open  ]],
Cell[127816, 4264, 134, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[127975, 4269, 137, 2, 32, "Input"],
Cell[128115, 4273, 20266, 473, 339, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[148418, 4751, 332, 6, 49, "Item"],
Cell[148753, 4759, 312, 6, 49, "Item"]
}, Open  ]],
Cell[149080, 4768, 328, 10, 32, "Input"],
Cell[CellGroupData[{
Cell[149433, 4782, 184, 3, 32, "Input"],
Cell[149620, 4787, 10925, 276, 256, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[160594, 5069, 99, 1, 78, "Section"],
Cell[160696, 5072, 173, 4, 31, "Item"],
Cell[CellGroupData[{
Cell[160894, 5080, 240, 6, 32, "Input"],
Cell[161137, 5088, 215, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[161389, 5098, 234, 4, 32, "Input"],
Cell[161626, 5104, 2769, 77, 268, "Output"]
}, Open  ]],
Cell[164410, 5184, 176, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[164623, 5193, 99, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[164747, 5198, 143, 1, 31, "Item"],
Cell[164893, 5201, 180, 2, 31, "Item"],
Cell[165076, 5205, 417, 7, 49, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[165530, 5217, 275, 6, 32, "Input"],
Cell[165808, 5225, 1271, 31, 269, "Output"]
}, Open  ]],
Cell[167094, 5259, 393, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[167512, 5275, 360, 11, 32, InheritFromParent],
Cell[167875, 5288, 337, 11, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168249, 5304, 131, 2, 32, "Input"],
Cell[168383, 5308, 908, 25, 270, "Output"]
}, Open  ]],
Cell[169306, 5336, 357, 6, 31, "Item"],
Cell[CellGroupData[{
Cell[169688, 5346, 238, 5, 32, "Input"],
Cell[169929, 5353, 890, 25, 270, "Output"]
}, Open  ]],
Cell[170834, 5381, 212, 4, 31, "Item"],
Cell[CellGroupData[{
Cell[171071, 5389, 438, 12, 32, "Input"],
Cell[171512, 5403, 374, 11, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171923, 5419, 241, 4, 32, "Input"],
Cell[172167, 5425, 11411, 193, 156, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[183627, 5624, 150, 2, 78, "Section"],
Cell[CellGroupData[{
Cell[183802, 5630, 156, 3, 31, "Item"],
Cell[183961, 5635, 1995, 33, 88, "Print",
 CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"],
Cell[CellGroupData[{
Cell[185981, 5672, 253, 5, 32, "Input"],
Cell[186237, 5679, 958, 26, 269, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[187244, 5711, 269, 6, 32, "Input"],
Cell[187516, 5719, 1114, 29, 269, "Output"]
}, Open  ]],
Cell[188645, 5751, 323, 7, 55, "Code"]
}, Open  ]],
Cell[CellGroupData[{
Cell[189005, 5763, 108, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[189138, 5768, 134, 1, 31, "Item"],
Cell[189275, 5771, 400, 7, 31, "Item"],
Cell[189678, 5780, 344, 4, 31, "Item"],
Cell[190025, 5786, 450, 11, 47, "Print",
 CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"],
Cell[CellGroupData[{
Cell[190500, 5801, 245, 5, 32, "Input"],
Cell[190748, 5808, 188, 4, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[190985, 5818, 82, 2, 32, "Input"],
Cell[191070, 5822, 93, 2, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191200, 5829, 99, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[191324, 5834, 301, 7, 32, "Input"],
Cell[191628, 5843, 6900, 188, 260, "Output"]
}, Open  ]],
Cell[198543, 6034, 364, 7, 49, "Item"],
Cell[CellGroupData[{
Cell[198932, 6045, 254, 6, 32, "Input"],
Cell[199189, 6053, 6926, 189, 260, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[206152, 6247, 567, 17, 32, "Input"],
Cell[206722, 6266, 881, 24, 266, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[207652, 6296, 102, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[207779, 6301, 293, 4, 31, "Item"],
Cell[208075, 6307, 241, 3, 31, "Item"],
Cell[208319, 6312, 477, 11, 47, "Print",
 CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"],
Cell[208799, 6325, 269, 5, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209105, 6335, 446, 8, 32, "Input"],
Cell[209554, 6345, 1442, 33, 270, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[211045, 6384, 95, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[211165, 6389, 234, 3, 31, "Item"],
Cell[211402, 6394, 182, 2, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211621, 6401, 169, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[211815, 6407, 419, 10, 47, "Print",
 CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"],
Cell[212237, 6419, 425, 10, 47, "Print",
 CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]
}, Open  ]],
Cell[212677, 6432, 108, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[212810, 6437, 688, 15, 32, "Input"],
Cell[213501, 6454, 7547, 161, 267, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[221085, 6620, 649, 18, 32, "Input"],
Cell[221737, 6640, 33891, 605, 264, "Output"]
}, Open  ]],
Cell[255643, 7248, 161, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[255829, 7254, 381, 10, 32, "Input"],
Cell[256213, 7266, 34128, 613, 264, "Output"]
}, Open  ]],
Cell[290356, 7882, 191, 4, 31, "Item"],
Cell[CellGroupData[{
Cell[290572, 7890, 466, 12, 32, "Input"],
Cell[291041, 7904, 33973, 609, 264, "Output"]
}, Open  ]],
Cell[325029, 8516, 185, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[325239, 8522, 526, 13, 53, "Input"],
Cell[325768, 8537, 24511, 414, 278, "Output"]
}, Open  ]],
Cell[350294, 8954, 96, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350427, 8960, 168, 2, 43, "Subsubsection"],
Cell[CellGroupData[{
Cell[350620, 8966, 164, 2, 31, "Item"],
Cell[350787, 8970, 163, 2, 31, "Item"],
Cell[350953, 8974, 453, 11, 68, "Print",
 CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"],
Cell[CellGroupData[{
Cell[351431, 8989, 705, 19, 53, "Input"],
Cell[352139, 9010, 38422, 849, 274, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[390646, 9868, 105, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[390776, 9873, 128, 1, 31, "Item"],
Cell[390907, 9876, 2153, 36, 88, "Print",
 CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"],
Cell[CellGroupData[{
Cell[393085, 9916, 341, 9, 32, "Input"],
Cell[393429, 9927, 3550, 66, 258, "Output"]
}, Open  ]]
}, Open  ]],
Cell[397006, 9997, 92, 1, 32, InheritFromParent],
Cell[397101, 10000, 142, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[397268, 10005, 439, 12, 53, "Input"],
Cell[397710, 10019, 47738, 856, 271, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
