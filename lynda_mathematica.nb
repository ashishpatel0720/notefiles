(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    638371,      15590]
NotebookOptionsPosition[    586042,      13909]
NotebookOutlinePosition[    591969,      14033]
CellTagsIndexPosition[    590350,      14004]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["  Introduction", "Chapter",
 CellChangeTimes->{{3.6885295326450014`*^9, 3.688529534507243*^9}, {
  3.6885334362351274`*^9, 3.6885334383315253`*^9}}],

Cell[CellGroupData[{

Cell["\[Pi] is indicated by Pi", "Item",
 CellChangeTimes->{{3.688528239883212*^9, 3.6885282470439854`*^9}, {
   3.6885284669863873`*^9, 3.688528476230549*^9}, {3.688528637102685*^9, 
   3.688528653210425*^9}, 3.68852949838216*^9, {3.688533443339864*^9, 
   3.68853345353366*^9}, {3.6886265537390733`*^9, 3.6886265537430763`*^9}}],

Cell[TextData[{
 "nearly all operations in  ",
 StyleBox["Mathematica returns after manipulating and do not change the \
actual value, so we have to take it as return we we want to change.",
  FontSlant->"Italic"],
 "\n"
}], "Item",
 CellChangeTimes->{{3.688528239883212*^9, 3.6885282470439854`*^9}, {
   3.6885284669863873`*^9, 3.688528476230549*^9}, {3.688528637102685*^9, 
   3.688528653210425*^9}, 3.68852949838216*^9, {3.688533443339864*^9, 
   3.68853345353366*^9}, {3.6886265537390733`*^9, 3.6886266353726034`*^9}}],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is case sensitive language"
}], "Item",
 CellChangeTimes->{{3.688627396067088*^9, 3.688627417488896*^9}}],

Cell["It uses camel Notation for function names", "Item",
 CellChangeTimes->{{3.688627396067088*^9, 3.688627440016356*^9}, {
  3.690084215025635*^9, 3.69008421658568*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Pi"], "Input",
 CellChangeTimes->{{3.688528217802491*^9, 3.6885282180186357`*^9}}],

Cell[BoxData["\[Pi]"], "Output",
 CellChangeTimes->{3.6885283234509974`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"finding", " ", "numerical", " ", "value", " ", "of", " ", 
  "something", " ", "we", " ", "can", " ", "use", " ", 
  RowBox[{"N", "[", 
   RowBox[{"<", "value", ">"}], "]"}], " ", "or", " ", 
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"<", "value", ">"}], ",", 
    RowBox[{"int_precision", "_digits"}]}], "]"}]}]], "Item", "Input",
 CellChangeTimes->{{3.688528317196828*^9, 3.688528345134454*^9}, {
  3.6885283780363903`*^9, 3.688528418549918*^9}}],

Cell[CellGroupData[{

Cell["N[Pi]", "Item", "Input",
 CellChangeTimes->{{3.688528317196828*^9, 3.6885283694006305`*^9}}],

Cell[BoxData["3.141592653589793`"], "Output",
 CellChangeTimes->{3.6885283698259144`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"\[Pi]", ",", "20"}], "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData["3.1415926535897932384626433832795028841971693993751058209394`20.\
"], "Output",
 CellChangeTimes->{3.6885283922388563`*^9}]
}, Open  ]],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " is case sensitive language so,"
}], "Item",
 CellDingbat->"\[FivePointedStar]",
 CellChangeTimes->{
  3.688528603288143*^9, {3.68852865840989*^9, 3.6885286870689974`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "*", "pi"}]], "Input",
 CellChangeTimes->{{3.688528680402551*^9, 3.6885286822677946`*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "pi"}]], "Output",
 CellChangeTimes->{3.6885286828661933`*^9}]
}, Open  ]],

Cell["which is not 2*Pi", "Item",
 CellChangeTimes->{{3.688528697031164*^9, 3.6885287149891357`*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.6885289754780283`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", "21.8", "]"}], " ", "//", 
  RowBox[{"round", " ", "to", " ", "nearest", " ", "integer"}]}]], "Input",
 CellChangeTimes->{{3.688528909335933*^9, 3.6885289365840983`*^9}, {
  3.6885290718191867`*^9, 3.688529077141736*^9}}],

Cell[BoxData["22"], "Output",
 CellChangeTimes->{3.6885289169850335`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Round", "[", 
   RowBox[{"21.6", ",", "0.5"}], "]"}], "//", 
  RowBox[{
  "round", " ", "to", " ", "nearest", " ", "multipleof", " ", 
   "0.5"}]}]], "Input",
 CellChangeTimes->{{3.688529080169756*^9, 3.6885291126594152`*^9}}],

Cell[BoxData["21.5`"], "Output",
 CellChangeTimes->{3.688529095696106*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Suppressing output in Mathematica", "Chapter",
 CellChangeTimes->{{3.6900803261073084`*^9, 3.690080332727719*^9}}],

Cell[CellGroupData[{

Cell["\<\
 generally mathematica evaluates each and every line and show output for it\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.690080356164878*^9}}],

Cell["\<\
if we do not want output for some line we can suppress output using \
semicolon(;), this is same as matlab\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.6900803864304237`*^9}, {
  3.690080422273324*^9, 3.6900804222783227`*^9}}],

Cell["\<\
we will do it when we wanted mathematica to execute that line but do not show \
us output of that.(for execution shift+enter)\
\>", "Item",
 CellChangeTimes->{{3.6900803345324554`*^9, 3.6900803864304237`*^9}, {
  3.690080422273324*^9, 3.6900804693807273`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"var1", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "output", " ", "of", " ", "this", " ", "line", " ", "will", " ", "be", " ",
     "shown"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690080390454107*^9, 3.6900804032316275`*^9}, {
  3.6900804787934313`*^9, 3.6900804925245857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6900803968813915`*^9, 3.6900804754617777`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"var2", "=", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "output", " ", "of", " ", "this", " ", "line", " ", "will", " ", "not", 
    " ", "be", " ", "shown"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690080398033159*^9, 3.690080411391066*^9}, {
  3.690080498132325*^9, 3.6900805103598995`*^9}}],

Cell[TextData[{
 "\n",
 StyleBox["Mathematical Operators", "Chapter"]
}], "Text",
 CellChangeTimes->{{3.688529468982561*^9, 3.6885294861860294`*^9}, {
   3.6885295416740227`*^9, 3.6885295450132484`*^9}, 3.688529780520404*^9, {
   3.690080513256835*^9, 3.690080514789852*^9}}],

Cell[CellGroupData[{

Cell["+ and - for add and subtract", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529660721456*^9}}],

Cell[" * or space for multiplication so (a b) is same as (a*b)", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529708840536*^9}}],

Cell["/ for division and ^ for power\[LineSeparator]", "Item",
 CellChangeTimes->{{3.6885296474436073`*^9, 3.688529749148962*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["    Mathematical Functions", "Chapter",
 CellChangeTimes->{{3.6885297639833784`*^9, 3.688529801579443*^9}, 
   3.690080313795106*^9}],

Cell[CellGroupData[{

Cell["Mod[x,y] return reminder", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529830407662*^9}, {
  3.6902188186484456`*^9, 3.6902188212538404`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Mod\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives the remainder on division of \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) by \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Mod\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses an offset \
\\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Mod"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902188323477645`*^9},
 CellTags->"Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d"],

Cell["Quotient[x,y] returns quotient of division", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.6885298487628984`*^9}}],

Cell["\<\
N[x] returns numerical represenation of fraction or other expression\
\>", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688532999654775*^9}}],

Cell["N[x,n] return numerical value upto n digits after decimal", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688533022650106*^9}, {3.688533286215249*^9, 
  3.688533286219251*^9}}],

Cell["BaseForm[x,b] convert base 10 number x in base b", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688533022650106*^9}, {3.688533286215249*^9, 
  3.68853331504747*^9}, {3.690218795977835*^9, 3.690218795982834*^9}}],

Cell["Factor[poly] factorise polynomial", "Item",
 CellChangeTimes->{{3.6885298073863144`*^9, 3.688529873574587*^9}, {
  3.688532999647771*^9, 3.688533022650106*^9}, {3.688533286215249*^9, 
  3.68853331504747*^9}, {3.690218795977835*^9, 3.6902187986082325`*^9}, {
  3.6902188475300674`*^9, 3.6902188567140203`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", StyleBox[\\\"poly\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) factors a polynomial over the integers. \\n\
\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \\\
\"TI\\\"], \\\",\\\", RowBox[{\\\"Modulus\\\", \\\"\[Rule]\\\", \
StyleBox[\\\"p\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) factors a polynomial \
modulo a prime \\!\\(\\*StyleBox[\\\"p\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Factor\\\", \\\"[\\\", RowBox[{StyleBox[\\\"poly\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"Extension\\\", \\\"\[Rule]\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"a\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}]}], \\\"]\\\"}]\\) factors a \
polynomial allowing coefficients that are rational combinations of the \
algebraic numbers \\!\\(\\*SubscriptBox[StyleBox[\\\"a\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Factor"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902188610646815`*^9},
 CellTags->"Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Prime Number functions", "Subsection",
 CellChangeTimes->{{3.6902269731899014`*^9, 3.6902269779874964`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Prime\\\", \\\"[\\\", \
StyleBox[\\\"n\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\)\\!\\(\\*RowBox[{SuperscriptBox[\\\
\"\[Null]\\\", \\\"th\\\"], \\\" \\\"}]\\)prime number. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Prime"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902269156615095`*^9},
 CellTags->"Info-02b8c313-4e5b-4338-a61a-7aeffe471d89"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"NextPrime\\\", \\\"[\\\", StyleBox[\\\"n\
\\\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the next prime above \
\\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\).\\n\\!\\(\\*RowBox[{\\\"NextPrime\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"k\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives the \
\\!\\(\\*StyleBox[\\\"k\\\", \
\\\"TI\\\"]\\)\\!\\(\\*SuperscriptBox[\\\"\[Null]\\\", \\\"th\\\"]\\) prime \
above \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/NextPrime"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902270167790923`*^9},
 CellTags->"Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"PrimePi\\\", \\\"[\\\", StyleBox[\\\"x\\\
\", \\\"TI\\\"], \\\"]\\\"}]\\) gives the number of primes \
\\!\\(\\*RowBox[{StyleBox[\\\"\[Pi]\\\", \\\"TR\\\"], RowBox[{\\\"(\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\")\\\"}]}]\\) less than or equal to \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PrimePi"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690227212944149*^9},
 CellTags->"Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PrimePi", "[", "10", "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"no", " ", "of", " ", "primes", " ", "up", " ", "to", " ", "10"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690227223105719*^9, 3.690227243649035*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.690227229444473*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.6902270800187817`*^9, 3.690227246214426*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"16", " ", "Pi"}]], "Input",
 CellChangeTimes->{{3.6885299265385976`*^9, 3.6885299369955683`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.688529937695036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"16", "Pi"}], "]"}]], "Input",
 CellChangeTimes->{{3.688529939550272*^9, 3.688529949569951*^9}}],

Cell[BoxData["50.26548245743669`"], "Output",
 CellChangeTimes->{3.688529950224387*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"20", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885333191932335`*^9, 3.688533331346336*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"202\"\>", "\<\"3\"\>"],
   20,
   Editable->False],
  BaseForm[#, 3]& ]], "Output",
 CellChangeTimes->{3.6885333317806263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"20", ",", "5"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885333379397316`*^9, 3.6885333438876967`*^9}}],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"40\"\>", "\<\"5\"\>"],
   20,
   Editable->False],
  BaseForm[#, 5]& ]], "Output",
 CellChangeTimes->{3.6885333443480034`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factor", "[", 
  RowBox[{"1", "+", 
   RowBox[{"x", " ", "^", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902188805152545`*^9, 3.6902189126346474`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", "x", "+", 
    SuperscriptBox["x", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6902188932941566`*^9, 3.6902189131147213`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Series[] function expands a function ", "Item",
 CellChangeTimes->{{3.6902189865301065`*^9, 3.690218997378845*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", RowBox[{StyleBox[\
\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"]}], \\\"}\\\"}]}], \\\
\"]\\\"}]\\) generates a power series expansion for \\!\\(\\*StyleBox[\\\"f\\\
\", \\\"TI\\\"]\\) about the point \\!\\(\\*RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\"=\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}]\\) to order \
\\!\\(\\*SuperscriptBox[RowBox[{\\\"(\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\
\\\"], \\\"-\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"0\\\", \\\"TR\\\"]]}], \\\")\\\"}], StyleBox[\\\"n\\\", \\\"TI\\\
\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Series\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"x\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"y\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) successively finds series \
expansions with respect to \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), then \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\), etc. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Series"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902190022228327`*^9},
 CellTags->"Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   RowBox[{"Exp", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", "x", "+", 
   FractionBox[
    SuperscriptBox["x", "2"], "2"], "+", 
   FractionBox[
    SuperscriptBox["x", "3"], "6"], "+", 
   FractionBox[
    SuperscriptBox["x", "4"], "24"], "+", 
   FractionBox[
    SuperscriptBox["x", "5"], "120"], "+", 
   FractionBox[
    SuperscriptBox["x", "6"], "720"], "+", 
   FractionBox[
    SuperscriptBox["x", "7"], "5040"], "+", 
   FractionBox[
    SuperscriptBox["x", "8"], "40320"], "+", 
   FractionBox[
    SuperscriptBox["x", "9"], "362880"], "+", 
   FractionBox[
    SuperscriptBox["x", "10"], "3628800"], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "x", "]"}], "11"],
    SeriesData[$CellContext`x, 0, {}, 0, 11, 1],
    Editable->False]}],
  SeriesData[$CellContext`x, 0, {1, 1, 
    Rational[1, 2], 
    Rational[1, 6], 
    Rational[1, 24], 
    Rational[1, 120], 
    Rational[1, 720], 
    Rational[1, 5040], 
    Rational[1, 40320], 
    Rational[1, 362880], 
    Rational[1, 3628800]}, 0, 11, 1],
  Editable->False]], "Output",
 CellChangeTimes->{3.690219152103537*^9}]
}, Open  ]],

Cell[" normal removes last term", "Item",
 CellChangeTimes->{{3.690219175889924*^9, 3.69021919669075*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Normal", "[", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{"Exp", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"this", " ", "is", " ", "expansion", " ", "for", " ", 
     RowBox[{"e", "^", "x"}], " ", "from", " ", "x"}], "=", 
    RowBox[{"0", " ", "to", " ", "10"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902190086450214`*^9, 3.6902191205174847`*^9}, {
  3.690219163342429*^9, 3.690219163576818*^9}, {3.690219200019038*^9, 
  3.6902192242918825`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", "x", "+", 
  FractionBox[
   SuperscriptBox["x", "2"], "2"], "+", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "4"], "24"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "120"], "+", 
  FractionBox[
   SuperscriptBox["x", "6"], "720"], "+", 
  FractionBox[
   SuperscriptBox["x", "7"], "5040"], "+", 
  FractionBox[
   SuperscriptBox["x", "8"], "40320"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "362880"], "+", 
  FractionBox[
   SuperscriptBox["x", "10"], "3628800"]}]], "Output",
 CellChangeTimes->{{3.6902190192320604`*^9, 3.690219120908128*^9}, 
   3.6902191644518595`*^9, 3.6902192254481926`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6902192415114775`*^9, 3.690219277191023*^9}}],

Cell[BoxData[
 RowBox[{"x", "-", 
  FractionBox[
   SuperscriptBox["x", "3"], "6"], "+", 
  FractionBox[
   SuperscriptBox["x", "5"], "120"], "-", 
  FractionBox[
   SuperscriptBox["x", "7"], "5040"], "+", 
  FractionBox[
   SuperscriptBox["x", "9"], "362880"]}]], "Output",
 CellChangeTimes->{{3.6902192566401424`*^9, 3.690219277487913*^9}}]
}, Open  ]],

Cell["", "Text",
 CellChangeTimes->{{3.6902192289171085`*^9, 3.690219240011406*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Referring to previous calculations", "Chapter",
 CellChangeTimes->{{3.688530021543882*^9, 3.688530039861616*^9}}],

Cell[CellGroupData[{

Cell["\<\
one of the most important feature of mathematica is that it can refer to \
previously done calculations and this is the reason why every \
calculation(input as well as output) have a number associated with it. ex- \
In[11] and Out[11]\
\>", "Item",
 CellChangeTimes->{{3.688530043333932*^9, 3.6885301478771477`*^9}}],

Cell["\<\
if we wanted to refer to last previous output then use % sign \
\>", "Item",
 CellChangeTimes->{{3.6885301828224955`*^9, 3.6885302233019495`*^9}, 
   3.68853039908873*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"%", "  ", "//", 
  RowBox[{
  "which", " ", "as", " ", "the", " ", "last", " ", "output"}]}]], "Input",
 CellChangeTimes->{{3.6885302339070196`*^9, 3.6885302428199625`*^9}}],

Cell[BoxData[{"50.26548245743669`", "\[IndentingNewLine]", "%11"}], "Input",
 CellChangeTimes->{{3.6885303802011385`*^9, 3.688530381565048*^9}}],

Cell[CellGroupData[{

Cell[BoxData["50.26548245743669"], "Input",
 CellChangeTimes->{{3.6885303846571093`*^9, 3.6885303869966693`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.688530382085395*^9}]
}, Open  ]],

Cell["\<\
 to work with output no 11 we can use %11 or Out[11], this will acts as \
variable\
\>", "Item",
 CellChangeTimes->{{3.68853032207285*^9, 3.6885303468509054`*^9}, {
  3.688530408738163*^9, 3.6885304269212875`*^9}}],

Cell[BoxData["%11"], "Input",
 CellChangeTimes->{{3.688530370114414*^9, 3.688530370897936*^9}, {
  3.6885304195173492`*^9, 3.6885304196054087`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Input",
 CellChangeTimes->{3.6885304302625136`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Out", "[", "11", "]"}]], "Input",
 CellChangeTimes->{{3.6885304395427003`*^9, 3.6885304421219435`*^9}}],

Cell[BoxData[
 RowBox[{"16", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.6885304427433577`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Using variables", "Chapter",
 CellChangeTimes->{{3.688530491307227*^9, 3.6885305078562593`*^9}}],

Cell[CellGroupData[{

Cell[" rules for creating variables are same as C", "Item",
 CellChangeTimes->{{3.6885305093822775`*^9, 3.688530520422639*^9}, {
  3.6885310907274027`*^9, 3.688531103264761*^9}}],

Cell["\<\
_(underscore ) can \[OpenCurlyQuote]t be used here, because we use them in \
function definitions for variables\
\>", "Item",
 CellChangeTimes->{{3.6885305093822775`*^9, 3.688530520422639*^9}, {
  3.6885310907274027`*^9, 3.6885311162213984`*^9}, {3.690081363396265*^9, 
  3.6900813936439314`*^9}}],

Cell["\<\
rules of variables applied to all identifiers(function names etc.)\
\>", "Item",
 CellChangeTimes->{{3.690083198096404*^9, 3.6900832157601805`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"2", "=", "20", " "}]], "Input",
 CellChangeTimes->{{3.6885305364793415`*^9, 3.6885305650834107`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "setraw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Cannot assign to raw object \
\[NoBreak]\\!\\(2\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/setraw\\\", ButtonNote -> \
\\\"Set::setraw\\\"]\\)\"\>"}]], "Message", "MSG",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{{3.6885305397855453`*^9, 3.6885305728756056`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{{3.688530539786546*^9, 3.68853056755606*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", "20"}]], "Input",
 CellChangeTimes->{{3.6885310357250586`*^9, 3.688531036352477*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6885310368668194`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "*", 
   RowBox[{"20", "/", "3"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.688531038107647*^9, 3.688531040150008*^9}}],

Cell[BoxData[
 FractionBox["400", "3"]], "Output",
 CellChangeTimes->{3.688531042056279*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"_a", "=", "20", "  "}]], "Input",
 CellChangeTimes->{{3.6885310493341317`*^9, 3.688531050987753*^9}, {
  3.6885311276900473`*^9, 3.6885311375666285`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "write"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Tag \[NoBreak]\\!\\(Integer\\)\[NoBreak] in \
\[NoBreak]\\!\\(Blank[20]\\)\[NoBreak] is Protected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/write\\\", ButtonNote -> \
\\\"Set::write\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.688531053821642*^9, 3.6885311395679636`*^9}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6885310538226423`*^9, 3.688531139570965*^9}]
}, Open  ]],

Cell["for clearing a variable we can use Clear[var_name] method.", "Item",
 CellChangeTimes->{{3.690084232620372*^9, 3.69008424907656*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Importing and Exporting data from Files", "Chapter",
 CellChangeTimes->{{3.6885311979479165`*^9, 3.688531236500763*^9}}],

Cell[CellGroupData[{

Cell["\<\
Import[\[OpenCurlyDoubleQuote]<file_path>\[CloseCurlyDoubleQuote]] is the \
function which is used to import data \
\>", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885320981192503`*^9}}],

Cell["file_path could be absolute path, relative path or url", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885321145091763`*^9}, {3.6885322828683662`*^9, 
  3.6885322828733687`*^9}}],

Cell["file could be text , csv(stylesheet) , gif or any type", "Item",
 CellChangeTimes->{{3.688531970060304*^9, 3.6885320033895235`*^9}, {
  3.6885320981132455`*^9, 3.6885321145091763`*^9}, {3.6885322828683662`*^9, 
  3.6885323081722355`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"var", "=", 
   RowBox[{
   "Import", "[", 
    "\"\<C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\info.txt\>\"", "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.688532161243333*^9, 3.6885321915235205`*^9}, {
  3.6885322545504866`*^9, 3.6885322557282724`*^9}, {3.688532312865365*^9, 
  3.688532313918066*^9}}],

Cell[BoxData["\<\"10\\n20\\n30\\n40\\n50\\n60\\n70\"\>"], "Output",
 CellChangeTimes->{3.6885322562956505`*^9, 3.6885323155731688`*^9, 
  3.6885324268019075`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6885322501195335`*^9, 3.6885322525321417`*^9}}],

Cell["\<\
for showing data in table form we can use TableForm[data_list] function\
\[LineSeparator]\
\>", "Item",
 CellChangeTimes->{{3.6885323280504875`*^9, 3.6885323614402733`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", "var", "]"}]], "Input",
 CellChangeTimes->{{3.6885323641670895`*^9, 3.688532368317384*^9}}],

Cell[BoxData[
 TagBox["\<\"10\\n20\\n30\\n40\\n50\\n60\\n70\"\>",
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.68853236871865*^9, 3.688532429690833*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
similarly for exporting we use Export[\[OpenCurlyDoubleQuote]file_path\
\[CloseCurlyDoubleQuote],variable_name].\
\>", "Item",
 CellChangeTimes->{{3.6885325070149145`*^9, 3.688532579946594*^9}}],

Cell["\<\
if file specified in file_path not available file will be created.\
\>", "Item",
 CellChangeTimes->{{3.6885325070149145`*^9, 3.6885325786667414`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\<C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\infoexport.txt\>\"", ",", 
   "var"}], "]"}]], "Input",
 CellChangeTimes->{{3.6885325844415903`*^9, 3.6885326163466578`*^9}}],

Cell[BoxData["\<\"C:\\\\Users\\\\ashish_patel\\\\Desktop\\\\infoexport.txt\"\>\
"], "Output",
 CellChangeTimes->{3.6885326168399878`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Built-in Functions", "Chapter",
 CellChangeTimes->{{3.6885327175877914`*^9, 3.6885327347932615`*^9}}],

Cell[CellGroupData[{

Cell["Sqrt[x] find square root", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.688532753016412*^9}}],

Cell["IntegerPart[x] returns integer part  of a fraction", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885327689680448`*^9}}],

Cell["Ceiling[x]  and Floor[x] make integer up and down", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885327995389547`*^9}}],

Cell["Round[x] rounds number  (.5 or heigher goes up) ", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.688532857512923*^9}}],

Cell["\<\
Max[x]  and Min[x] finds largest and smallest number in input set\
\>", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885328863131213`*^9}}],

Cell["Factorial[x] or x! finds factorial of a number( e.g- 5!=120)", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885329211313334`*^9}, {
  3.688533169040445*^9, 3.6885331690454473`*^9}}],

Cell["\<\
we can apply each function on list and then we get ans as list also\
\>", "Item",
 CellChangeTimes->{{3.68853274471988*^9, 3.6885329211313334`*^9}, {
  3.688533169040445*^9, 3.688533183769263*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sqrt", "[", "196", "]"}]], "Input",
 CellChangeTimes->{{3.688533052503008*^9, 3.6885330580507064`*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.6885330585500383`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Pi", "*", "4"}], ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.688533061473988*^9, 3.68853307320533*^9}}],

Cell[BoxData["12.56637061435917295385057353311801153679`10."], "Output",
 CellChangeTimes->{{3.6885330677151504`*^9, 3.688533073553562*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{
   "12", ",", "32.23", ",", "3.2", ",", "42", ",", "23.2", ",", "1", ",", 
    "123"}], "}"}], " ", 
  RowBox[{"(*", " ", "list", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.688533076408465*^9, 3.6885331343733344`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32.23`", ",", "3.2`", ",", "42", ",", "23.2`", ",", "1", ",", 
   "123"}], "}"}]], "Output",
 CellChangeTimes->{3.6885330977418375`*^9, 3.6885331370060883`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Min", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6885330998902717`*^9, 3.6885331032234945`*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.688533103854913*^9, 3.6885331392705975`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["blist"], "Input",
 CellChangeTimes->{{3.6885331525584555`*^9, 3.688533153208889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32.23`", ",", "3.2`", ",", "42", ",", "23.2`", ",", "1", ",", 
   "123"}], "}"}]], "Output",
 CellChangeTimes->{3.688533153577135*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Max", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6885331048175545`*^9, 3.6885331101170883`*^9}}],

Cell[BoxData["3242"], "Output",
 CellChangeTimes->{3.6885331105163555`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Round", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.688533111765188*^9, 3.6885331156467752`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "12", ",", "32", ",", "3", ",", "42", ",", "23", ",", "1", ",", "123"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6885331160581217`*^9, 3.6885331421955476`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"5", "!"}], " ", 
  RowBox[{"(*", "factorial", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6885332047612576`*^9, 3.6885332131999273`*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{{3.6885332072389097`*^9, 3.6885332152092657`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Factorial", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.688533217426709*^9, 3.6885332304613996`*^9}}],

Cell[BoxData["120"], "Output",
 CellChangeTimes->{{3.688533224179211*^9, 3.688533230847659*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BaseForm", "[", 
  RowBox[{"120", ",", "16"}], "]"}]], "Input",
 CellChangeTimes->{{3.688533258924054*^9, 3.688533273071486*^9}, 
   3.6885337311014566`*^9},
 NumberMarks->False],

Cell[BoxData[
 TagBox[
  InterpretationBox[
   SubscriptBox["\<\"78\"\>", "\<\"16\"\>"],
   120,
   Editable->False],
  BaseForm[#, 16]& ]], "Output",
 CellChangeTimes->{{3.688533250795993*^9, 3.6885332736898985`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Lists in Mathematica", "Chapter",
 CellChangeTimes->{{3.688624847492653*^9, 3.6886248522163324`*^9}, 
   3.6886271218098583`*^9}],

Cell["list are specified by {} as function are defined by []", "Item",
 CellChangeTimes->{{3.6886248542436857`*^9, 3.688624876542077*^9}}],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6886248529988565`*^9}],

Cell[CellGroupData[{

Cell["    Creating a list", "Section",
 CellChangeTimes->{{3.6886249526162453`*^9, 3.6886249661252537`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.68862499679342*^9, 3.688625002615301*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886250034008265`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Range[] function generates a string", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.688625071369671*^9}}],

Cell["Range[max] generates list {1,2,3,....,max}", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.6886250888488564`*^9}}],

Cell["Range[min,max] generates list{min,min+1,....,max}", "Item",
 CellChangeTimes->{{3.6886250107447233`*^9, 3.6886251093470416`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.6886253007403865`*^9, 3.6886253055221395`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.688625305909402*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886253074924517`*^9, 3.6886253145051303`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "11", ",", "12", ",", "13", ",", "14", ",", "15", ",", "16", ",",
    "17", ",", "18", ",", "19", ",", "20"}], "}"}]], "Output",
 CellChangeTimes->{3.688625314893384*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"10", ",", "20", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.688625316375372*^9, 3.6886253213546925`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "13", ",", "16", ",", "19"}], "}"}]], "Output",
 CellChangeTimes->{3.6886253218900485`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"x", ",", 
   RowBox[{"x", "+", "5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6886252541902623`*^9, 3.68862527351868*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", 
   RowBox[{"1", "+", "x"}], ",", 
   RowBox[{"2", "+", "x"}], ",", 
   RowBox[{"3", "+", "x"}], ",", 
   RowBox[{"4", "+", "x"}], ",", 
   RowBox[{"5", "+", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.68862526048746*^9, 3.6886252740540376`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox[" Referring and Editing a list", "Chapter"]], "Section",
 CellChangeTimes->{3.688627257235835*^9}],

Cell[CellGroupData[{

Cell["\<\
we have to use double square brackets for referring a list items\
\>", "Item",
 CellChangeTimes->{{3.6886257192029076`*^9, 3.6886257654908166`*^9}}],

Cell["indexing starts from 1 same as matlab", "Item",
 CellChangeTimes->{{3.6886257192029076`*^9, 3.6886257725955534`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6886256782145133`*^9, 3.688625685866618*^9}, {
  3.688625757013166*^9, 3.6886257578707376`*^9}, {3.6886257924063025`*^9, 
  3.688625801586054*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{
  3.688625686467016*^9, 3.6886257586182346`*^9, {3.6886257935130424`*^9, 
   3.6886258030400205`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", "2", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886257422638063`*^9, 3.6886257461363907`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{{3.6886257468408585`*^9, 3.688625760122236*^9}}]
}, Open  ]],

Cell["\<\
we can use negating indexing for counting from end (same as python)\
\>", "Item",
 CellChangeTimes->{{3.6886270009161253`*^9, 3.688627016353941*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626993308524*^9, 3.688626996951479*^9}}],

Cell[BoxData["25"], "Output",
 CellChangeTimes->{3.688626997659953*^9}]
}, Open  ]],

Cell["\<\
for multiple index values from list we have to use enter their indexes as list\
\>", "Item",
 CellChangeTimes->{{3.6886258103198767`*^9, 3.688625873811511*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", 
    RowBox[{"{", 
     RowBox[{"2", ",", "4"}], "}"}], "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "values", " ", "of", " ", "index", " ", "2", " ", "and", " ", "4", " ", 
    "will", " ", "be", " ", "outputted"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.688625882952606*^9, 3.6886259070042048`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{{3.688625890483996*^9, 3.688625907906807*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for range of values from index i to index j we have to use double semi \
colon(;;)\
\>", "Item",
 CellChangeTimes->{{3.6886259107196836`*^9, 3.688625944478739*^9}}],

Cell["\<\
example for indexes 2 to 4 we have to use 2;;4 instead of {2,3,4}(list of \
indexes)\
\>", "Item",
 CellChangeTimes->{{3.688625950754011*^9, 3.688626006273758*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"elist", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626010042796*^9, 3.6886260165961614`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "9", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.688626016931387*^9}]
}, Open  ]],

Cell["changing value or multiple values could be done as referring", "Item",
 CellChangeTimes->{{3.6886260815879803`*^9, 3.688626103434834*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", "2", "]"}], "]"}], "=", "100", 
  RowBox[{"(*", " ", 
   RowBox[{
   "value", " ", "of", " ", "index", " ", "2", " ", "has", " ", "been", " ", 
    "updated", " ", "to", " ", "100"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886261114662623`*^9, 3.688626170955255*^9}}],

Cell[BoxData["100"], "Output",
 CellChangeTimes->{{3.688626123236109*^9, 3.688626137320779*^9}, 
   3.6886261716016865`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["elist"], "Input",
 CellChangeTimes->{{3.6886261331690135`*^9, 3.6886261338244476`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "100", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{{3.688626134140659*^9, 3.6886261392460623`*^9}, 
   3.688626175503291*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"elist", "[", 
   RowBox[{"[", 
    RowBox[{"2", ";;", "4"}], "]"}], "]"}], "=", "2", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "values", " ", "or", " ", "indexes", " ", "range", " ", "update", " ", 
    "to", " ", "2"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886260582478647`*^9, 3.688626064666142*^9}, {
  3.6886261798722*^9, 3.6886261979124165`*^9}}],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{
  3.688626065176484*^9, {3.6886261254305735`*^9, 3.688626141433521*^9}, 
   3.6886261986459055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["elist"], "Input",
 CellChangeTimes->{{3.688626067489029*^9, 3.688626069944228*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.6886260703164697`*^9, 3.6886261294012184`*^9, 
  3.68862620096445*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 we can use ReplacePart[] function to update many indexes at a  time\
\>", "Item",
 CellChangeTimes->{{3.6886262780053053`*^9, 3.688626307762705*^9}}],

Cell["\<\
specially useful when indexes are not adjacenet to use range type (;;)\
\>", "Item",
 CellChangeTimes->{{3.6886262780053053`*^9, 3.688626331253887*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ReplacePart", "[", 
   RowBox[{"elist", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "10"}], ",", 
      RowBox[{"2", "\[Rule]", "20"}]}], "}"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"index", " ", 
    RowBox[{"1", "'"}], "s", " ", "value", " ", "replaced", " ", "with", " ", 
    "10", " ", "and", " ", "so", " ", "on"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886263361403155`*^9, 3.688626396203935*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20", ",", "2", ",", "2", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{3.688626368933702*^9, 3.6886264014734507`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   Adding and removing items from a list", "Section",
 CellChangeTimes->{{3.688626447919466*^9, 3.6886264586215997`*^9}}],

Cell[CellGroupData[{

Cell["Adding Items", "Subsection",
 CellChangeTimes->{{3.6886268875991397`*^9, 3.688626896938563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886264993215704`*^9, 3.6886265074990587`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6886265082015295`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "[", 
  RowBox[{"[", "11", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688626509620476*^9, 3.6886265124503603`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Part", "::", "partw"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Part \[NoBreak]\\!\\(11\\)\[NoBreak] of \
\[NoBreak]\\!\\({10, 20, 30, 40, 50, 60, 70, 80, 90, 100}\\)\[NoBreak] does \
not exist. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\
\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/partw\\\", ButtonNote -> \
\\\"Part::partw\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6886265135560975`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", 
    ",", "80", ",", "90", ",", "100"}], "}"}], "\[LeftDoubleBracket]", "11", 
  "\[RightDoubleBracket]"}]], "Output",
 CellChangeTimes->{3.688626513566107*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["error occured because only 10 items are there in list", "Item",
 CellChangeTimes->{{3.688626517235552*^9, 3.6886265318139195`*^9}, {
  3.688626654381089*^9, 3.688626654408106*^9}}],

Cell["\<\
We can use append[list,new_value] function to append new_value to list\
\>", "Item",
 CellChangeTimes->{{3.688626517235552*^9, 3.6886265318139195`*^9}, {
  3.688626654381089*^9, 3.6886266920583286`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Append", "[", 
   RowBox[{"flist", ",", "110"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "we", " ", "have", " ", "to", " ", "take", " ", "it", " ", "as", " ", 
    "returns", " ", "as", " ", "no", " ", "function", " ", "changes", " ", 
    "original"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886266974399157`*^9, 3.6886267056343784`*^9}, {
  3.6886267536449633`*^9, 3.688626789108124*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100", ",", "110", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886267060626616`*^9, {3.6886267546296163`*^9, 3.6886267921806955`*^9}}]
}, Open  ]],

Cell["\<\
 for adding at beginnig we use Prepend[list,new_value] function\
\>", "Item",
 CellChangeTimes->{{3.6886268257082415`*^9, 3.6886268440390053`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Prepend", "[", 
   RowBox[{"flist", ",", "0"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886268480696945`*^9, 3.688626864239524*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", 
   "70", ",", "80", ",", "90", ",", "100", ",", "110", ",", "110"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6886268650830836`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deleting item ", "Subsection",
 CellChangeTimes->{{3.688626907713749*^9, 3.6886269125579767`*^9}}],

Cell["\<\
 we can use Delete[list,index] function to delete a specific value from list\
\>", "Item",
 CellChangeTimes->{{3.688626936112668*^9, 3.688626955706931*^9}}],

Cell[CellGroupData[{

Cell[BoxData["flist"], "Input",
 CellChangeTimes->{{3.688626960344025*^9, 3.6886269608013277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", 
   "70", ",", "80", ",", "90", ",", "100", ",", "110", ",", "110"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.688626961366704*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"flist", "=", 
  RowBox[{"Delete", "[", 
   RowBox[{"flist", ",", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688626964453763*^9, 3.6886269675668373`*^9}, {
  3.6886270265509357`*^9, 3.6886270344441986`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", 
   "80", ",", "90", ",", "100", ",", "110", ",", "110"}], "}"}]], "Output",
 CellChangeTimes->{3.6886270350826263`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["   List Counting and Math Functions", "Section",
 CellChangeTimes->{{3.688627269529029*^9, 3.688627289447833*^9}, {
  3.688627319809716*^9, 3.688627345671957*^9}, {3.688628529152068*^9, 
  3.688628535594363*^9}}],

Cell["length of a list can be find by Length[list] function", "Item",
 CellChangeTimes->{{3.6886273520712223`*^9, 3.6886273809754934`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886274506514454`*^9, 3.688627490068722*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{{3.688627475714153*^9, 3.688627490404947*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688627493591071*^9, 3.688627500150446*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6886275005677233`*^9}]
}, Open  ]],

Cell["\<\
occurance of a number can be counted using Count[list,num] function\
\>", "Item",
 CellChangeTimes->{{3.6886275082748632`*^9, 3.688627529774194*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Count", "[", 
  RowBox[{"alist", ",", "20"}], "]"}]], "Input",
 CellChangeTimes->{{3.688627532623092*^9, 3.688627539799411*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.6886275405749254`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for searching a number in list we can use Position[list,num] function \
\>", "Item",
 CellChangeTimes->{{3.6886275575092144`*^9, 3.688627602801453*^9}, {
  3.6886278946185656`*^9, 3.688627901033841*^9}}],

Cell["it returns indexes in form of list of list ", "Item",
 CellChangeTimes->{{3.6886275575092144`*^9, 3.688627602801453*^9}, {
  3.6886278946185656`*^9, 3.6886279091152306`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"alist", ",", "100"}], "]"}]], "Input",
 CellChangeTimes->{{3.68862759120172*^9, 3.6886276080549583`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", "10", "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.6886275948841767`*^9, 3.688627608552287*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"10", ",", "10", ",", "20", ",", "30", ",", "20", ",", "10"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.688627642158692*^9, 3.688627657458892*^9}, {
  3.6886277798478823`*^9, 3.68862778576883*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "10", ",", "20", ",", "30", ",", "20", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.688627657888179*^9, {3.6886278780365105`*^9, 3.688627880861395*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Position", "[", 
  RowBox[{"alist", ",", "10"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886276585796385`*^9, 3.688627668843481*^9}, {
   3.6886277961807704`*^9, 3.6886277974446135`*^9}, 3.68862785626589*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "6", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6886276657754374`*^9, 3.6886276691436815`*^9}, 
   3.688627883104888*^9}]
}, Open  ]],

Cell["we can use Flatten[2dlist] flat a matrix as a list(vector)", "Item",
 CellChangeTimes->{{3.6886279167142982`*^9, 3.688627951508492*^9}}],

Cell[BoxData[
 RowBox[{"Flatten", "[", 
  RowBox[{"Position", "[", 
   RowBox[{"alist", ",", "10"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886279641989512`*^9, 3.6886279778335724`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "6"}], "}"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "now", " ", "these", " ", "are", " ", "the", " ", "indexes", " ", "where", 
    " ", "10", " ", "exists"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886279874910126`*^9, 3.688628000053854*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.688627731474634*^9, 3.688627770188444*^9}}],

Cell[CellGroupData[{

Cell["Maths function for List", "Subsection",
 CellChangeTimes->{{3.688628045581306*^9, 3.688628054455222*^9}}],

Cell[CellGroupData[{

Cell["sum of list can be found by Total[list]", "Item",
 CellChangeTimes->{{3.688628071077304*^9, 3.6886281087634273`*^9}}],

Cell["\<\
for mean use Mean[list] , it may be fraction so use N[Mean[list]]\
\>", "Item",
 CellChangeTimes->{{3.688628071077304*^9, 3.688628144177762*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6886280841590257`*^9, 3.6886280941676974`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6886280948151283`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688628096633342*^9, 3.6886280987077246`*^9}}],

Cell[BoxData["550"], "Output",
 CellChangeTimes->{3.6886280990489516`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886281020309396`*^9, 3.6886281049709*^9}}],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.6886281054091916`*^9}]
}, Open  ]],

Cell[" we can get Running total using Accumulate[list] function ", "Item",
 CellChangeTimes->{{3.688628179084264*^9, 3.6886281918968043`*^9}, {
  3.6886282648009443`*^9, 3.688628264804947*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628196871122*^9, 3.6886282034254923`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6886282037707224`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Accumulate", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886282049565115`*^9, 3.6886282084828625`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
   "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
    "36", ",", "45", ",", "55"}], "}"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.6886282594238224`*^9, 3.688628259430828*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "3", ",", "6", ",", "10", ",", "15", ",", "21", ",", "28", ",", 
   "36", ",", "45", ",", "55"}], "}"}]], "Output",
 CellChangeTimes->{3.688628260792737*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 difference b/w consecutive elements of list can be foundby Differences[list] \
method \
\>", "Item",
 CellChangeTimes->{{3.6886282858855276`*^9, 3.688628325018771*^9}, {
  3.688628401806547*^9, 3.688628401813552*^9}}],

Cell["it calculate differences using alist[i+1]-alist[i]", "Item",
 CellChangeTimes->{{3.6886282858855276`*^9, 3.688628325018771*^9}, {
  3.688628401806547*^9, 3.688628421612751*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628335395689*^9, 3.688628344076478*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.68862834439669*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Differences", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886283459847493`*^9, 3.688628348264269*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.6886283486115007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["similarly we can also find ratios of consecutive elements", "Item",
 CellChangeTimes->{{3.6886284271054134`*^9, 3.688628448141507*^9}}],

Cell["ratios are calculate alist[i+1]/alist[i]", "Item",
 CellChangeTimes->{{3.6886284271054134`*^9, 3.6886284590567837`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.688628383077479*^9, {3.688628424586735*^9, 3.688628425447307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "4", ",", "1", ",", "3", ",", "7", ",", "8"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.688628464710553*^9, 3.6886284919357057`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "1", ",", "3", ",", "7", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.688628492335971*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Ratios", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6886284930704613`*^9, 3.6886284982889395`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", 
   FractionBox["1", "4"], ",", "3", ",", 
   FractionBox["7", "3"], ",", 
   FractionBox["8", "7"]}], "}"}]], "Output",
 CellChangeTimes->{3.688628498755251*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Random Number Generation", "Section",
 CellChangeTimes->{{3.6886288524279566`*^9, 3.6886288628360505`*^9}}],

Cell[CellGroupData[{

Cell["Random Integers", "Subsection",
 CellChangeTimes->{{3.6886290753218484`*^9, 3.6886290820263186`*^9}}],

Cell[CellGroupData[{

Cell["RandomInteger[max] gives a random integer from 0 to max", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886289356077967`*^9}}],

Cell["\<\
RandomInteger[{min,max}] gives random integer from min to max ,CAREFUL watch \
{ and }\
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886289654376836`*^9}}],

Cell["RandomInteger[] gives 0 or 1", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.688628982026744*^9}}],

Cell["\<\
RandomInteger[max,n] generates list of n random number from 0 to max, that is \
why we used { } there \
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886290250812216`*^9}, {3.688629321969714*^9, 
  3.6886293345460987`*^9}}],

Cell["\<\
RandomInteger[max,{n,m}] generates matrix of random number of dimention n*m
\
\>", "Item",
 CellChangeTimes->{{3.6886288689291105`*^9, 3.688628884545757*^9}, {
  3.6886289242071967`*^9, 3.6886290614836226`*^9}, {3.688629091681755*^9, 
  3.688629098307171*^9}, {3.688629181927435*^9, 3.6886291911776013`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random Reals", "Subsection",
 CellChangeTimes->{{3.6886291995121574`*^9, 3.6886292056692643`*^9}}],

Cell[CellGroupData[{

Cell["RandomReal[] gives real number b/w 0 and 1", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.688629248349717*^9}}],

Cell["RandomReal[max] gives random real b/w 0 and max", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886292766668377`*^9}}],

Cell["RandomReal[{min,max}] gives random real b/w min and max", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886292994220095`*^9}}],

Cell["\<\
RandomReal[max,n] generates list of n random real b/w 0 and max\
\>", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886293020372667`*^9}, {
  3.6886293375481005`*^9, 3.6886293688639765`*^9}}],

Cell["\<\
RandomReal[max,{n,m}] generates matrix of random real b/w 0 and max of n*m\
\>", "Item",
 CellChangeTimes->{{3.6886292088053555`*^9, 3.6886293020372667`*^9}, {
  3.6886293375481005`*^9, 3.688629400529087*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Note", "-", 
  RowBox[{
  "there", " ", "are", " ", "also", " ", "functions", " ", "like", " ", 
   "RandomPrime", " ", "which", " ", "generate", " ", "random", " ", "Prime", 
   " ", "number", " ", "and", " ", "syntax", " ", "is", " ", "like", " ", 
   RowBox[{"above", "."}]}]}]], "Input",
 CellChangeTimes->{{3.6886295249556136`*^9, 3.6886295330380006`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["  Sorting ,Reversing and Padding", "Section",
 CellChangeTimes->{{3.688628549078355*^9, 3.6886285558403797`*^9}, {
  3.6886299601696663`*^9, 3.6886299684952188`*^9}}],

Cell[CellGroupData[{

Cell["Sorting", "Subsection",
 CellChangeTimes->{{3.688628562059529*^9, 3.6886285689130964`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688628606726386*^9, 3.6886286118918285`*^9}, {
  3.688628650676688*^9, 3.688628680880825*^9}, {3.688628737783805*^9, 
  3.6886287409681163`*^9}, {3.688629565653778*^9, 3.688629569613417*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57", ",", "0", ",", "72", ",", "73", ",", "53", ",", "26", ",", "58", ",", 
   "27", ",", "91", ",", "60"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886297663209667`*^9, {3.6886302940820627`*^9, 3.6886303059509783`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
for sorting we can use Sort[list,cmp] function by default cmp is Less\
\>", "Item",
 CellChangeTimes->{{3.6886295893101163`*^9, 3.6886296350577383`*^9}}],

Cell["for sorting Descending we have to use Greater comp function\
\[LineSeparator]", "Item",
 CellChangeTimes->{{3.6886295893101163`*^9, 3.6886296535960965`*^9}, {
  3.6886296951497993`*^9, 3.688629700763543*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Note", "-", " ", 
  RowBox[{
  "even", " ", "in", " ", "sort", " ", "data", " ", "is", " ", "note", " ", 
   "modified", " ", "of", " ", "original", " ", "we", " ", "have", " ", "to", 
   " ", "assign", " ", "back", " ", "on", " ", "return", " ", "if", " ", 
   "wanted", " ", "to", " ", "change"}]}]], "Input",
 CellChangeTimes->{{3.6886297045200453`*^9, 3.6886297404780703`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.688629574368588*^9, 3.6886295784623156`*^9}, {
   3.688629665768211*^9, 3.6886296686171103`*^9}, 3.68862975595006*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "26", ",", "27", ",", "53", ",", "57", ",", "58", ",", "60", ",", 
   "72", ",", "73", ",", "91"}], "}"}]], "Output",
 CellChangeTimes->{
  3.6886295787985425`*^9, 3.6886296689453297`*^9, {3.6886297568546553`*^9, 
   3.688629768379339*^9}, 3.6886303084866657`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"not", " ", "changed", " ", "or", " ", "sorting"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886297513693295`*^9, 3.6886297857359114`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "57", ",", "0", ",", "72", ",", "73", ",", "53", ",", "26", ",", "58", ",", 
   "27", ",", "91", ",", "60"}], "}"}]], "Output",
 CellChangeTimes->{{3.688630284575207*^9, 3.688630312141353*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sort", "[", 
   RowBox[{"a", ",", "Less"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"same", " ", "as", " ", 
    RowBox[{"Sort", "[", "a", "]"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6886303193541617`*^9, 3.688630370383306*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "26", ",", "27", ",", "53", ",", "57", ",", "58", ",", "60", ",", 
   "72", ",", "73", ",", "91"}], "}"}]], "Output",
 CellChangeTimes->{3.6886303711658273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sort", "[", 
  RowBox[{"a", ",", "Greater"}], "]"}]], "Input",
 CellChangeTimes->{{3.688630373376301*^9, 3.6886303787408805`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "91", ",", "73", ",", "72", ",", "60", ",", "58", ",", "57", ",", "53", ",",
    "27", ",", "26", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.6886303792992487`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reversing ", "Subsection",
 CellChangeTimes->{{3.688629953082942*^9, 3.688629954596951*^9}}],

Cell["we can reverse using Reverse[list] function", "Item",
 CellChangeTimes->{{3.688629792388344*^9, 3.6886298017836075`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Reverse", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.6886298048806725`*^9, 3.688629807681542*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "46", ",", "23", ",", "7", ",", "47", ",", "26", ",", "66", ",", "38", ",", 
   "85", ",", "5", ",", "43"}], "}"}]], "Output",
 CellChangeTimes->{3.6886298080067563`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["a"], "Input",
 CellChangeTimes->{3.688629820293948*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "43", ",", "5", ",", "85", ",", "38", ",", "66", ",", "26", ",", "47", ",", 
   "7", ",", "23", ",", "46"}], "}"}]], "Output",
 CellChangeTimes->{3.6886298206381807`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Padding", "Subsection",
 CellChangeTimes->{{3.6886299862660637`*^9, 3.6886299993162813`*^9}}],

Cell[CellGroupData[{

Cell["padding means adding some elements to left or right", "Item",
 CellChangeTimes->{{3.688630001173519*^9, 3.688630013132492*^9}}],

Cell["\<\
we can make alist of desired length by padding with some element on left or \
right\
\>", "Item",
 CellChangeTimes->{{3.688630001173519*^9, 3.6886300377304125`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6886300400500956`*^9, 3.688630053498059*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886300539733753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
we can pad a list at left using  0 by function PadLeft[list,final_length] \
\>", "Item",
 CellChangeTimes->{{3.688630057567774*^9, 3.688630124490388*^9}}],

Cell["\<\
we can pad a list at left using  n by function PadLeft[list,final_length,n] \
\>", "Item",
 CellChangeTimes->{{3.688630057567774*^9, 3.6886301437107334`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PadLeft", "[", 
  RowBox[{"alist", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.6886301479605646`*^9, 3.688630159971572*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", 
   ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6886301606600313`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PadLeft", "[", 
  RowBox[{"alist", ",", "12", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6886301622731085`*^9, 3.6886301787323527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", "1", ",", "2", ",", "3", ",", "4", ",", "5"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.688630173380782*^9, 3.688630179131615*^9}}]
}, Open  ]],

Cell["\<\
similarly we can use PadRight[list,final_length] and \
PadRight[list,final_length,n]\
\>", "Item",
 CellChangeTimes->{{3.688630188013539*^9, 3.6886302220395164`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Identifying first and last value in list", "Section",
 CellChangeTimes->{{3.6887968967366643`*^9, 3.6887969130331087`*^9}}],

Cell[CellGroupData[{

Cell["\<\
 to know first value we use First[list]  we can also use 1 index\
\>", "Item",
 CellChangeTimes->{{3.6887969161822157`*^9, 3.688796945805561*^9}, {
  3.688797039826309*^9, 3.6887970439430666`*^9}}],

Cell["\<\
to know last we can use Last[list]  we can also use last index or -1\
\>", "Item",
 CellChangeTimes->{{3.6887969161822157`*^9, 3.688796943373938*^9}, {
  3.6887970301077824`*^9, 3.688797037257593*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "  ", "=", 
  RowBox[{"{", 
   RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.6887969510238905`*^9, 3.6887969760462794`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{3.6887969766787024`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"First", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688796978897189*^9, 3.6887969815109344`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.688796981900195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887969835092726`*^9, 3.6887969920588045`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.6887969927983007`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Last", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688796998780304*^9, 3.68879700081166*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.6887970018923817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", 
   RowBox[{"-", "1"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887970037146034`*^9, 3.688797008966114*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.6887970093153515`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "[", 
  RowBox[{"[", 
   RowBox[{"Length", "[", "alist", "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.688797010332028*^9, 3.68879702567982*^9}}],

Cell[BoxData["50"], "Output",
 CellChangeTimes->{3.688797026350271*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Selecting List items by rules", "Section",
 CellChangeTimes->{{3.688797089934708*^9, 3.68879711023382*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mlist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10", ",", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887971153608484`*^9, 3.6887971405141954`*^9}, {
  3.68879849552672*^9, 3.688798500324931*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.688797141094892*^9, 3.688798500910324*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 to select value using some rule we use Select[list,Predicate]  \
\>", "Item",
 CellChangeTimes->{{3.6887971432063065`*^9, 3.6887971821188927`*^9}}],

Cell["\<\
this will return only the value which satisfy the give predicate\
\>", "Item",
 CellChangeTimes->{{3.6887971432063065`*^9, 3.688797196594576*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using predicates or Testing Expressions", "Subsection",
 CellChangeTimes->{{3.6887973588117514`*^9, 3.6887973629345055`*^9}, {
  3.6887974751788745`*^9, 3.6887974798740153`*^9}, {3.6887986736551127`*^9, 
  3.688798674824897*^9}}],

Cell[CellGroupData[{

Cell["\<\
there is a lot of predicate availabe in Walfram language for checking value \
\>", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.688797395296323*^9}, {
  3.688797498950142*^9, 3.688797503483178*^9}, {3.688798281161993*^9, 
  3.6887982811639977`*^9}}],

Cell["all can take Expression and  returns true or false", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.688797395296323*^9}, {
  3.688797498950142*^9, 3.688797503483178*^9}, {3.688798281161993*^9, 
  3.6887982874742155`*^9}, {3.6887983831631527`*^9, 3.6887983895063953`*^9}}],

Cell["most of them are ended with Q ex- EvenQ,OddQ etc", "Item",
 CellChangeTimes->{{3.68879737105748*^9, 3.6887974358935432`*^9}, {
  3.6887975307824464`*^9, 3.6887975318321395`*^9}, {3.6887975811271715`*^9, 
  3.688797592496301*^9}, {3.6887977027562904`*^9, 3.6887977044664373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Types of Testing Expressions", "Subsubsection",
 CellChangeTimes->{{3.6887975993108616`*^9, 3.688797614212903*^9}, 
   3.688798601675947*^9}],

Cell[CellGroupData[{

Cell["there are many types , main are following", "Item",
 CellChangeTimes->{{3.6887976195434685`*^9, 3.688797644292585*^9}}],

Cell[TextData[{
 StyleBox["Number Predicates", "Code"],
 "\[LineSeparator]    \[LineSeparator]           ",
 StyleBox["With Q -", "Code"],
 "  IntegerQ[x],EvenQ[x],OddQ[x],PrimeQ[x],CoprimeQ[x1,x2,...]\[LineSeparator]\
              PossibleZeroQ[x] - if it is possible to get 0 with expression \
inside any time \[LineSeparator]          \[LineSeparator]           ",
 StyleBox["With Out Q - ", "Code"],
 " Positive,Negative,NonPositive,NonNegative          "
}], "Item",
 CellChangeTimes->{{3.6887976195434685`*^9, 3.6887976928256483`*^9}, {
  3.6887979558352184`*^9, 3.6887979666409845`*^9}, {3.688798177805189*^9, 
  3.6887981864169483`*^9}, {3.6887982377458916`*^9, 3.688798430971812*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 CellChangeTimes->{{3.6887984799386716`*^9, 3.6887984809313354`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "for", " ", "selecting", " ", "odd", " ", "numbers", " ", "from", " ", 
    "given", " ", "list", " ", "we", " ", "can", " ", "use", " ", "OddQ", " ",
     "predicate"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Select", "[", 
   RowBox[{"mlist", ",", "OddQ"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887972071381645`*^9, 3.688797243607638*^9}, 
   3.688798485353916*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "7", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887984860173593`*^9, 3.688798503463029*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"mlist", ",", "PrimeQ"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887985077985897`*^9, 3.688798516685527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3", ",", "5", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.6887985170547743`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating our own Predicate ", "Subsection",
 CellChangeTimes->{{3.688798692955434*^9, 3.6887987001242313`*^9}}],

Cell[CellGroupData[{

Cell["we can also use our own predicate to test the values", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.688798799107692*^9}}],

Cell["\<\
In this case the value of list will be supplied to Hash \[OpenCurlyQuote]#\
\[CloseCurlyQuote] sign and then we can test our condition \
\>", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.6887988456639004`*^9}}],

Cell["And \[OpenCurlyQuote]&\[CloseCurlyQuote] sign is used to tell the end \
of condition", "Item",
 CellChangeTimes->{{3.688798703472471*^9, 3.6887987181488185`*^9}, {
  3.688798799104689*^9, 3.688798856724831*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688798723782589*^9, 3.6887987332354336`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.6887987335756626`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Select", "[", 
  RowBox[{"alist", ",", 
   RowBox[{
    RowBox[{"#", ">", "4"}], "&"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.688798736647715*^9, 3.688798760659309*^9}, {
   3.688798793932227*^9, 3.688798794303479*^9}, 3.688798859355589*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6", ",", "7", ",", "8", ",", "9", ",", "10"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.688798748565688*^9, 3.6887987615078754`*^9}, 
   3.688798795258115*^9, 3.688798865143461*^9}]
}, Open  ]],

Cell["\<\
if we want to get n elements from the output we can give another attributes\
\[LineSeparator]it will return only first n which has passed the test\
\>", "Item",
 CellChangeTimes->{{3.688798967662702*^9, 3.6887990078056116`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Select", "[", 
   RowBox[{"alist", ",", 
    RowBox[{
     RowBox[{"#", ">", "4"}], "&"}], ",", "2"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "only", " ", "2", " ", "will", " ", "come", " ", "from", " ", "all", " ", 
    "result"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6887990103853416`*^9, 3.6887990332431636`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887990195354586`*^9, 3.688799033566383*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deleting Duplicate values from a list", "Section",
 CellChangeTimes->{{3.688799090793316*^9, 3.688799096777318*^9}}],

Cell[CellGroupData[{

Cell["\<\
for deleting duplicate value we can use DeleteDuplicates[list]\
\>", "Item",
 CellChangeTimes->{{3.6887990999174194`*^9, 3.688799146310629*^9}}],

Cell["order will be maintained as the original", "Item",
 CellChangeTimes->{{3.6887990999174194`*^9, 3.6887991552436047`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
    "6"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6887991330221753`*^9, 3.688799142626604*^9}, {
  3.6887995232811117`*^9, 3.688799524018608*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.688799169157509*^9, 3.688799524780114*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DeleteDuplicates", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688799157831333*^9, 3.688799163411065*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "12", ",", "3", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887991637853174`*^9, 3.68879917146605*^9}, 
   3.6887995271426945`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Joining Multiple Lists ", "Section",
 CellChangeTimes->{{3.6887991830768185`*^9, 3.6887991894761267`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list1", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"1", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688799192952454*^9, 3.6887992076458125`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10"}], "}"}]], "Output",
 CellChangeTimes->{3.68879920799705*^9, 3.688799314773139*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list2", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"10", ",", "100", ",", "10"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.688799209627138*^9, 3.6887992223956842`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "10", ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",",
    "80", ",", "90", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.688799319059003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list3", "=", 
  RowBox[{"Range", "[", 
   RowBox[{"5", ",", "50", ",", "5"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6887992862309823`*^9, 3.6887993311706295`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "5", ",", "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", 
   "40", ",", "45", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{3.688799302130147*^9, 3.688799332265359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Join[list1,list2,list3...]", "Subsection",
 CellChangeTimes->{{3.6887999814691887`*^9, 3.6888000042461147`*^9}}],

Cell["\<\
we can use Join[l1,l2,l3.....] function which can join n lists and return \
joined\
\>", "Item",
 CellChangeTimes->{{3.6887992261451902`*^9, 3.688799273023145*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Join", "[", 
  RowBox[{"list1", ",", "list2", ",", "list3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6887992754587765`*^9, 3.6887992842396483`*^9}, {
  3.688799337508868*^9, 3.6887993403627768`*^9}, {3.6887993866253815`*^9, 
  3.6887994026716385`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8", 
   ",", "9", ",", "10", ",", "10", ",", "20", ",", "30", ",", "40", ",", "50",
    ",", "60", ",", "70", ",", "80", ",", "90", ",", "100", ",", "5", ",", 
   "10", ",", "15", ",", "20", ",", "25", ",", "30", ",", "35", ",", "40", 
   ",", "45", ",", "50"}], "}"}]], "Output",
 CellChangeTimes->{
  3.688799340745033*^9, {3.6887993891090393`*^9, 3.6887994032910533`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 if we do not want duplicate to come we can use Union[l1,l2,....]\
\>", "Item",
 CellChangeTimes->{{3.688799442007585*^9, 3.6887994950269055`*^9}}],

Cell["\<\
Note- Union gives Sorted output (DeleteDuplicates[] do not) and remove \
duplicates\
\>", "Item",
 CellChangeTimes->{{3.688799442007585*^9, 3.6887995486255984`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.688799630629982*^9, 3.6887996391506834`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.6887996351570096`*^9, 3.6887996396019845`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.688799642305794*^9, 3.6887996660513315`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.6887996667898273`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Union[list1,list2,list3...] and Union[list]", "Subsection",
 CellChangeTimes->{{3.6888000248186646`*^9, 3.6888000415393677`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Union", "[", 
   RowBox[{"alist", ",", "blist"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"sorted", " ", "and", " ", "remove", " ", "duplicate"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.688799669091366*^9, 3.688799690554242*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12", ",", "21"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.6887996757528214`*^9, 3.6887996926226263`*^9}}]
}, Open  ]],

Cell["\<\
 we some times use Union on a single list to sort and remove duplicate\
\>", "Item",
 CellChangeTimes->{{3.688799694485873*^9, 3.6887997100918436`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.6887997194681168`*^9, 3.688799719994466*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.6887997204647827`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.688799723748977*^9, 3.6887997267465167`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.6887997270937505`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Intersection[list1,list2,list3...] and Intersection[list]", "Subsection",
 CellChangeTimes->{{3.688800050478381*^9, 3.6888000602052693`*^9}}],

Cell["\<\
Intersection[l1,l2,....] is same  as Union[] it give intersection and sorted \
\>", "Item",
 CellChangeTimes->{{3.6887997606677294`*^9, 3.688799805564452*^9}}],

Cell[CellGroupData[{

Cell[BoxData["alist"], "Input",
 CellChangeTimes->{{3.6887998091860056`*^9, 3.6887998096993494`*^9}, 
   3.6888000705408387`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "12", ",", "12", ",", "3", ",", "3", ",", "3", ",", "5", ",", 
   "6"}], "}"}]], "Output",
 CellChangeTimes->{3.6887998103597946`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["blist"], "Input",
 CellChangeTimes->{{3.6887998110032234`*^9, 3.688799811644651*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "12", ",", "3", ",", "5", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.688799811970868*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{"alist", ",", "blist"}], "]"}]], "Input",
 CellChangeTimes->{{3.688799813554931*^9, 3.688799820265419*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "5", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.6887998206286592`*^9}]
}, Open  ]],

Cell["\<\
on one list it will only sort and remove duplicate same as Union[]\
\>", "Item",
 CellChangeTimes->{{3.688799838625217*^9, 3.688799851298224*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Intersection", "[", "alist", "]"}], " "}]], "Input",
 CellChangeTimes->{{3.688799822656019*^9, 3.6887998335388145`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "3", ",", "5", ",", "6", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.688799830934072*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Riffle", "Subsection",
 CellChangeTimes->{{3.688800074262714*^9, 3.688800076885058*^9}}],

Cell["we can use Riffle[]  to interperse data of two list", "Item",
 CellChangeTimes->{{3.688800139322042*^9, 3.688800157247795*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.688800167680044*^9, 3.6888001866337514`*^9}, {
  3.6888002345623255`*^9, 3.6888002391094427`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{{3.688800168883234*^9, 3.6888001868837647`*^9}, 
   3.6888002500660744`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6888001886807337`*^9, 3.6888002032729626`*^9}, {
  3.688800244581406*^9, 3.6888002468784037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"x", ",", "y", ",", "z"}], "}"}]], "Output",
 CellChangeTimes->{3.688800203772986*^9, 3.688800247831582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{"alist", ",", "blist"}], "]"}]], "Input",
 CellChangeTimes->{{3.688800205835593*^9, 3.6888002147742996`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "x", ",", "b", ",", "y", ",", "c", ",", "z"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6888002151649437`*^9, 3.6888002518786736`*^9}]
}, Open  ]],

Cell["\<\
if one ends before other cyclically value will be take for that list\
\>", "Item",
 CellChangeTimes->{{3.68880021855575*^9, 3.6888002274242587`*^9}, {
  3.6888002682959814`*^9, 3.6888002766870584`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Riffle", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6888002805622644`*^9, 3.6888003290566597`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "a", ",", "x", ",", "b", ",", "y", ",", "c", ",", "x", ",", "d", ",", "y", 
   ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{{3.688800293127588*^9, 3.688800329728573*^9}}]
}, Open  ]],

Cell["for more see refrence", "Item",
 CellChangeTimes->{{3.688800336573354*^9, 3.6888003742801695`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Matrices and Vectors in Mathematica", "Chapter",
 CellChangeTimes->{{3.689921686311863*^9, 3.689921693403593*^9}}],

Cell[CellGroupData[{

Cell["Creating Matrices and Vectors", "Section",
 CellChangeTimes->{{3.689922246096796*^9, 3.6899222530994687`*^9}}],

Cell[CellGroupData[{

Cell["\<\
vectors are simply list, vectors could be either row or column vector\
\>", "Item",
 CellChangeTimes->{{3.689921698188785*^9, 3.689921745391843*^9}, {
  3.6899222257452207`*^9, 3.6899222376561646`*^9}}],

Cell["Matrices can be seen as 2D vector or list", "Item",
 CellChangeTimes->{{3.689921698188785*^9, 3.689921765330381*^9}, {
  3.6899224637495546`*^9, 3.689922466693447*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Vect1", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899217691234736`*^9, 3.68992177991567*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]], "Output",
 CellChangeTimes->{3.689921780689186*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899217823502927`*^9, 3.6899217978686485`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689921791414345*^9, 3.6899218048383017`*^9}, 
   3.6899220153441505`*^9}]
}, Open  ]],

Cell["\<\
we can convert our matrix to symbolic matrix for using MatrixForm[mat] \
function\
\>", "Item",
 CellChangeTimes->{{3.689921947329299*^9, 3.6899219675838146`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat2", "=", 
  RowBox[{"MatrixForm", "[", "Mat1", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899219703356533`*^9, 3.6899220123161297`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"4", "5", "6"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.689921977952733*^9, 3.689922019708062*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"NOTE", "-", " ", 
  RowBox[{
  "We", " ", "never", " ", "able", " ", "to", " ", "apply", " ", "any", " ", 
   "operation", " ", "on", " ", "matrix", " ", "form", " ", "it", " ", "is", 
   " ", "just", " ", "for", " ", "demonstration", " ", "in", " ", "visual", 
   " ", 
   RowBox[{"manner", "."}]}]}]], "Input",
 CellChangeTimes->{{3.689924972503436*^9, 3.689925005386381*^9}}],

Cell[CellGroupData[{

Cell[BoxData["Mat1"], "Input",
 CellChangeTimes->{{3.689921993257943*^9, 3.689921995596509*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689921995961753*^9, 3.68992202195356*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat1", "=", 
  RowBox[{"Mat1", "+", "1", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "matrix", " ", "addition", " ", "operation", " ", "can", " ", "be", " ", 
     "applied"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.689922000671894*^9, 3.689922004100187*^9}, {
  3.6899221901103415`*^9, 3.6899222035955195`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.6899220045364685`*^9, 3.689922024959567*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mat2", "=", 
  RowBox[{"Mat2", "+", "1", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"addition", " ", 
     RowBox[{"can", "'"}], "t", " ", "be", " ", "applied", " ", "as", " ", 
     "it", " ", "is", " ", "symbolic"}], " ", "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.6899220563264503`*^9, 3.689922061799097*^9}, {
  3.6899221682446156`*^9, 3.689922182731411*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  TagBox[
   RowBox[{"(", "\[NoBreak]", GridBox[{
      {"1", "2", "3"},
      {"4", "5", "6"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
   Function[BoxForm`e$, 
    MatrixForm[BoxForm`e$]]]}]], "Output",
 CellChangeTimes->{3.68992206227542*^9, 3.689922183107669*^9}]
}, Open  ]],

Cell["\<\
 here we have used a different variable to get into matrix form because once \
a variable is converted into matrix form it just remain for symbolic \
representation and matrix operations such addition,subtraction etc can\
\[CloseCurlyQuote]t be applied to it;\
\>", "Item",
 CellChangeTimes->{{3.6899220641486683`*^9, 3.689922164902385*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Operations on Matrices", "Section",
 CellChangeTimes->{{3.689922258727228*^9, 3.6899222643950176`*^9}}],

Cell[CellGroupData[{

Cell["addition and subtraction", "Subsection",
 CellChangeTimes->{{3.689922726459812*^9, 3.6899227313050413`*^9}}],

Cell[CellGroupData[{

Cell["\<\
addition  and subtraction are  simply operations in which  correponding \
elements of matrices are added/subtracted.\
\>", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.68992239621894*^9}}],

Cell["\<\
adding,subtracting,diving and multipling using scalar do it for every \
elements.\
\>", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.6899224444136567`*^9}, {3.689922584663975*^9, 
  3.6899225846689787`*^9}}],

Cell["matrices of same dimensions can be added/subtracted only", "Item",
 CellChangeTimes->{{3.6899222695684605`*^9, 3.68992234123225*^9}, {
  3.689922396215938*^9, 3.6899224444136567`*^9}, {3.689922584663975*^9, 
  3.6899226054810133`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.68992234403312*^9, 3.689922357172894*^9}, {
  3.6899226115981026`*^9, 3.689922611711172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922357442068*^9, 3.6899226200419335`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899223579434023`*^9, 3.6899223721758995`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922373618859*^9, 3.6899226229418693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat3", "=", 
  RowBox[{"mat1", "+", "mat2"}]}]], "Input",
 CellChangeTimes->{{3.689922375822329*^9, 3.689922385852023*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "8", ",", "7"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899226776851325`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat4", "=", 
   RowBox[{"mat1", "-", "mat2"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.689922679740505*^9, 3.6899226967098255`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}], ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689922697275203*^9}]
}, Open  ]],

Cell["\<\
to get dimension of a  matrix or vector we can use Dimensions[mat] method\
\>", "Item",
 CellChangeTimes->{{3.6899224857701917`*^9, 3.6899225118203793`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dimensions", "[", "mat3", "]"}]], "Input",
 CellChangeTimes->{{3.6899225505702314`*^9, 3.689922554388779*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.6899225548100576`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Multiplication", "Subsection",
 CellChangeTimes->{{3.689922747235174*^9, 3.6899227505093637`*^9}, 
   3.689922989022394*^9}],

Cell[CellGroupData[{

Cell["\<\
for matrix multiplication no. of columns in first should be equal to no. of \
rows in second\
\>", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.6899227825803547`*^9}}],

Cell["\<\
matrix multiplication in not commutative but it is associative.\
\>", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.689922802785838*^9}, {
  3.6899229967765923`*^9, 3.6899229967815704`*^9}}],

Cell["operator id dot(.)", "Item",
 CellChangeTimes->{{3.689922754131093*^9, 3.689922802785838*^9}, {
  3.6899229967765923`*^9, 3.6899230143773127`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"2", " ", "by", " ", "3"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899230167829247`*^9, 3.689923096450742*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899230186461697`*^9, 3.6899230617265463`*^9, 
  3.689923097430396*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "6"}], "}"}]}], "}"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"3", " ", "by", " ", "2"}], "*)"}], " "}]], "Input",
 CellChangeTimes->{{3.689923023535987*^9, 3.6899230239882917`*^9}, {
  3.6899230697579393`*^9, 3.689923107276969*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899230248308506`*^9, 3.689923080212909*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat5", "=", 
  RowBox[{"mat1", " ", ".", " ", "mat2", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"we", " ", "get", " ", "2", "*", " ", "2"}], " ", 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.689922805849882*^9, 3.689922827000002*^9}, {
  3.689922873898287*^9, 3.689922874634778*^9}, {3.6899231234637656`*^9, 
  3.689923171935214*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"22", ",", "28"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"31", ",", "40"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689923125124873*^9, 3.6899231380885243`*^9}, {
  3.689923170214066*^9, 3.6899231730169387`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generating Matrices", "Section",
 CellChangeTimes->{{3.689924381318465*^9, 3.689924385737419*^9}}],

Cell[CellGroupData[{

Cell["\<\
for generating a matrix having all elements as some constant value we can \
\[LineSeparator]use ConstantArray [x,{n,m,...}] \[LineSeparator]x- constant \
value\[LineSeparator]n,m,.... - dimensions of the matrix\
\>", "Item",
 CellChangeTimes->{{3.689924391537284*^9, 3.689924397645361*^9}, {
  3.689924485808748*^9, 3.6899245805103226`*^9}, {3.6899246561245933`*^9, 
  3.689924656127595*^9}}],

Cell["\<\
we can use this formula for creating just a list having some constant value\
\>", "Item",
 CellChangeTimes->{{3.689924391537284*^9, 3.689924397645361*^9}, {
  3.689924485808748*^9, 3.6899245805103226`*^9}, {3.6899246561245933`*^9, 
  3.689924683537887*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"ConstantArray", "[", 
   RowBox[{"2", ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689924583241144*^9, 3.6899246054179463`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.689924595635416*^9, 3.6899246060713797`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689924612193799*^9, 3.689924615524027*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "2", "2", "2"},
     {"2", "2", "2", "2"},
     {"2", "2", "2", "2"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899246162735257`*^9}]
}, Open  ]],

Cell["\<\
for creating identity matix we use IdentityMatrix[n] , for n by n matrix\
\>", "Item",
 CellChangeTimes->{{3.689924701704008*^9, 3.6899247301469836`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"imat", "=", 
  RowBox[{"IdentityMatrix", "[", "5", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899247342727375`*^9, 3.689924739590294*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.689924739927513*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "imat", "]"}]], "Input",
 CellChangeTimes->{{3.689924742751397*^9, 3.6899247455362597`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0"},
     {"0", "1", "0", "0", "0"},
     {"0", "0", "1", "0", "0"},
     {"0", "0", "0", "1", "0"},
     {"0", "0", "0", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.689924745851463*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Transposing a Matrix", "Section",
 CellChangeTimes->{{3.6899248006008325`*^9, 3.6899248071602073`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899248093766885`*^9, 3.689924832107856*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899248341592236`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"MatrixForm", "[", "mat1", "]"}]}]], "Input",
 CellChangeTimes->{{3.689924942502418*^9, 3.6899249499513845`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2", "3"},
     {"2", "3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899249503356423`*^9}]
}, Open  ]],

Cell["for transposing we use Transpose[mat] function", "Item",
 CellChangeTimes->{{3.689924891090212*^9, 3.689924909258051*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Transpose", "[", "mat1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899249112153616`*^9, 3.6899249538840084`*^9}, {
  3.6899250149627705`*^9, 3.6899250221935954`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "2"},
     {"2", "3"},
     {"3", "4"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.689924935730551*^9, 3.6899249545404453`*^9}, 
   3.689925022603863*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["for find inverse we use Inverse[mat] method", "Item",
 CellChangeTimes->{{3.689925035565509*^9, 3.6899250670156155`*^9}}],

Cell["we need to have square matrix for this", "Item",
 CellChangeTimes->{{3.689925035565509*^9, 3.689925075504281*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat3", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.689925051618114*^9, 3.6899251064642887`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689925115289177*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"invmat3", "=", 
  RowBox[{"Inverse", "[", "mat3", "]"}]}]], "Input",
 CellChangeTimes->{{3.6899251199823093`*^9, 3.689925135041356*^9}, {
  3.689925184000023*^9, 3.6899251972841005`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["3", "2"], ",", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899251975823*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat3", " ", ".", " ", "invmat3", " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"a", " ", "*", " ", "inv", 
     RowBox[{"(", "a", ")"}]}], " ", "=", " ", "identity"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689925202249417*^9, 3.689925228592148*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899252087499795`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Elementwise Calculations in Matrices", "Section",
 CellChangeTimes->{{3.6899253066732483`*^9, 3.689925316026492*^9}}],

Cell[CellGroupData[{

Cell["\<\
in elementwise calculations corresponding elements of each matrix are picked \
up and perform operation with each other\
\>", "Item",
 CellChangeTimes->{{3.6899254059437604`*^9, 3.68992544677*^9}}],

Cell["\<\
matrix multiplication is denoted by dot (. ), while element wise \
multiplication is shown by astric(*) or space.(as before) \
\>", "Item",
 CellChangeTimes->{{3.6899254059437604`*^9, 3.6899254836040087`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.689925317478456*^9, 3.689925325762538*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689925327189702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat2", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899253276670246`*^9, 3.689925346035282*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899253464755735`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "mat2", "]"}]], "Input",
 NumberMarks->False],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat1", "  ", "mat2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899253478635006`*^9, 3.689925375271292*^9}, 
   3.689925487797814*^9}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "16", "27"},
     {"40", "55", "72"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6899253519732447`*^9, 3.6899253755164547`*^9}, 
   3.6899254882060776`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat1", "+", "mat2"}], "]"}]], "Input",
 CellChangeTimes->{{3.689925383004453*^9, 3.689925387076175*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"8", "10", "12"},
     {"14", "16", "18"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899253874324055`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"mat1", "/", "mat2"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899253887873096`*^9, 3.6899253977973237`*^9}, {
  3.689925500952712*^9, 3.689925501184868*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", "7"], 
      FractionBox["1", "4"], 
      FractionBox["1", "3"]},
     {
      FractionBox["2", "5"], 
      FractionBox["5", "11"], 
      FractionBox["1", "2"]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.6899253983186707`*^9, 3.6899255018663244`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Referring to matrix rows and columns", "Section",
 CellChangeTimes->{{3.6899255342497835`*^9, 3.6899255457264404`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"7", ",", "14", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.689925550788823*^9, 3.6899255633311872`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"7", ",", "14", ",", "21"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "9", ",", "10"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6899255636724167`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.6899255684846296`*^9, 3.689925572182093*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"7", "14", "21"},
     {"8", "9", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.689925572588367*^9}]
}, Open  ]],

Cell["\<\
for referring value in 2D array(matrix ) we need row and column so we will \
provide two argument in mat[ [ i , j ] ] insted of 1 in array a [ [ i ] ]\
\>", "Item",
 CellChangeTimes->{{3.6899256020620365`*^9, 3.6899256732767496`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "remember", " ", "here", " ", "we", " ", "have", " ", "1", " ", "based", 
    " ", "indexing"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899256774215155`*^9, 3.6899257007430763`*^9}}],

Cell[BoxData["14"], "Output",
 CellChangeTimes->{3.689925682743065*^9}]
}, Open  ]],

Cell["for getting while row or column we use \[OpenCurlyQuote]All\
\[CloseCurlyQuote] keyword", "Item",
 CellChangeTimes->{{3.6899257289699106`*^9, 3.6899257457441044`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All"}], "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "gives", " ", "all", " ", "columns", " ", "for", " ", "row", " ", "1"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6899257625713434`*^9, 3.6899257836025944`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "14", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{3.689925769400898*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.689925787810398*^9, 3.6899257929448223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"14", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.6899257934441576`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
similary as simple list we can also provide range of indexes instead of \
\[OpenCurlyQuote]All\[CloseCurlyQuote] using  double semi colon \
\[OpenCurlyQuote];;\[CloseCurlyQuote]\
\>", "Item",
 CellChangeTimes->{{3.689925809301897*^9, 3.689925851969365*^9}}],

Cell["we can also provide list of index as list ", "Item",
 CellChangeTimes->{{3.689925809301897*^9, 3.689925865454362*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", 
     RowBox[{"1", ";;", "3"}]}], "]"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"same", " ", "as", " ", "simple", " ", "list"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689925867162507*^9, 3.6899259221199665`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "14", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{{3.689925877231223*^9, 3.689925902418028*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6899258796728535`*^9, 3.6899259086659985`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "21"}], "}"}]], "Output",
 CellChangeTimes->{{3.6899258907112155`*^9, 3.689925909144309*^9}}]
}, Open  ]],

Cell["\<\
we can also change value using the above method as we are using with lists\
\>", "Item",
 CellChangeTimes->{{3.6899259488267417`*^9, 3.689925963442492*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mat", "[", 
    RowBox[{"[", 
     RowBox[{"1", ",", "All"}], "]"}], "]"}], "=", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.6899259660764446`*^9, 3.6899259725847883`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689925977018749*^9, 3.6899259857715883`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"100", "100", "100"},
     {"8", "9", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6899259778523035`*^9, 3.6899259861208215`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899260158656693`*^9, 3.6899260162759485`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899257540776787`*^9, 3.689925759173071*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Converting matrix to list", "Section",
 CellChangeTimes->{{3.6899260233186436`*^9, 3.6899260281338525`*^9}}],

Cell["we can use Flatten[mat] method to convert matrix to list", "Item",
 CellChangeTimes->{{3.6899260292776175`*^9, 3.6899260460759583`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6899260469035187`*^9, 3.6899260564448853`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.689926056672036*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "[", "mat", "]"}]], "Input",
 CellChangeTimes->{{3.689926057114324*^9, 3.689926060248422*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5", ",", "6"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.689926060560627*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6899259326288195`*^9, 3.689925945916686*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions in Mathematica", "Chapter",
 CellChangeTimes->{{3.690081272199855*^9, 3.6900812796488256`*^9}}],

Cell[CellGroupData[{

Cell["Creating a Function", "Section",
 CellChangeTimes->{{3.6900812857038593`*^9, 3.6900812897005215`*^9}}],

Cell["\<\
syntax for defining a function is different from other languages here,\
\[LineSeparator]syntax is \
\>", "Item",
 CellChangeTimes->{{3.690081641152027*^9, 3.690081682985259*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"<", "function_name", ">", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"<", "var_name", ">", "_"}], ",", 
     RowBox[{"<", "var_name", ">", "_"}], ",", ".."}], "]"}]}], " ", ":=", 
  " ", 
  RowBox[{"<", "expression_here", ">"}]}]], "Code",
 CellChangeTimes->{{3.690081695061311*^9, 3.6900817487531056`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[CellGroupData[{

Cell["\<\
underscore( _ ) is used after each variable name to show it is a argument \
variable.\
\>", "Item",
 CellChangeTimes->{{3.6900817615676484`*^9, 3.690081806385604*^9}}],

Cell["example for making a function for mulitplying a number by 2", "Item",
 CellChangeTimes->{{3.6900817615676484`*^9, 3.690081819981668*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"timestwo", "[", "x_", "]"}], " ", ":=", " ", 
    RowBox[{"x", "*", "2"}]}], ";"}], " ", 
  RowBox[{"(*", "definition", " ", "*)"}]}], "\n", 
 RowBox[{
  RowBox[{"timestwo", "[", "10", "]"}], " ", 
  RowBox[{"(*", "calling", "*)"}]}]}], "Code",
 CellChangeTimes->{{3.6900818285732403`*^9, 3.690081843947489*^9}, {
   3.690082679507364*^9, 3.6900827469324646`*^9}, 3.6900827911959753`*^9, {
   3.6900828524780345`*^9, 3.690082875152149*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690082856829937*^9, 3.6902169258515043`*^9, 
  3.6902272928054743`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
 it is a good practice to not use Camel notation for user defined functions \
to that we never get conflict with already defined functions\
\>", "Item",
 CellChangeTimes->{{3.690083145057044*^9, 3.6900831764479713`*^9}}],

Cell["\<\
pass by value mechanism is followed in mathematica and so a variable passed \
will not change its value until we take it in return\
\>", "Item",
 CellChangeTimes->{{3.690082947009632*^9, 3.690082989553155*^9}}],

Cell["\<\
now if we pass some variable then its value value will not be changed until \
it is taken back reassigned.\
\>", "Item",
 CellChangeTimes->{{3.6900828901451483`*^9, 3.6900829420793505`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "10"}]], "Input",
 CellChangeTimes->{{3.6900829035921106`*^9, 3.6900829095640917`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.690082909984372*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"timestwo", "[", "x", "]"}]], "Input",
 CellChangeTimes->{{3.690082911680503*^9, 3.6900829147085238`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690082915237874*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"remain", " ", "same", " ", "as", " ", "before"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{
  3.690082916241542*^9, {3.6900829999190736`*^9, 3.6900830075651636`*^9}}],

Cell[BoxData["10"], "Output",
 CellChangeTimes->{3.690082916545745*^9, 3.690083008023468*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", 
  RowBox[{"timestwo", "[", "x", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"for", " ", "getting", " ", "changed", " ", "val"}]}]}]], "Input",
 CellChangeTimes->{{3.6900828268311977`*^9, 3.6900828447849092`*^9}, {
  3.6900830210061235`*^9, 3.6900830427496214`*^9}}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.690083024492447*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellChangeTimes->{3.6900830254440813`*^9}],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{3.6900830257152634`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"let", " ", "us", " ", "make", " ", "a", " ", "function", " ", "for",
   " ", "power"}]], "Item", "Input",
 CellChangeTimes->{{3.690082846542076*^9, 3.6900828465460777`*^9}, {
  3.6900831161682215`*^9, 3.6900831265527096`*^9}, {3.690083231210044*^9, 
  3.6900832375902987`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"power", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], "=", 
   RowBox[{"a", "^", "b"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"power", "[", 
  RowBox[{"2", ",", "5"}], "]"}]}], "Input",
 CellChangeTimes->{{3.690083239217383*^9, 3.6900832713424063`*^9}}],

Cell[BoxData["32"], "Output",
 CellChangeTimes->{{3.6900832430319257`*^9, 3.690083272024861*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clearing/Deleting a function", "Section",
 CellChangeTimes->{{3.690083304763583*^9, 3.69008331309914*^9}}],

Cell["\<\
we can delete a function from its existence using Clear[fn_name] method same \
as variables.\
\>", "Item",
 CellChangeTimes->{{3.690083314846305*^9, 3.690083336951041*^9}, {
  3.6900841931130247`*^9, 3.690084197529971*^9}, {3.6900863718850145`*^9, 
  3.690086374072483*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Clear", "[", "power", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "removing", " ", "power", " ", "function", " ", "from", " ", "memory"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690083356340968*^9, 3.69008339207022*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"power", "[", 
   RowBox[{"2", ",", "5"}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"now", " ", 
    RowBox[{"power", "[", "]"}], " ", "is", " ", "not", " ", "availabe"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690083360855977*^9, 3.690083379585372*^9}}],

Cell[BoxData[
 RowBox[{"power", "[", 
  RowBox[{"2", ",", "5"}], "]"}]], "Output",
 CellChangeTimes->{3.6900833650547776`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Adding comments and documentation", "Section",
 CellChangeTimes->{{3.6900836043330193`*^9, 3.6900836167172756`*^9}}],

Cell[CellGroupData[{

Cell[" for comment we can use (* and *) in mathematica", "Item",
 CellChangeTimes->{{3.6900836193240137`*^9, 3.690083633514475*^9}}],

Cell["\<\
when we define a function we may add some documentation to it so that any one \
can easily able to understand the basic functionality of that funciton.\
\>", "Item",
 CellChangeTimes->{{3.6900836193240137`*^9, 3.690083681905259*^9}, {
  3.6900863518430333`*^9, 3.6900863529417644`*^9}}],

Cell["\<\
 for getting help about any method we can use ?<function_name> \
\>", "Item",
 CellChangeTimes->{{3.6900837201715956`*^9, 3.690083746236973*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ex", " ", "-", 
  RowBox[{"for", " ", "Plot", " ", "function", " "}]}]], "Input",
 CellChangeTimes->{{3.6900837488957458`*^9, 3.6900837573904085`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Plot"}]], "Input",
 CellChangeTimes->{{3.6900837606615906`*^9, 3.6900837618764*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"f\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a plot of \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) as a function of \\!\\(\
\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) plots \
several functions \\!\\(\\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Plot\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", \
RowBox[{RowBox[{\\\"{\\\", StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"}\\\"}], \\\"\
\[Element]\\\", StyleBox[\\\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\\) takes \
the variable \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) to be in the \
geometric region \\!\\(\\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690083762330702*^9},
 CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"power", "[", 
    RowBox[{"a_", ",", "exp_"}], "]"}], ":=", 
   RowBox[{"a", "^", "exp"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.69008368494158*^9, 3.6900837036460495`*^9}}],

Cell["\<\
for adding help or documentation we need to use usage keyword\
\>", "Item",
 CellChangeTimes->{{3.6900837082336383`*^9, 3.690083714862057*^9}, {
  3.6900837860995474`*^9, 3.690083806902943*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"power", "::", "usage"}], "=", 
   "\"\< gives a to the power exp \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.690083841583583*^9, 3.690083870727542*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "power"}]], "Input",
 CellChangeTimes->{{3.690083875385648*^9, 3.6900838852942533`*^9}}],

Cell[BoxData[
 StyleBox["\<\" gives a to the power exp \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900838858596306`*^9},
 CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6900839035979924`*^9}],

Cell[RawData["\<\
->{654, 659},

WindowMargins->{{Automatic, 21}, {Automatic, 0}},

PrintingCopies->1,

PrintingPageRange->{32000,\
\>"], "Section"],

Cell[CellGroupData[{

Cell["\<\
 one of the most ofter problem in mathematica is that the variables and \
function do not go away if we create a new notebook they remain in RAM.\
\>", "Item",
 CellChangeTimes->{{3.6900843201649323`*^9, 3.6900843754802685`*^9}}],

Cell["\<\
so if i define a variable and create a new notebook then i will be able to \
find it there as well, it might cause some problem so Clear[] if some problem \
occurs.\
\>", "Item",
 CellChangeTimes->{{3.6900843201649323`*^9, 3.6900844199196663`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting in Mathematica", "Chapter",
 CellChangeTimes->{{3.6900845061642003`*^9, 3.690084512661532*^9}}],

Cell[CellGroupData[{

Cell["Barchart ", "Section",
 CellChangeTimes->{{3.6900858863317347`*^9, 3.69008588814194*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"alist", "=", 
   RowBox[{"{", 
    RowBox[{"4500", ",", "3000", ",", "2150", ",", "5879"}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6900858913791018`*^9, 3.690085910487838*^9}, 
   3.690085995270364*^9}],

Cell["\<\
for making barchart from a data we have to use Barchart[list] keyword\
\>", "Item",
 CellChangeTimes->{{3.6900859113874383`*^9, 3.6900859319991827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6900859848334045`*^9, 3.690086032086138*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 
            4500.}, "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{33.949181437280785`, 
           115.23823737572286`}, {-57.36468163998896, 108.25674931298138`}}],
         StatusArea[#, 4500]& ,
         TagBoxNote->"4500"],
        StyleBox["4500", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[4500, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 3000.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{122.43918674581329`, 
           203.72824268425535`}, {-2.3408713223321485`, 108.2567493129814}}],
         StatusArea[#, 3000]& ,
         TagBoxNote->"3000"],
        StyleBox["3000", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[3000, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 2150.},
             "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{210.9291920543458, 292.21824799278795`}, {
           28.839287857673355`, 108.25674931298141`}}],
         StatusArea[#, 2150]& ,
         TagBoxNote->"2150"],
        StyleBox["2150", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[2150, {}], "Tooltip"]& ]}, 
     {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
      0.6719999999999999], Thickness[Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 5879.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{299.4191973628783, 
           380.70825330132044`}, {-107.94990459202141`, 108.2567493129814}}],
         StatusArea[#, 5879]& ,
         TagBoxNote->"5879"],
        StyleBox["5879", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[5879, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5437956204379562, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}], 
        LineBox[{{4.456204379562044, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
           0.}]}], {{}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690086004224331*^9, 3.6900860327035465`*^9}}]
}, Open  ]],

Cell["BarChart3D[list] forms a 3D chart which we can roll ", "Item",
 CellChangeTimes->{{3.690086053959715*^9, 3.690086069780262*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart3D", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.6900860715774755`*^9, 3.6900860777005415`*^9}}],

Cell[BoxData[
 Graphics3DBox[{
   StyleBox[{
     {EdgeForm[GrayLevel[0.85]], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0.985, 0.02, 0.02}], 
        Scaled[{0.985, 0.98, 0.02}], Scaled[{0.015, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0.985, 0.02, 0.02}], 
        Scaled[{1, 0, 0}], Scaled[{0, 0, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.985, 0.02, 0.02}], Scaled[{1, 0, 0}], Scaled[{1, 1, 0}], 
        Scaled[{0.985, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{1, 1, 0}], Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.02, 0.02}], Scaled[{0, 0, 0}], 
        Scaled[{0, 0.99999, 0}], Scaled[{0.015, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0, 0, 0}], Scaled[{1, 0, 0}], Scaled[{1, 1, 0}], 
        Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}]}, 
     {Opacity[0], EdgeForm[None], 
      CuboidBox[{{-0.21440000000000003`, -0.25, 0}, {4.502400000000001, 1.25, 
        0.024}}]}, 
     {EdgeForm[None], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{0.985, 0.98, 0.98}], Scaled[{0.015, 0.98, 0.98}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0.985, 0.98, 0.02}], 
        Scaled[{1, 1, 0}], Scaled[{0, 0.99999, 0}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{1, 1, 0}], Scaled[{1, 1, 1}], Scaled[{0.985, 0.98, 0.98}], 
        Scaled[{0.985, 0.98, 0.02}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.98}], Scaled[{0.985, 0.98, 0.98}], 
        Scaled[{1, 1, 1}], Scaled[{0, 1, 1}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0.015, 0.98, 0.02}], Scaled[{0, 0.99999, 0}], 
        Scaled[{0, 1, 1}], Scaled[{0.015, 0.98, 0.98}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}], 
      Polygon3DBox[{
       Scaled[{0, 0.99999, 0}], Scaled[{1, 1, 0}], Scaled[{1, 1, 1}], 
        Scaled[{0, 1, 1}]},
       VertexColors->{
         Directive[
          Opacity[0.1], 
          RGBColor[0.97858, 0.678934, 0.157834]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.98572, 0.785956, 0.43855599999999995`]], 
         Directive[
          Opacity[0.1], 
          RGBColor[0.99048, 0.857304, 0.6257039999999999]], 
         Directive[
          Opacity[0.1], 
          GrayLevel[1]]}]}},
    StripOnInput->False,
    Lighting->{{"Ambient", 
       GrayLevel[1]}}], 
   {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
    0.1]}], 
    {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
     0.1]}], 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{0., 0., 0.}, {0., 1., 0.}, {0., 1., 
              4500.}, {0., 0., 4500.}, {1., 0., 0.}, {1., 1., 0.}, {1., 1., 
              4500.}, {1., 0., 4500.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{46.20743986864818, 
           159.779061436419}, {-83.21950223347835, 136.37378414895548`}}],
         StatusArea[#, 4500]& ,
         TagBoxNote->"4500"],
        StyleBox["4500", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[4500, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{1.096, 0., 0.}, {1.096, 1., 0.}, {1.096, 
              1., 3000.}, {1.096, 0., 3000.}, {2.096, 0., 0.}, {2.096, 1., 
              0.}, {2.096, 1., 3000.}, {2.096, 0., 3000.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{147.1275984538591, 
           260.12552661233747`}, {-13.880210858410322`, 135.3451715846032}}],
         StatusArea[#, 3000]& ,
         TagBoxNote->"3000"],
        StyleBox["3000", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[3000, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{2.192, 0., 0.}, {2.192, 1., 0.}, {2.192, 
              1., 2150.}, {2.192, 0., 2150.}, {3.192, 0., 0.}, {3.192, 1., 
              0.}, {3.192, 1., 2150.}, {3.192, 0., 2150.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{249.15528327900472`, 361.84879689196106`}, {
           25.096820982287582`, 134.30542644237033`}}],
         StatusArea[#, 2150]& ,
         TagBoxNote->"2150"],
        StyleBox["2150", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[2150, {"Graphics3DLabel"}], "Tooltip"]& ]}, 
     {RGBColor[0.97858, 0.678934, 0.157834], EdgeForm[{GrayLevel[0], Opacity[
      0.1]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            Directive[
             EdgeForm[
              Directive[
               RGBColor[
               0.6666666666666666, 0.6666666666666666, 0.6666666666666666], 
               AbsoluteThickness[1.5]]]], {}, {}], 
           StyleBox[{
             
             GraphicsComplex3DBox[{{3.2880000000000003`, 0., 0.}, {
              3.2880000000000003`, 1., 0.}, {3.2880000000000003`, 1., 
              5879.}, {3.2880000000000003`, 0., 5879.}, {4.288, 0., 0.}, {
              4.288, 1., 0.}, {4.288, 1., 5879.}, {4.288, 0., 5879.}}, {
               Polygon3DBox[{4, 3, 2, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917]}], 
               Polygon3DBox[{5, 6, 7, 8}, VertexColors -> {
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.48929, 0.339467, 0.078917], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{2, 3, 7, 6}, VertexColors -> {
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{5, 8, 4, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.97858, 0.678934, 0.157834]}], 
               Polygon3DBox[{4, 8, 7, 3}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}], 
               Polygon3DBox[{2, 6, 5, 1}, VertexColors -> {
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.97858, 0.678934, 0.157834], 
                  RGBColor[0.995716, 0.9357868, 0.8315668], 
                  RGBColor[0.995716, 0.9357868, 0.8315668]}]}]}, 
            Lighting -> {{"Ambient", 
               GrayLevel[1]}}, StripOnInput -> False]},
          
          ImageSizeCache->{{351.92128554502267`, 
           464.6845213304981}, {-156.39401390257723`, 133.25436700864333`}}],
         StatusArea[#, 5879]& ,
         TagBoxNote->"5879"],
        StyleBox["5879", {"Graphics3DLabel"}, StripOnInput -> False]],
       Annotation[#, 
        Style[5879, {"Graphics3DLabel"}], "Tooltip"]& ]}}}, {}, {}},
  Axes->{True, True, True},
  AxesEdge->{{-1, -1}, {1, -1}, {-1, 1}},
  AxesLabel->{None, None, None},
  BoxRatios->
   NCache[{1, 0.23320895522388058`, GoldenRatio^(-1)}, {
    1, 0.23320895522388058`, 0.6180339887498948}],
  Boxed->False,
  FaceGrids->{{{0, 1, 0}, {None, Automatic}}, {{0, 0, -1}, {
     None, None}}, {{-1, 0, 0}, {None, None}}},
  FaceGridsStyle->Automatic,
  ImageSize->{464.55063391082007`, 293.5159722282538},
  ImageSizeRaw->Automatic,
  Lighting->"Neutral",
  Method->{"RotationControl" -> "Globe"},
  PlotRangePadding->Scaled[0.02],
  Ticks->{{{0, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {4.288, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1.048, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {2.144, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {3.24, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {0., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}, {4.288, 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}}, {{0, 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {1., 
      FormBox["\"\"", TraditionalForm], {0.005, 0}}, {0., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}, {1., 
      FormBox["\"\"", TraditionalForm], {0.01, 0}}}, Automatic},
  ViewPoint->{2.6324519069663888`, -10.02843701040368, -0.7075648987017805},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.690086078593136*^9, 
  3.6900861431009617`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzk/Xd4VFX3/w/Pd2YSqgIWpIMgRUCQqqhgryiKWOhFeu/SeyAkkN6o6SSE
EJKQ3ivpCTUhCaQQIBBAigr6UXT91nvNnsmI6O19y3U9fzy5rrXOmZNp57X3
Xm3vc+aTKctmTZ8/ZdnsqVM6vb9kyqJZs6cu7fTewiV8SPf/NJr/Ryxvd9Jg
n3eNqv7v/0GZH/n/ywM9ZGNBP//8M929e9ckV65c0TSgixcvaqmmpkajwwHj
PzUvitbRb7/9Znw7wzu7Gt60k2ya/elNr/J7XLxYQ5cuXmCppos1VXSJ5XJN
JdXWnKe87DQqPlVI169Wa7R07/ZlqFqNHrt095ZB7ty4aEmXLlQ05pdWNGFV
+STehM/h0oVKqqmuMMlF/uJ9zc/hzp07pnPo+1fn8KLhHJ6RjeH/xtdoRT/O
51HLb14t313kwnm6VF1Ol6tLqfbCWfr+Rg2+uHztn1ju37tOv//8nZbVTT6b
1IRwyk0OorqaEvrxeqWOfv/hAv/vxwvNWNU0ZnXRgtUlS1aX9fT73ct87G4t
P+XuFf5GP9++RPduXoTwI9aN6d6ti01YXXqKP/KSjjFd4v9cvYxvVwHRPKtg
Xajgz794wZzRBSCq+TtEaEYjonwDnWayaWJORwQvBxlDy/JHVJ2jCxUldKmq
mOldrjrFnerOtQr+1tV077tKliq6/8MlnJ6cnZY2r5rDX3Hzqrl4TL/fg1zl
U79Xxy/9/adrlBoXQjnxvnT/xkmqu3CSvr9aQvdvlWka0u93yqDKmdadc/y9
f79znqUCwm/Mugn9/n1Fc1aV2KtiyD9UMeQfqkG6ugGaQIcmaI4mwBv8iG8m
wn2adUM0hjQBN/DNCyw10gSMjx92xx7Tl4NXLzH5C+cgmhdE6+hi9XmGfh4N
wGOIqfMxxm4cW6ZxZQ58pgF4U9noKTc3l/z9/UX8/Pz05OXlxV3f28uTZT/5
eu+noAOedPigj6YRhQT5MpYNa5bRyfw0k+zYupa36SwZdLIgQ8sqU2NJfvvd
KSnyAJ3MjqYTWVGUnhRFWakxjflAHJ/U1eKGdLeumL/dT9eL6fdbpyHAeus0
07t1hvvureLHWJXg2Flme/ssP7xdKg1RisaBcJ9hrUczNUAzNeKGOPc4q/OW
aBy0iwyIykZonKZonDYYH0+jcfj8uXWwZ5SWOMAfcxco7/+AFqmCaNpAt0A/
08pjNEs13f2umrtfJffsS9VlfAyDtqb6nDRIT26QC5YYEGgpbhW0DPdnNpF/
bpUm5q2iox9++IG8vb0pMMCfe2lIcCAfCw4KIH8/Xwg3BbQFrVu3lrZutTIJ
P2aEvMf/mzFjxh/+t379On6XrVZbWFtZbaEtW7Zgy+/Px1rj6a15b3ND8vf1
1LHy4ucF+HlSSOA+iKYxdANuvVg9ncyJ1bGK44e5cfwwN74J3b1WIo1ZgoaD
aKQJ0Vy3+NhtEQ2asERnakxus9tl0qJozXKIDLzyJ9CYaNvzejRmSzQm7/1Q
0RaNqUOzNsDe62hWLZoVD4H6/vcwBRUQ/jRoHlHfnTcdawVtSfdu4B93b1Ry
I1bS1Yvl3BkuVZc2ZNNS2ohV2WPYYzoV50ooOTFehgQPDuEGtgEBAfz+0myP
qcGEZqupuUBXLlXT/bt1DWFfYGSuA8VPN9hc36DNaxfDbNPv/we5RZvXLePt
HSotLqKdO2zo919+YPmRqs6XUGKkP+WnHuEmLcmP429bfiafKs+X0rmS45on
qby4kD/z3NkTdL681CBlZxrR+eKcJpQQFayjjKSIJqwim5DPfg9+aqC/F5+F
QXy8vdDSXpaqR0hv4V6BR83/2COa/KEz7IdIZ9j/GLpAE1bxDLKupBF3gbPS
Bc4amvzWWe6orNl+3pJhe7sUzS1NrofGiGXOhub+/tyTaGmY0wqM4vNPmgbw
Y2jpJ9Xe9xh8vItjEHzGD5VPoR9wr79/p4pO5qXCVFFwII8WX2/Gx6eilVPT
06FAH0pLSaDLbEvv/3JPteDjqgXhfy5fvswRRAUP/8tNlJ+8dwV25t5VbsU6
cRqb1yxAu0qL/vz9FdrlYkN3b1+hk4XZZL3Nij+y9kI5f8/KslN0qiCdrlSf
4WMXz53gY9cq8+hGVQ6EvzBrHatcDhCuVeTQheI0OpMXR2VFiVRWEEkVx/ZR
bqQDpRy2oWj/LXQy3pXFhVKCt1N+pB3FHdhi2AZspbwY97/YuvGHxwVY8Qnm
Rbthj9KP7MRWywdc+VvgbeQQbyEpwTb8kiifjdy3eZ/3NlDI/s3ku9eJIg56
UMxBBzqel075WSmUlZ4oW7PH/Fre43M1/q/+mKXpedkZiZQt/0+m7MxkLaUn
HuWXxIQHUmL0YXlkKVpPiTGH5XhwgBetW7NKiwf8VBzmJ6gnZafF8Jlkp8Wy
q4mQLeR0YQZ3aB45/IyK0pM8RkoMUpLPY+VMtoyVxw1jBcNEZxomPERgaH29
Gj9kjDQ1jZGnMUb0eGgaKPwGIQc9IXCaBz0bsoVMYL+Yl9CMVSKPlutlPFqu
o4f89F25yfK1MEUbz8HyNZJIA529AuMBgm74/XnYu/Po8WISK/msf7pZwe+c
wl3eB11evqJ0e34BvnKAvzcPCR95zn0eO6Un0sjG2koc1pWL52XY0P2fjAat
mdlwQDCByO7761UGE4swp0Y5zov8bjVsQasQy96s5tOtu1jKbj6KY7MzSoop
OzWSank/i9uDP5Wf+9OtGjatVaX5dNTPln6/cZyliKWQpYAlH5HA9XzG/MuV
bLpxPoWunE2k0jxu63B3qszxpSsnDlJFtg/VJG+ki/FL6Wryt3Q9aaGWfs34
hpn9mjGFfk2HTOa3+jV9Eo6lT2SZQL+mTcCxtPFQ4/h7/Jo2ln5NhYxRMpp+
TYF8jSemfMUq+UuoL1gljYL6XPMU/Zo4kuUzJZ/Sj3Gj6GL4eKqL+IpuR42k
G4mz6WrsdLoY+Q1vp/HjmXQ1ZhpdjJjM26ks3/D+JMP26EQtXY2ewn3+RvxU
uhI9mWUSXYmaRDfiptClCP73pYgJ3CiVh7+mC6Fj6NLR8RA+fHQc1FikLOFj
6MKRr6gyeBRleo6jrau+4TOoDB7Jr7tw5Au6FPaVyMVQPp2LoV9AjWJrXh74
CcXtnkxRHlMpzGszBXk7UfRBZ9rj7kDeexzJf7c1lZ9I0orRak2XStPZSsVQ
aVE8nToWQuXpu9hMWFN6iA0VxjhSYbQ9ZYXZUkLAZsoKt6OCODcqivegzDA7
Opm0mwpi3SjrqAMlBMIS2cr2ZOJuw3NCd2IfFuvAJs0TvL+Ln2sv24TALRTr
t5FOJHiorTtvN8g2bP86igj2pOhD/N5pcWx209jExBu3WuzASqhD6cnR2Gpx
gLstjHR6coxsj6XGUgb2ObhNT4ykJDYzPHD4G/Eed0kMorzMOIoJC5AtHuM5
psf59Y95q8UB7n44BBOSFBPCj4qPZ3J7sdmhJDZ2EOyXncrmDyg/natnk5WL
xj5bSBVnj7PJKv5Lk6XnEN1LmS1P8vPxEqvV/CFWy/IPnv0BgwXxFoPl3ZrP
iRvbYKHu3ijHnjxqIFqvrNY5o8CRn4f3vX2eX5mMtxCTU2+GLOQ78MexifKW
5/z03TkMcrZpjQ0WTtw5B04sRXlpEqP+cOOCwdD8IOZJWacWsrGUcKuy4jx9
f01sI3/6Of56pfjeiCnvcCJ3+XwRXa4oQq5YUaSj2ooCPsFrF47Tbod1HAKW
iyBi3LxyunxS6YkM2mmzFd/sxxpNe6oqzqAj+9bT73XZdLUklq6VsluJ9abj
KX4UG+xOh30cqDJrP51OdKFT8U50PMaBbh93o9pjO+lOkZPaOlJt5g66U+jA
W1ve2vPWhm7l76DajO30a7ET/VbizMLbYif+7N+KHZnYb8UO9NsZB7p/xl6J
Hf/v/umd3AD3T+9gsaX7p0T48CkbBL+nttP9kxBrPPXkNqiteP4JK5YtRuHD
JzazOr4J/zu+kWUD3S+CrOfDRev4rQrX4g0L19D9AshqvGHBKhwrWEn38yEr
cCz/Wz6Ut5z38pbh3fKWsiyh+7mQxXw4dxEO5y6k+zlGWcCHc+azyp4HNZdb
837WHKqNnUWXomeIwAqeDGTzluS3nHMCb+ux5Gc3i4I8VlCIpxW5W00nj41f
k/u6kVSUsFvLNsadP+ZWzlZ2B4voatJSfrfZMP0T+c0NZn+8knFGi6+DuYeF
Hw33kPI1bD1b+a80YvBxLPkLGHwIHiV9roXR1zxtMvkGGcHyCf2aAPmYfoge
zm5gDN2M+ZrN+xS6nTKHLkViO5u3k+l28iyWmbDpvJ1BVUfG0u2kGRqDgX+G
96dTZchoup04DbadLoaNpR9TmUr4WKoJG0O3EqfLtiZsNO9Po+uxk9kpjOLt
JH78DdWEwgGMpOsxE+hWwmSqYcNfeegz3o7iz7gVD19YE/K5WIbq4E9xLG4C
D+1bceOp+tAnVOL/CWXtHk6n/UZSabw1Rftu5OdE+27g5xzZt458PawoM2of
xQQ5c5bvQoe8HelkVhQ/50ZlNo/maxXHqDgvmo4fO0rZCQEU47eJbflmiVvP
Z/uyB9jD1nqtntUa7uYJB7fS+Rx/k7CD4C8Ytm81t3pBrCu/xE8ETiJs3yrZ
4jE7AS0d3rWcg5ZC9i+nU73oqNd68nTfLgHgidwktuDJso/t2RPpHG7GcHAS
TcVFqfxteU/TSWxRelIkHc9JlH38v+R4GmWmRLE1j6eCrERKjg2RICYpOhiW
UbZ5GTGyzU2PpsSoIMpJi5LHxi3+n5EUbnqecZsUw/uZsZTD36UoJ1GLJ3HH
dXPaSR6u9vI1ThektmAnkM0YKs4WsBTR+dITTJaNvyXFRwbrKT4quBlOTQcP
0IB8PJkFewEVvrIPENMujuCJhzgCvckRKMsMF4AncHhK92/BxCMgfcxg4CX2
rBArjDrJfQ7/EDRmZaaSrc021LDMrbQxiHxCBZGoc1ypvUw1VWVUXVHKaWxp
MX9qeekZKj97yiScvPLRmqpyTlxTOVrmPU1HykhLku/Hj0TwzKLcNKqpOEMZ
0Z6UFu5Gxw6upMKoHbJNPuJCOTG7KDNwBf/Ptf5/QSsoN3Y3b1c+ZLtLtkeD
eHtwOWUedaaKoqPoIXF+bDwqisIpPnQvVRSG8xFf2T+VEcQtF+2leY4Kk/2x
J3IqPVDte9K5vGAqTPKlc7mHKCvWi0qz+X9R+/lxEA+fvVSWuJOSD9tTeYIV
RfpsorNJTpQRyKdw2E7cQsqhrZQUvJMuZ1jz8RW8v4Nqsng8xK6mmP2L6ajv
NipOdqXL6VZ0JW0dpfgtpSg/Tumqj3nwSK0+5k61eXvop3J/ulfqx+JLP5X5
sfgiAC/1gYs8vZ+qM12oOsOZj1VnOHFz1ea40k8l+0XunGTDWp3uoGlDtdnO
vGdPGYe3UkWyNeUFL6MYfysKcltGezd/SYccvyHXZa/TrrUfk/Oar8hu+ce0
d/tsct40gzJDrCgjxJqOR++kE9E2Jgd4p9BwprV8hncKdtJ3ubZa8YA6eEDx
fSzwh2fskY2ctmOfB9kJgSvcAXdkcoPIWdkDih+0hg+EB8Sjk1vh8KywK/5v
M/u7zRrxf1Ab4fI2aJXzK1wHd1W41uD7RFbrxfXpDa6vYAVcHxwfvJ/B8cEF
LoUXM3g9JYvYy0EWwt0t4OdkG3wenpg9V1yeQWZTyZFZvJ3F/uXYTKgZmpZU
y7kCcoOq8Kl0OWoKZez5nMKdxlPinomU5DWHQnYtowD76eSw5E3as+4Tclv1
EWVGuFFp+n7OkXyYtS1djltIVZFz6GLUDPo5RZIfXX3uY/GwvEdynq/5bJU3
hC80JUB4iTjEz5WMFI+og0fkkS9pUMwndJcFyUhV6AT6jtOe2ymzeH+c+L17
mXPZ003ilGcC/ZA6C4WRo+M1bcWXVbHfuxE3mW4mcErE/u7HtBlIbegG+7ab
CVM48RnNOdEE5fumsq/7mv3cRPF5ddHjJcm5GjWOH3/J27Hi+65Hj6Pao/y8
aDz+HFv+zJqQkWwfr0eNpstho+ha5NfsC0eI/wvYMZ5s1kylLN9plBiwiZ9b
lubBsSCymrJUd9mmH+Zs5/A2eVyS7EYpRzny3udEUcG7KdDLiY74OYkfZI9I
F04nUjVLQdoRykw8LJ4l6oANO7M1kvHkRbvIPgovp1L28GNnuD/4TP7sU8l7
pECzWZyfUfKiMFZPJe/WsdrF+E8kcuoUtYdS4sM0xlJKWmKE1Ec4H+djp/OT
OWc9npNgrJlInn6akxW4vHR+LrbwP9jPTI6kfHZ/yfERJvcXE3ZAtolRh4xb
PSVGH0LZhd8qkb1bekKYbLPlI3mP0xnjMXWc8o/FyzY9Mdz0OJe9oeceV/L1
3NVMXB8SoGxOf/KVCyxoSOeLc/mkzpWeZjlFFWcy4B9PJfFJwXPxnpJkqjid
TJWnU1jS6Fr1cY74T7Ccoms1Z+jaxWK6UFlKVRVlUpDYabuNblw8TTdqTtCN
C4VmecaTD5myaylaT6WlpRTsv5vqqk9TbkZsH7pQFIIKU1EkncmPp5OFOVSS
G2FIOi2wSyeL5JAkn7yPom5uBL8Ex3GsNOew4SUni3CaJbmRfCiETmcjOjiW
kcpvk5+TyYHAcTrHAcG5Eg4Kzh7nZ54/W8T67Kl8PEueqRWt5+dn8H8LRc6e
ysNhTnj5XTSdqSg/myK81pC/9Rd02HkaBWzljr91BB2yn0AJh+woxXsuRYV4
s2NcRdnRuyg5lFP4sLUUe8iZ8o+skccnItbL1uBIV1FskBMdY1sfHbKfHaU/
ncoMli27UXaYwWp7SM4L24rCMC08KZ9aRUEoO8+DIqXZh7Dlk2J3ChWg5XzL
XzOACmP4wyPtKTfalQojtlFa0CbZFh7dJlXQ5MD1lBNuy4+3UmmCLeVH7KS0
gxt4u4Mf21BJogP/b4u4U5xMYiCPuKgtdDaFfWX+Pvq+2I+3e+nGCU/2nXvp
1ikv8aHfn/Hm7W7xn7V5u+jOGf5/rgeLu/KhznTn1D6WvfCivN0j/rM2G77V
gf3oLvqpeC8/dhInWp2OTK42y1HThCL2LKQoz28p+8Bc8ts+jgIdZpCfywra
t+4Dcl46jJyWvU3OK4eT/WoY5p2rYbSj9i+jdD4HwD4Tv5MzSPhvziHZsags
0uBBRcSLapFCwgGeMTlQjcGDNjT3oEpUFmnwotp6N8piVe9J4cbEl25SYsoj
dfClKAgUrVOu1ChrJI1crTV3qIZcEiLpJN48fzlySkkp4V+XQi3RmhJK+NOF
eF7OAiSScKwag2fVK89q8q7stbKQBx6bBSd1bCaVhMygXzORbv2aOR1qmqYF
/Zgyld3sN+x7JlHpkRmU6jWDoh1H0MGdE8hn5yxyWPEJOX37AXmsGU6eW8dR
WWEM5cXtpeK0fZQR5kilEUv5DasiZzPOH5MmsSsdZyZGFzsWnhdJp8nzpkDG
KFGeF6noV0haxe1+IfJz4ud0I+pLhAI6fFF+fVX4FPbq0+hO2nyRG4mz8RXC
JvHpXOR0807qXEk/K9kFo+J4I2EGVR4Zz852EifXnGIeGUcXwifQFY4wKjkF
xfZC+HjespsNH8fvxY846bgQxm41bJyUJLHlJJW3Y6U8ia2hFjlOC9/MT4fX
ro0cLxlwVcgXvB1NhQcmUd7BubTHYS252a5AJqij3Aj0R0xk5EbYQTAdHWGn
oxzetaTog44UesCVfPY6kPdeRwoLdKdzZ7L4vM/m8DOrzuZxysCu4OxxqirO
1KFSw3l5Sswh2rZlAw5RVckxlmy8gCrZbFaWn2I5Y5gqO1dGZaUlVHL6OJ0o
yJJMLzIsgFavXE65qWGUmxJCucmH6NqVGmM+01vlM2VlZbTPxYrqKgspadfX
nemXIz2bsnoec7phA+n7uC8hfAqsu9D3sV9yY5WGfEN221aR24p3RWIOOvDR
9FhYuZKsYLgPcSHdRbM5L0yQWiScgZ5dSgKsIT/mPWy5cXDM0vyY+ZadS16k
phmdyEulomMxbPOPiZw9XSBeBE4H2zMncmUL7yHehWnK49OowOfnZmpaGTxL
Zho8iIhxH14FzzU9LoqhnMD5FBvsQlFHfCjEcyuFem/lCHUaBdlPIr+tn5Kf
1acUsO0zCrD+TPbD/Oz0/GRfPpOUAyspw28uZQfME1uYHzSP0sKctRQftl/z
ImXF+9OFU5FUWxIr+/Gh+6kk+zBVFYVRRowviw/vh8oWfubCcRz3Zh8TKs4l
I9qbSo4dlOTtbKa/FDCwTTm8g84kubJPW0/FvIVLORHnQJWc45yK3ETnUuw4
39km++XJO+lcwhbKC7ei1MPb6XjkNiqJ2UAFR62k/F0UsZWPbaXy+I1UEL6Z
bpz0ZfGh70v8texTvLnF4WWqszzY0/jS3bN+8DDcspyr8f+qM93o9ilPunfW
m72KJzIzbgT2K3hGhrN4l9ocNzm2hxumNsdFPAy8y40CN9560J0THnQjn4+d
cOetM3wMXct1orocRxYHTjp3SA0nw38hZQQsIz/XVeS//WsKdJpLu9aPILtF
r5H9gpfIb8dkLR10mo0uFr2NajId6WKWG907aXIubG6LHeAB/lihZKnPzqAM
tUlJzLRSl4Qj2aacCQqt7E60f6xJSk6G54kzWS++RKqS+LiitQ8mZ/X+5I+1
SZ04EwujI6mX3KU4mrtEtMrTTLJQ86Bz+TUHzuVXlCp/RdHSsJc9V0th7kjY
subAs3AO92vWLPEzksRpHkcWRz+mTqeqo9MljzsfPosOucyljAOLKHjXCjro
vpLcN00gL6svyWfL53S7JhfrX7Bi4gwKJ9fPUG11sUyh3b9xXE+/f3ecE/uS
vCiytd5E9+pO050rxXSpCuuhztLF6nKkUtXnOOS+fb2a7t68QD/drpE1T/R/
t7FizDBnjXnsP5Zs/sLC1ZRmswMc14SNW69PYeYwe33gBbKe1p3Wf/0Ut8YG
1jpa88WTlG8HQ9iLvx/rZ9WTf4wezkbwK4iml2gxinQzea7R4lF1IScXiUF6
GENOXOJgETPiDuIhLKOmg1hEdkNFh6mm8JBJxEIWZtDZ/Cg6U8TbwkRsOVkr
iNI8IQ95jyVa7UezYUw0PdVwPEneorggUfZL8iLoRHYsjK5YSLaWWonVOfTO
PWYwdGxAy4sLYTgRZmem8Rkh7M7OSKCzJzKpojibSk8ew2MtdjTN5V+lJzOp
IDtZtmX54ZR6dBcVhK6XKYOTkRvpbNwW0/6peEfKit5LWWE76FjUHi3FBGOO
59Cu1RTsMpsO2IylANuxWgrYPooT2GDHbySMjQl2p3A/W0rmRLQwNYgyYv1Z
/KgwJYC/aGaMN5xK1iHsYSvHvPhtz2YFUQLbxMxoL97nFkgI3YOnHguk6oJg
3uLlCUd281MTQndT4oE1lOCzhOK9ORBL8F6seYYD7LV0Nm0vJQQ7Uoz3Skr0
WcwW1JGOxzpQvNciOsHb5EPbKS1wNe/bU2bQGrVdzdZzI++z9w/bQjW5+6nu
uA/dPOXHW2+6nL+fP7quCN/yct4+3vNk2Q/hw4X7UONiS4o616XcXXxkj2Fb
sAeWFNX0HHc+k7p8D7qU7UY3izCneCkbyx1uFuGYC4sz77tTXZ4r/peFnLou
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
sjqyEqC8vu1nmjZoCf2eSihvHnmT3OZ0Fj7SpSxUQonEwGOlFK7Z5jMqy3+H
as3SGeRis4r2rvugE9KtV1R+ioLy5gUfCx+9qaCsvkCs/btybWIT6LcQNT8m
6BjV4UmCysCHtcTPqAItYJO7f4zpAkx2efez5/UUdKA0l2yYkoEKax2FrsLu
gWXoRUMF0HiVRVYGfkAbuBPZSxZpZGOpUsldK+ur+s2hG/wtoCv/fOBNfwxJ
Vwdkpn0lM+WoKfx92rewE9BALIzJ6aweHDVNl1C5FXRv5BgthRkYTRZGBjBm
6QVGYvGBUbieSPMs9FO4rKgdaDWWa1Z1cluEgBU9hI4WWktholaDVsDyTuRv
9bHkks2gUeR6s5dZ9o0ilyn7tjRPMd3XfGIKnmRdcKN/z03M954ZY1WyWhc2
XIwvIBlR7WJyhlx+Lixr2oRBQk3/YIKhQ4ahVQmGN0AFfCF3jGoE3Qj3z+iL
y7HaCD22NFHzyXbZCICB6ClcCB1dw5ZpRW/y3jaavb9htqXq4IfSnwzzT6wb
KSTrl0w05fu41++lxo+gK10poch9Sz5AnvqE4lJ68EtazWbJPImXiQmnT+S2
VP2h9cgsnpPMQidXiQIOcFgoKIikfRa2ppJAeL/7uUv64qK17sCDS9QW4Uyj
FjKUT+tZ8IuPrmlPEUpgy5PthmhGIPlupvDcDH2bXBf0ESYNzTJwNcOgMa4C
MPd4TetpNTZYISb0H4j9bR+aibR1RHuk+F3VfAVuXbhl4cfCS18/X6GTFCbT
7R1JNl6HbisUEUtPFWrIwyxVHobSR0ng13JXlmehG+MC8q7g1wT8+K1vp8wj
/zWDjJS0FLG2vY4i17YH9FW9yW3TJMm920C/peoWVUEfSY7gaJzUfICa5UOo
NTFRQ4RZKx3tP2L7q45WU84RpsNMTGV8+rLMYnD8FPGRFB0NnKAtTCURiNPM
DjwyvsbtWTKmdEDehsx28uOCUm/gx7mIIWfj0ciJmzFvwzAtOTgaF+SzX7qf
t7wPLqFsK1yZRsxisv52rEDTirakyHXtKcpMAhhljMNHE1Qd42boO4Zux5ga
A5ZO5eubZw01zQk0NhHTPYzYzzcMN+L9L6zV3pnNkfl/pAokdeEjyG3Riw8W
SNgNzjPmbN9oWkO/oRI2hsagpiFp41cwHAvJ2sR+MaExprvhreiLy07bgdjj
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
+2//v75h+W//HwP1dds=\
\>"]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
if we wanted to graph 2 or  series on a graph then we  can use a 2D list, \
where first row represents first value in all series and so on. \
\>", "Item",
 CellChangeTimes->{{3.690086128900497*^9, 3.6900861912290454`*^9}, {
  3.6900862871108775`*^9, 3.690086313913745*^9}, {3.690086358493465*^9, 
  3.690086366610509*^9}}],

Cell["\<\
each series is of a different color, so in following example we have 3 series \
and 2 values for (similarly for Bar3D)\
\>", "Item",
 CellChangeTimes->{{3.690086128900497*^9, 3.6900861912290454`*^9}, {
  3.6900862871108775`*^9, 3.6900863607729897`*^9}, {3.690086416678421*^9, 
  3.690086422754469*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"blist", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "200", ",", "300"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"400", ",", "500", ",", "600"}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.69008619384379*^9, 3.6900862169612093`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6900862191296515`*^9, 3.690086226074278*^9}, {
  3.6900863992514524`*^9, 3.690086427189429*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.5141499085923217, 0.}]}, {{}, {{{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{0.6343692870201096, 0.}, {1.5484460694698354`, 
               100.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{28.062167808299794`, 82.11861403928971}, {
              72.70502430261682, 109.78430159583573`}}],
            StatusArea[#, 100]& ,
            TagBoxNote->"100"],
           StyleBox["100", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[100, {}], "Tooltip"]& ]}, 
        {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{1.6343692870201096`, 0.}, {2.5484460694698354`, 
               200.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{86.59821998500274, 140.65466621599262`}, {
              36.175747009397895`, 109.78430159583573`}}],
            StatusArea[#, 200]& ,
            TagBoxNote->"200"],
           StyleBox["200", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[200, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{2.6343692870201094`, 0.}, {3.5484460694698354`, 
               300.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{145.13427216170567`, 
              199.1907183926956}, {-0.3535302838210157, 109.78430159583573`}}],
            StatusArea[#, 300]& ,
            TagBoxNote->"300"],
           StyleBox["300", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[300, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {
        {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{3.7312614259597807`, 0.}, {4.645338208409506, 
               400.}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{209.34200763889356`, 
              263.3984538698835}, {-36.882807577039955`, 
              109.78430159583573`}}],
            StatusArea[#, 400]& ,
            TagBoxNote->"400"],
           StyleBox["400", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[400, {}], "Tooltip"]& ]}, 
        {RGBColor[0.784, 0.47519999999999996`, 0.2], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{4.73126142595978, 0.}, {5.645338208409506, 500.}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{267.87805981559654`, 
              321.9345060465865}, {-73.41208487025887, 109.78430159583573`}}],
            StatusArea[#, 500]& ,
            TagBoxNote->"500"],
           StyleBox["500", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[500, {}], "Tooltip"]& ]}, 
        {RGBColor[0.4992, 0.5552, 0.8309304], EdgeForm[{Opacity[
         0.6579999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              
              RectangleBox[{5.73126142595978, 0.}, {6.645338208409506, 600.}, 
               "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{326.41411199229947`, 
              380.47055822328946`}, {-109.94136216347778`, 
              109.78430159583573`}}],
            StatusArea[#, 600]& ,
            TagBoxNote->"600"],
           StyleBox["600", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[600, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.5141499085923217, 0.}, {6.76796197440585, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.6343692870201096, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.6343692870201096, 0.}]}], 
        LineBox[{{6.645338208409506, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {6.645338208409506, 
           0.}]}], {{}, {}, {}, {}, {}, {}, {}, {}, {
          LineBox[{{3.5484460694698354`, 0.}, 
            Offset[{-1.102182119232618*^-15, -6.}, {3.5484460694698354`, 
             0.}]}], LineBox[{{3.731261425959781, 0.}, 
            Offset[{-1.102182119232618*^-15, -6.}, {3.731261425959781, 
             0.}]}]}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.5141499085923217, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{1.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.639853747714808, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {4.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{1.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {2.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0914076782449724`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3.639853747714808, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.008, 0}}, {4.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {5.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {6.188299817184643, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{
  3.6900862265335855`*^9, {3.6900864054899597`*^9, 3.6900864278098373`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Histograms", "Section",
 CellChangeTimes->{{3.6900870427714715`*^9, 3.6900870462037663`*^9}}],

Cell["\<\
histograms tell us the frequency of data, x-axis is value and y-axis is \
frequency.\
\>", "Item",
 CellChangeTimes->{{3.69008718163198*^9, 3.690087229576903*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "14", ",", "19", ",", "3", ",", "7", ",", "22", ",", "16", ",", 
    "14"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900870495509996`*^9, 3.6900870672009*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "14", ",", "19", ",", "3", ",", "7", ",", "22", ",", "16", ",", 
   "14"}], "}"}]], "Output",
 CellChangeTimes->{{3.6900870516023607`*^9, 3.6900870675201044`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.690087080798957*^9, 3.6900870845373325`*^9}, {
  3.690087131296259*^9, 3.690087154379843*^9}, {3.6900891971738567`*^9, 
  3.690089218891157*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
    Opacity[0.6649999999999999], Thickness[Small]}], {}, 
    {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], EdgeForm[{
     Opacity[0.6649999999999999], Thickness[Small]}], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{0., 0}, {10., 3}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{16.425800640512403`, 
          140.32247798238592`}, {-60.42604994827488, 106.28684442722334`}}],
        StatusArea[#, 3]& ,
        TagBoxNote->"3"],
       StyleBox["3", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[3, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{10., 0}, {20., 4}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{139.7724779823859, 
          263.66915532425946`}, {-115.8136814067743, 106.28684442722334`}}],
        StatusArea[#, 4]& ,
        TagBoxNote->"4"],
       StyleBox["4", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[4, {}], "Tooltip"]& ], 
     TagBox[
      TooltipBox[
       TagBox[
        DynamicBox[{
          FEPrivate`If[
           CurrentValue["MouseOver"], 
           EdgeForm[{
             GrayLevel[0.5], 
             AbsoluteThickness[1.5], 
             Opacity[0.66]}], {}, {}], 
          RectangleBox[{20., 0}, {30., 1}, "RoundingRadius" -> 0]},
         ImageSizeCache->{{263.1191553242594, 387.01583266613295`}, {
          50.34921296872393, 106.28684442722334`}}],
        StatusArea[#, 1]& ,
        TagBoxNote->"1"],
       StyleBox["1", {}, StripOnInput -> False]],
      Annotation[#, 
       Style[1, {}], "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-0.6, 0},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{0., 30.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.690087085279827*^9, {3.6900871328843193`*^9, 3.690087154857154*^9}}]
}, Open  ]],

Cell["\<\
one thing to that here 3 frequency if for [0..10) because 10 will be in next \
bucket.\
\>", "Item",
 CellChangeTimes->{{3.690087312662095*^9, 3.690087354632416*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scatter Plot", "Section",
 CellChangeTimes->{{3.690087412656469*^9, 3.6900874198606157`*^9}}],

Cell[CellGroupData[{

Cell["this is a simple plot which just plots some point in plan", "Item",
 CellChangeTimes->{{3.6900874264580145`*^9, 3.6900874487288837`*^9}}],

Cell["ListPlot[list] and ListPlot3D[list] can be used", "Item",
 CellChangeTimes->{{3.690087449988727*^9, 3.690087485002921*^9}, {
  3.690087645309656*^9, 3.6900876453156605`*^9}}],

Cell["\<\
here list contains all points in xy plane(if two values for each point)\
\[LineSeparator]if only one is given it will be considered as y value and X \
value will be taken as 1,2,3,5,.... and so on.\
\>", "Item",
 CellChangeTimes->{{3.690087449988727*^9, 3.690087485002921*^9}, {
   3.690087645309656*^9, 3.6900877643058896`*^9}, 3.6900878634900546`*^9, {
   3.6900896829894514`*^9, 3.6900897454850135`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "20", ",", "30", ",", "40", ",", "50"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900897225746636`*^9, 3.690089787634452*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 10.}, {2., 20.}, {3., 30.}, {4., 40.}, {5., 
    50.}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 0.}, {1., 10.}, {2., 
    20.}, {3., 30.}, {4., 40.}, {5., 50.}}, {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{6, 1}], 
       LineBox[{7, 2}], LineBox[{8, 3}], LineBox[{9, 4}], 
       LineBox[{10, 5}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{11, 12, 13, 14, 15}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 5.}, {0, 50.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900897369873514`*^9, 3.690089788094758*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"14", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.690087486642014*^9, 3.690087511494573*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6"}], "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.6900919158743725`*^9, 3.690091915910388*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"14", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6900919164377403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "alist", "]"}]], "Input",
 CellChangeTimes->{{3.690087623142211*^9, 3.690087627278961*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6900876276141863`*^9, 3.6900919193386755`*^9}]
}, Open  ]],

Cell["\<\
here size of points is very small so we can make them bigger using \
Properties, for this purpose we have \[OpenCurlyQuote]PointSize\
\[CloseCurlyQuote] Property and inside this we will set size using PointSize[]\
\>", "Item",
 CellChangeTimes->{{3.6900879055544696`*^9, 3.690087959813858*^9}, {
  3.6900879989653807`*^9, 3.6900880150182586`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "Large", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900879625987167`*^9, 3.6900879844074764`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[Large], 
     AbsoluteThickness[1.6], 
     PointBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6900879850218887`*^9, 3.690091931850795*^9}]
}, Open  ]],

Cell["\<\
we can also have points in 3d space giving 3 values to each point, but for \
this we have to use ListPlot3D[list] method\
\>", "Item",
 CellChangeTimes->{{3.690087867312601*^9, 3.6900878871101265`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"blist", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"14", ",", "5", ",", "12"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "7", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "12", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"11", ",", "6", ",", "6"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900877716105776`*^9, 3.6900878005417457`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "5", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "7", ",", "8"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "12", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"11", ",", "6", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.69008780122219*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", "blist", "]"}]], "Input",
 CellChangeTimes->{{3.6900878046254683`*^9, 3.6900878325970364`*^9}, {
  3.690088039449582*^9, 3.6900880897883415`*^9}, {3.6900919424928865`*^9, 
  3.6900919499236126`*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJxdVk2IHFUQntWDIEJ2J9PdMz2d+en5WbMkQYi5iIF3WclGT2ICBoVFSERh
jaAH9WJfRDAJIZGYrAcJ0fWw6k1X8dSgF0ERRS+uYOJJBFEv4kmtrvq+174u
Emrf9+rVq/qqXk2Pnzj78OnbWq3WK/L/9hblgDPdgb4bOmvoEfRiw47rOXQ3
1EXb9GgZONatyLTjOdxfJKbXZ8Bj6BT704Z/xHd9Etq1hqbLPMyjRB43x8AH
0LQjDjsHv6NRuM84isb5EnGX5I1xMf8+NM478Oh6wHG+2A8NPshvuQIdhX6F
h483dnc2dvtu7fJU/jHeIdZ97AMXHqrVzkbqZmrAvHOnZjs993p1bC33PPyr
0nUL/89LeLikdl13Vs9NPA8KX07cj3oP67bsdLkbu+Ma18zzcEzXsftE92se
LM4IcdY8PKMbHafH1shD2723LfLrzJ1Q2Yt7I3eyWn4/cdsqcchvyfxTr+38
EHqf51n1TdSxHHqeLQ/g7Av223X4dfs8z+F9medZ9Tr6oWz0fcm+5z54GgF3
fH/LiJv9Q//ot4L5Iz7hWXnbZl+xjivgje+TdWlbXX6bow6cAxHqO0Pdl2Cf
WJ2+mKLunAMpzk9Qd+DCs5b7ndzN9Q/WcYi+GqM/ERd5lnwWEIfZ5+j7Ae7h
3JlgnSFO8jFFn6V4N+wP5tOFv8S9uSnSQ7wyx776spK26buQt8y9MypYl3PP
xz/6nlLrxzvrOallu7Jo7+1l9hfnxtjOfZ3jXvZBbvY/zbx/5qP476h7Wc/d
ew9X0vF2ms9m5J6swp2Db5nDtNP9R+FX5qfl2zP9UOzj0PNnMCcc7vPzOXHq
7jnELXNVr93MwBP7d2x2h/vm/zzfG+3AS8H3wTlMzfnXD/FiEvLG8+v7PT8L
yOORqg5Rx/Ol72Nlyfgcxp4fO7dkdVzh+5zauznB/uDvT27+i722fyT1/Lyv
c6ttfo4PPM8nEYf5r3+H7L0ivnvGnk/yrvv38R1ntn46tv46knve7H2zLzin
yVti+6uc0z1bX2F/1XkdSx5//ptVfkcMffxrirM/6vgfUJz1zn38hnNe1vGf
O/TpLzfOxSEu8Zt95nln/K+pfTfExc+q2nM+13mZfRri4udGdXHOuPk7k7gL
ap+FuPh5W+1RDz9vE+DIs6j7zfyzL+v+/EvfP/u2njMvvlBJ4ztK8vvzj0o6
IS79eeCgyAecq/X7Pah4L8Sljk+pJCEu/fnulsgsCnG59+dbldTzXJXUcUvt
sxCXupt9L8QlnuFA5K0kxCWex05VEoW4xHPtDZEYc8r3YeYG6mcQ4tIn6uZU
FuIS51X1k4a4xPndt5U0+lziXNwjcpHx8Dszc3sUz0Jc7n1QpfFdKve+Wskd
3RCXez9Tgf+ynmOfK974juV3JueY/x0cuKP3V9INcbn3pap9/q5/H+n/ow8r
SUNc/GtfPdt4p+L/kDZQ4z2KH+2Trca7k35W+n/ouv8AixaUTQ==
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[
       GraphicsGroup3DBox[{
         Polygon3DBox[{{45, 1, 19}, {87, 55, 95}, {5, 3, 60}, {57, 31, 104}, {
          35, 2, 20}, {80, 50, 89}, {88, 56, 97}, {59, 42, 99}, {75, 39, 
          103}, {62, 24, 103}, {81, 49, 115}, {82, 50, 120}, {85, 54, 93}, {
          75, 40, 133}, {19, 18, 102}, {76, 44, 102}, {30, 1, 45}, {83, 51, 
          124}, {84, 53, 92}, {83, 52, 91}, {67, 33, 107}, {65, 32, 105}, {74,
           37, 125}, {60, 46, 5}, {88, 55, 133}, {70, 34, 111}, {77, 46, 
          104}, {12, 11, 91}, {77, 47, 6}, {41, 4, 56}, {79, 49, 8}, {82, 51, 
          90}, {78, 48, 7}, {11, 10, 90}, {13, 12, 92}, {10, 9, 89}, {86, 53, 
          131}, {14, 13, 94}, {15, 14, 96}, {18, 17, 101}, {84, 52, 128}, {16,
           15, 98}, {17, 16, 100}, {87, 54, 132}, {78, 47, 106}, {60, 3, 
          58}, {79, 48, 110}}], 
         Polygon3DBox[{{71, 70, 111, 112}, {41, 40, 25, 26}, {100, 99, 101, 
          17}, {69, 68, 108, 109}, {38, 37, 22, 23}, {6, 5, 46, 77}, {7, 6, 
          47, 78}, {68, 67, 107, 108}, {45, 44, 29, 30}, {9, 8, 49, 81}, {102,
           44, 45, 19}, {98, 97, 100, 16}, {76, 43, 28, 64}, {96, 95, 98, 
          15}, {94, 93, 96, 14}, {8, 7, 48, 79}, {43, 42, 27, 28}, {108, 107, 
          113, 114}, {74, 36, 21, 61}, {99, 42, 43, 101}, {126, 125, 129, 
          130}, {64, 29, 44, 76}, {125, 37, 38, 129}, {73, 72, 116, 117}, {
          119, 118, 123, 124}, {127, 126, 130, 131}, {131, 130, 85, 86}, {129,
           38, 39, 132}, {66, 65, 105, 106}, {112, 111, 118, 119}, {61, 22, 
          37, 74}, {113, 112, 119, 120}, {118, 117, 122, 123}, {123, 122, 127,
           128}, {109, 108, 114, 115}, {36, 35, 20, 21}, {86, 85, 93, 94}, {
          63, 27, 42, 59}, {122, 121, 126, 127}, {115, 114, 80, 81}, {72, 2, 
          35, 116}, {116, 35, 36, 121}, {117, 116, 121, 122}, {81, 80, 89, 
          9}}], Polygon3DBox[{{91, 52, 84, 92, 12}, {90, 51, 83, 91, 11}, {
          103, 24, 25, 40, 75}, {58, 57, 104, 46, 60}, {92, 53, 86, 94, 13}, {
          106, 105, 110, 48, 78}, {121, 36, 74, 125, 126}, {89, 50, 82, 90, 
          10}, {114, 113, 120, 50, 80}, {111, 34, 73, 117, 118}, {120, 119, 
          124, 51, 82}, {110, 109, 115, 49, 79}, {130, 129, 132, 54, 85}, {
          128, 127, 131, 53, 84}, {93, 54, 87, 95, 96}, {105, 32, 69, 109, 
          110}, {133, 40, 41, 56, 88}, {59, 4, 41, 26, 63}, {103, 39, 38, 23, 
          62}, {101, 43, 76, 102, 18}, {107, 33, 71, 112, 113}, {124, 123, 
          128, 52, 83}, {95, 55, 88, 97, 98}}], 
         Polygon3DBox[{{97, 56, 4, 59, 99, 100}, {104, 31, 66, 106, 47, 77}, {
          132, 39, 75, 133, 55, 87}}]}],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
     {GrayLevel[0], 
      Line3DBox[{19, 1, 30, 29, 64, 28, 27, 63, 26, 25, 24, 62, 23, 22, 61, 
       21, 20, 2, 72, 73, 34, 70, 71, 33, 67, 68, 69, 32, 65, 66, 31, 57, 58, 
       3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19}]}, 
     {GrayLevel[0.2], Line3DBox[{19, 102, 76, 64}], Line3DBox[{58, 60, 5}], 
      Line3DBox[{6, 77, 104, 57}], Line3DBox[{7, 78, 106, 66}], 
      Line3DBox[{8, 79, 110, 105, 65}], Line3DBox[{9, 81, 115, 109, 69}], 
      Line3DBox[{10, 89, 80, 114, 108, 68}], 
      Line3DBox[{11, 90, 82, 120, 113, 107, 67}], 
      Line3DBox[{12, 91, 83, 124, 119, 112, 71}], 
      Line3DBox[{13, 92, 84, 128, 123, 118, 111, 70}], 
      Line3DBox[{14, 94, 86, 131, 127, 122, 117, 73}], 
      Line3DBox[{15, 96, 93, 85, 130, 126, 121, 116, 72}], 
      Line3DBox[{16, 98, 95, 87, 132, 129, 125, 74, 61}], 
      Line3DBox[{17, 100, 97, 88, 133, 75, 103, 62}], 
      Line3DBox[{18, 101, 99, 59, 63}]}, 
     {GrayLevel[0.2], Line3DBox[{19, 45, 30}], 
      Line3DBox[{20, 35, 116, 117, 118, 119, 120, 50, 89, 9}], 
      Line3DBox[{5, 46, 104, 31}], Line3DBox[{6, 47, 106, 105, 32}], 
      Line3DBox[{7, 48, 110, 109, 108, 107, 33}], 
      Line3DBox[{8, 49, 115, 114, 113, 112, 111, 34}], 
      Line3DBox[{10, 90, 51, 124, 123, 122, 121, 36, 21}], 
      Line3DBox[{11, 91, 52, 128, 127, 126, 125, 37, 22}], 
      Line3DBox[{12, 92, 53, 131, 130, 129, 38, 23}], 
      Line3DBox[{13, 94, 93, 54, 132, 39, 103, 24}], 
      Line3DBox[{14, 96, 95, 55, 133, 40, 25}], 
      Line3DBox[{15, 98, 97, 56, 41, 26}], Line3DBox[{16, 100, 99, 42, 27}], 
      Line3DBox[{17, 101, 43, 28}], Line3DBox[{18, 102, 44, 29}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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

    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImageSize->{302.4030745468559, 127.418604874361},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{4., 14.}, {5., 12.}, {4., 12.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-0.11559929941755943`, -3.369779150708608, 0.28500048670789746`},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.6900919502168093`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["List Line Plot", "Section",
 CellChangeTimes->{{3.690089543931566*^9, 3.6900895510382757`*^9}, {
  3.690091854258773*^9, 3.690091856321153*^9}}],

Cell[CellGroupData[{

Cell["\<\
ListLinePlot[list] can be used to create a line plot insted of Point\
\>", "Item",
 CellChangeTimes->{{3.6900895564729*^9, 3.690089577228502*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a line \
through a list of values, assumed to correspond to \
\\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) coordinates 1, 2, \
\\!\\(\\*StyleBox[\\\"\[Ellipsis] \\\", \\\"TR\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"ListLinePlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"y\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots a line \
through specific \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\) positions. \\n\\!\\(\\*RowBox[{\\\
\"ListLinePlot\\\", \\\"[\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"list\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}], \\\"]\\\"}]\\) plots several lines. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ListLinePlot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690089584069062*^9},
 CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"{", 
   RowBox[{"0", ",", "10", ",", "5", ",", "15"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.690089600569929*^9, 3.690089671771979*^9}, {
  3.6900899474655695`*^9, 3.6900899759792423`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     LineBox[{{1., 0.}, {2., 10.}, {3., 5.}, {4., 15.}}]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 15.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.690089615729777*^9, 3.6900896569222965`*^9}, {
  3.6900899514832497`*^9, 3.6900899764715705`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "10", ",", "50", ",", "20"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900899815431776`*^9, 3.6900900013579307`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 0.}, {2., 10.}, {3., 50.}, {4., 20.}, {4., 
    0.}}, {{{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
       GraphicsGroupBox[PolygonBox[{{1, 5, 4, 3, 2}}]]}, {}, {}}, {{}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.019444444444444445`], AbsoluteThickness[1.6], 
       LineBox[{1, 2, 3, 4}]}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 50.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.69008999222029*^9, 3.690090001986344*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NOTE", "-", " ", 
  RowBox[{
  "for", " ", "PairedBarChart", " ", "see", " ", "video", " ", "and", " ", 
   "refrence"}]}]], "Code",
 CellChangeTimes->{{3.69008813559347*^9, 3.690088148108325*^9}, {
  3.690088187163744*^9, 3.6900881886247187`*^9}, {3.690089242856303*^9, 
  3.6900892461695104`*^9}}],

Cell[BoxData[
 RowBox[{"NOTE", "-", 
  RowBox[{
  "and", " ", "for", " ", "PairedBarChart", " ", "refrence", " ", "see", " ", 
   "video"}]}]], "Output",
 CellChangeTimes->{3.6902169259355607`*^9, 3.6902272928254776`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Using Chart Options", "Section",
 CellChangeTimes->{{3.6900882390733767`*^9, 3.6900882436958876`*^9}}],

Cell[CellGroupData[{

Cell["we can set different types of properties for charts.", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088278600077*^9}}],

Cell["\<\
for using different color than default we can use ChartStyle property for all \
charts.(BarChart,Histogram)\
\>", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088307892909*^9}, {
  3.6900890205423193`*^9, 3.690089025119371*^9}, {3.690089182426974*^9, 
  3.6900891881397705`*^9}, {3.690089266530939*^9, 3.6900892714041967`*^9}, {
  3.6900901905452285`*^9, 3.6900901905482297`*^9}}],

Cell["for Plots(ListPlot,ListLinePlot,Plot) we can use PlotStyle ", "Item",
 CellChangeTimes->{{3.690088245958395*^9, 3.690088307892909*^9}, {
  3.6900890205423193`*^9, 3.690089025119371*^9}, {3.690089182426974*^9, 
  3.6900891881397705`*^9}, {3.690089266530939*^9, 3.6900892714041967`*^9}, {
  3.6900901905452285`*^9, 3.6900902165624537`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"ChartStyle is an option for charting functions that specifies \
styles in which chart elements should be drawn.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ChartStyle"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900890099687195`*^9},
 CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"alist", "=", 
  RowBox[{"{", 
   RowBox[{"21", ",", "10", ",", "34", ",", "12"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6900883101145444`*^9, 3.690088319436754*^9}, {
  3.6900883746329584`*^9, 3.6900883909646354`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"21", ",", "10", ",", "34", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{
  3.690088319965105*^9, {3.690088376435151*^9, 3.690088391229806*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Mean", "[", "alist", "]"}]], "Input",
 NumberMarks->False],

Cell[BoxData[
 FractionBox["77", "4"]], "Output",
 CellChangeTimes->{3.6900891294587927`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Coloring ", "Subsection",
 CellChangeTimes->{{3.6900891342433877`*^9, 3.690089136501895*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Green", ",", "Yellow", ",", "Blue", ",", "Orange"}],
      "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900883211358943`*^9, 3.690088370024886*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[1, 0, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 21.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{22.175154179318778`, 
           106.09915347174865`}, {-25.577193217919557`, 112.51951695520117`}}],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 10.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{113.55305740382191`, 197.4770566962518}, {
           46.47108353942943, 112.5195169552012}}],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 34.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{204.93096062832504`, 
           288.85495992075494`}, {-110.72515665842282`, 112.51951695520118`}}],
         StatusArea[#, 34]& ,
         TagBoxNote->"34"],
        StyleBox["34", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[34, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 12.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{296.30886385282815`, 380.23286314525814`}, {
           33.371396856275055`, 112.51951695520117`}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5437956204379562, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}], 
        LineBox[{{4.456204379562044, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
           0.}]}], {{}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690088370655301*^9, 3.6900883930009837`*^9}}]
}, Open  ]],

Cell[TextData[{
 "if Colors are given then those colors will be used and ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " will not provide any colors, all colors will be provided cyclicly to all \
bars.it means if colors are less than bars then cyclically colors are proided."
}], "Item",
 CellChangeTimes->{{3.6900884242813377`*^9, 3.6900885127417145`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"ChartStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", "Yellow"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900888359285192`*^9, 3.690088934221509*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {Opacity[0], PointBox[{0.4655474452554744, 0.}]}, {{}, 
    {RGBColor[0.982864, 0.7431472, 0.3262672], EdgeForm[{Opacity[
     0.6719999999999999], Thickness[Small]}], 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{0.5437956204379562, 0.}, {1.4562043795620436`, 21.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{22.175154179318778`, 
           106.09915347174865`}, {-25.577193217919557`, 112.51951695520117`}}],
         StatusArea[#, 21]& ,
         TagBoxNote->"21"],
        StyleBox["21", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[21, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{1.543795620437956, 0.}, {2.4562043795620436`, 10.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{113.55305740382191`, 197.4770566962518}, {
           46.47108353942943, 112.5195169552012}}],
         StatusArea[#, 10]& ,
         TagBoxNote->"10"],
        StyleBox["10", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[10, {}], "Tooltip"]& ]}, 
     {RGBColor[0, 0, 1], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{2.543795620437956, 0.}, {3.4562043795620436`, 34.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{204.93096062832504`, 
           288.85495992075494`}, {-110.72515665842282`, 112.51951695520118`}}],
         StatusArea[#, 34]& ,
         TagBoxNote->"34"],
        StyleBox["34", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[34, {}], "Tooltip"]& ]}, 
     {RGBColor[1, 1, 0], EdgeForm[{Opacity[0.6719999999999999], Thickness[
      Small]}], 
      TagBox[
       TooltipBox[
        TagBox[
         DynamicBox[{
           FEPrivate`If[
            CurrentValue["MouseOver"], 
            EdgeForm[{
              GrayLevel[0.5], 
              AbsoluteThickness[1.5], 
              Opacity[0.66]}], {}, {}], 
           
           RectangleBox[{3.543795620437956, 0.}, {4.456204379562044, 12.}, 
            "RoundingRadius" -> 0]},
          
          ImageSizeCache->{{296.30886385282815`, 380.23286314525814`}, {
           33.371396856275055`, 112.51951695520117`}}],
         StatusArea[#, 12]& ,
         TagBoxNote->"12"],
        StyleBox["12", {}, StripOnInput -> False]],
       Annotation[#, 
        Style[12, {}], "Tooltip"]& ]}}, {}, {}}, {}, {}, 
   StyleBox[{
     {Thickness[Tiny], 
      LineBox[{{0.4655474452554744, 0.}, {4.536017518248175, 0.}}], 
      StyleBox[{}, "GraphicsLabel",
       StripOnInput->False]}, 
     StyleBox[{
       {Thickness[Tiny], 
        LineBox[{{0.5437956204379562, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {0.5437956204379562, 0.}]}], 
        LineBox[{{4.456204379562044, 0.}, 
          Offset[{-1.102182119232618*^-15, -6.}, {4.456204379562044, 
           0.}]}], {{}, {}, {}, {}, {}, {}}}, 
       StyleBox[{}, "GraphicsLabel",
        StripOnInput->False]}, "GraphicsTicks",
      StripOnInput->False]}, "GraphicsAxes",
    StripOnInput->False,
    Antialiasing->False]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4655474452554744, 0.},
  CoordinatesToolOptions:>{"DisplayFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& ), "CopiedValueFunction" -> ({
      Identity[
       Part[#, 1]], 
      Identity[
       Part[#, 2]]}& )},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {{{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}, {{0.9999999999999999, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {1.9999999999999998`, 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {3., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}, {4., 
       FormBox[
        InterpretationBox[
         StyleBox[
          GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> Baseline], 
          "CacheGraphics" -> False], 
         Spacer[0]], TraditionalForm], {0.004, 0}}}}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  PlotRange->{{All, All}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{None, Automatic}]], "Output",
 CellChangeTimes->{{3.690088864699892*^9, 3.690088871091153*^9}, 
   3.6900889346677976`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"15", ",", "5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"20", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"30", ",", "10"}], "}"}]}], "}"}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "only", " ", "one", " ", "color", " ", "can", " ", "be", " ", "used"}], 
   " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.69009022524023*^9, 3.690090344728485*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0, 0, 1], PointSize[0.012833333333333334`], AbsoluteThickness[
     1.6], PointBox[{{15., 5.}, {20., 4.}, {30., 10.}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{14.765625, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{15., 30.}, {0, 10.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.690090249009822*^9, 3.6900903326599226`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Filling", "Subsection",
 CellChangeTimes->{{3.6900891126525993`*^9, 3.690089119111904*^9}}],

Cell[CellGroupData[{

Cell["for ListPlot[] we have property \[OpenCurlyQuote]Filling\
\[CloseCurlyQuote] ", "Item",
 CellChangeTimes->{{3.6900888846749525`*^9, 3.6900888852053175`*^9}, {
   3.6900889397672105`*^9, 3.6900889570477886`*^9}, 3.6900890389899015`*^9, {
   3.690089285252372*^9, 3.6900892852583747`*^9}}],

Cell["it doesnot have ChartStyle.", "Item",
 CellChangeTimes->{{3.6900888846749525`*^9, 3.6900888852053175`*^9}, {
   3.6900889397672105`*^9, 3.6900889570477886`*^9}, 3.6900890389899015`*^9, {
   3.690089285252372*^9, 3.690089311647952*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"Filling is an option for ListPlot, Plot, Plot3D, and related \
functions that specifies what filling to add under points, curves, and \
surfaces. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Filling"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690088967274605*^9},
 CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"],

Cell["\<\
Filling could be \[OpenCurlyQuote]Axis\[CloseCurlyQuote], \
\[OpenCurlyQuote]Top\[CloseCurlyQuote], \[OpenCurlyQuote]Bottom\
\[CloseCurlyQuote], in Top axis comes from upperwards.\
\>", "Item",
 CellChangeTimes->{{3.690089802764624*^9, 3.690089879496373*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"alist", ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900884129908123`*^9, 3.69008841726567*^9}, {
  3.690088748595083*^9, 3.6900888103664865`*^9}, {3.6900891434195056`*^9, 
  3.690089163659684*^9}, {3.690089300314392*^9, 3.6900893177182274`*^9}, {
  3.690089829451853*^9, 3.6900898427548447`*^9}, {3.690089882061079*^9, 
  3.6900898951868286`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., 21.}, {2., 10.}, {3., 34.}, {4., 12.}, {1., 0.}, {
    2., 0.}, {3., 0.}, {4., 0.}, {1., 21.}, {2., 10.}, {3., 34.}, {4., 
    12.}}, {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{5, 1}], 
       LineBox[{6, 2}], LineBox[{7, 3}], LineBox[{8, 4}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.012833333333333334`], AbsoluteThickness[1.6], 
       PointBox[{9, 10, 11, 12}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 4.}, {0, 34.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900884136012173`*^9, 3.6900884177129593`*^9}, {
   3.6900887572218294`*^9, 3.690088810801778*^9}, {3.6900891541413403`*^9, 
   3.6900891647023797`*^9}, 3.6900893181465073`*^9, {3.690089827650652*^9, 
   3.6900898432221537`*^9}, {3.6900898901424685`*^9, 3.6900898959013047`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Legends", "Subsection",
 CellChangeTimes->{{3.690089353989502*^9, 3.690089354991167*^9}}],

Cell[CellGroupData[{

Cell["legends can be used in all charts and plots ", "Item",
 CellChangeTimes->{{3.690089357511839*^9, 3.6900893744568577`*^9}, {
  3.6900900662308145`*^9, 3.6900900662348156`*^9}, {3.6900917819250507`*^9, 
  3.6900917819290524`*^9}}],

Cell["Lables used to tell about whole Plot or chart", "Item",
 CellChangeTimes->{{3.6900927769082212`*^9, 3.6900927796230326`*^9}, {
  3.6900928146570606`*^9, 3.690092827907892*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot Legends and Labels", "Subsubsection",
 CellChangeTimes->{{3.690091795867342*^9, 3.6900917987892895`*^9}, {
  3.6900927724472566`*^9, 3.6900927745166287`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"PlotLegends is an option for plot functions that specifies \
what legends to use. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PlotLegends"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6900900777394857`*^9},
 CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"PlotLabel is an option for graphics functions that specifies \
an overall label for a plot. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/PlotLabel"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690092788998281*^9},
 CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]
}, Open  ]],

Cell["we can assign some string", "Item",
 CellChangeTimes->{{3.69009231173942*^9, 3.6900923177564335`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"100", ",", "20"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"110", ",", "40"}], "}"}]}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", "\"\<Points\>\"", "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900893763151035`*^9, 3.6900894911785564`*^9}, {
  3.690090118158925*^9, 3.6900901612531457`*^9}, {3.690090351661105*^9, 
  3.690090352252492*^9}, {3.690090390081068*^9, 3.690090407443009*^9}, {
  3.690091747444496*^9, 3.6900917797432003`*^9}, {3.690091824900454*^9, 
  3.69009183289279*^9}, {3.6900919820944824`*^9, 3.6900921337938595`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.012833333333333334`], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        PointBox[{{100., 20.}, {110., 40.}}]}, {}}}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {99.84375, 0}, 
     PlotRange -> {{100., 110.}, {0, 40.}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {99.84375, 0}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], Method -> {}, 
     PlotRange -> {{100., 110.}, {0, 40.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Points\""}, "PointLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.462], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                 ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                   None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                   DefaultBaseStyle -> {}, ButtonFunction :> 
                   With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0.368417, 0.506779, 0.709798], Editable -> False, 
                  Selectable -> False], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
             "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "False", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6900917756874886`*^9, 3.690091833580241*^9, {3.690091986959444*^9, 
   3.690092048941967*^9}, {3.6900920846897435`*^9, 3.690092098164607*^9}, 
   3.6900921341871223`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", "x", "]"}], ",", 
      RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Sin\>\"", ",", "\"\<Cos\>\"", ",", "\"\<Tan\>\""}], 
      "}"}]}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"third", " ", "is", " ", "not", " ", "there"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6900893472269907`*^9, 3.690089348376758*^9}, {
  3.6900923209526224`*^9, 3.690092372843342*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Sin\"", "\"Cos\"", "\"Tan\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6900923321790996`*^9, 3.690092353844492*^9}}]
}, Open  ]],

Cell["\[OpenCurlyQuote]Automatic\[CloseCurlyQuote] will assign some numbers \
to them ", "Item",
 CellChangeTimes->{{3.690092277248481*^9, 3.69009229592307*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6900921563238983`*^9, 3.690092268885913*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.690092261382902*^9, 3.69009226945028*^9}}]
}, Open  ]],

Cell["\<\
\[OpenCurlyQuote]Expressions\[CloseCurlyQuote] will automatically say the \
expression for that curve\
\>", "Item",
 CellChangeTimes->{{3.690092395602358*^9, 3.690092432691553*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690088598014834*^9, 3.6900886217694583`*^9}, 
   3.690089105828746*^9, {3.690092382356534*^9, 3.690092390236788*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-0.9999999597402991, 0.9999999584722877}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"sin", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.6900923907511234`*^9}]
}, Open  ]],

Cell["for Label we can provide Strings (for more see ref)", "Item",
 CellChangeTimes->{{3.6900929481328974`*^9, 3.6900929637959323`*^9}, {
  3.690093140121693*^9, 3.69009314785631*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Sin", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Sin and Cos Functions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690088598014834*^9, 3.6900886217694583`*^9}, 
   3.690089105828746*^9, {3.690092382356534*^9, 3.690092390236788*^9}, {
   3.6900928604860415`*^9, 3.690092892218716*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVmHk8VO8Xx2WdsUTWGZRmxlYiiijVPdEiUVmyb6FkiRISolDKXilr0mZJ
KuQrJU+iLNlSyFJkZ8xca5bE7/7+mXm9X+eZc55zzuece19Dc/YxPcXJwcGh
TXz8//vHlLEGB8ckJs37rlzJ8Df28XhO3FGBSSzTK8lZVvs39vwlx3iG5CQm
19juQ5L/jV05W/xop+ok5hpeMvz5Xx+2aYwifsFmEtPb9sjk16s+LKhv4M/Q
60nMDXRuhEn0YTLNl8q/uE9hbrt/2T0o/Ik5PH96KPnbNKateczs2Z0f2KNC
uwKBwTks8qRiqeLHOqzYkFcw8sMCZl7Xa69rn4L1k2VVMuP/YiwZjQRZ0yrU
LHYr9W7qCva1trqB6tuGPlmFXDF4wwG8Au/KjCt70ZrG3m5NPU4w7brbbzY0
iDZsb2rBDDjhXes264z5QbQ7tfyT4VFOCBsx7vxBHkIBp1JfOtlwQmD56QZV
tSE0/s80ItaXE5b1Qu0OBgyh72qfNw8+4oTP2KjqJu5hlJ34/NIdLi5o3V1l
4SM5gqr+pHlnkrlA79g+OwWlEdRnd9MlT5gLUvtWVJq0R5DMptPGSIYLejt3
cS9YjaDESjkaczsXYII+CflpI+jS9O1aPVcueBuUPXJTZhQZmV+Smq7mgpdT
zuwB0TF064G1+N16LqD8Mp7s3TiG2sd3rtNp4QLXuKLAZrUx5Hh1iT+0mwte
b9Ffc9NwDPm+CF4hT3MBOdJM49TVMZRCCh2iyXFDoKvxxvKJMTRYHl5scokb
Rt/ekPuvbBxtIrm8mg3lBlzlBJfk53HkbaZfkBzJDcj9SsaZ1nE0P8aV8zOB
G67lXG0fGh9H/FLX0tyzucEs8jrCZJhI/XzU1avfuME6QE3N6xITXVaIPVao
ygMXnaYZYSoTyGqrAF/Tdh4o3Ka2QUR7Am3bGV0xvpMHjthJZyXqTaBhoxuq
8gd5wGTTto1O1hPomF+kQLIDD5QxP1jqXJ9AtKqQmpAEHrj9edt8Tc8EWm74
G5p6lwfwS5O2R0cmUHt70I7/0nngSuHl31VTEyh6PPApnsMD5h+e7AjhZaGZ
df4Rzh944ONslhNtKwt9cjqLGUzxwKz0uwSdyyyU5THxx3WeB8x0gne9uM5C
QX6eL67+44GVWs480UQWUrvhvv4dmRdSNCLf5TxioeSXp/6q0nnh+BkDOc4a
FnJfsS8VM+OFIYOvhhcE2Ugo4+jW3te80OMsdks+mo3WxiD2nbe80KWi2MBK
ZCORIPUXBh944YClZ1BOMhuJW4mqFn3hhYy9Q/SJJ2wkK96++Vo/L6jOvD/w
toKNNsfaK6qI8AGoGK6cxtloS3DTUK8EH1ypPjagNcdGah7Y0yQZPqgJiyDN
LbHRNgOa/IoiHwgXfeHbz4ujndxDtK97+GBz4fJNeVkcGYR4rb/oyQedLho6
rP04MvT82aNyng8Wfne1VhzGkZHN0Yy+AD7Q5y8Mv3IUR8d11GUMw/lAIHoP
5bsljixnZyjrU/ngV7p45zt3HFkNuP74mskHJVTlbiFvHNm0tiVff0KcT8R7
j/niyOFVqeTkSz7g9loYfRyEo9NeweJVn/nAgN+oIiYaR2dsJ75dbOADz5iN
6fbxOPIwtL+zpZUP7EZ0PORu48hbGRO995MPchkpHb6pOPIf5BRxn+UD5Y0J
76xycBRpFy0gTCeBOVNNSe4DjloZIWtzlEjwsOmTye+PONrIPLsOUyVBH1o7
d+cTjsovmUj56JDg3fuLWfX1OJq9R2E0HyWBhcY9t8vfcaTnwK/oZk4Cn7OB
mlXtOEpUWFZetSbB523m5xZ/4GjL6161radIsJL6XF37J45Ofc3elRBMgv1C
l0rnB3H0OiVlj9JVEuSFR/d+GMYRp1M0oOsk0BGq9g4axVEm++xB/BYJXAIt
UQUTRxMljoejkklADaCEHWbhaNdlEyO5+ySYrWp+VM3GUbuAlumxXBJkBOmL
xU7hSP6b4omRAhKorX3i8GMaR75pFKuwYhKsN9AXkJjF0dpNy/YvK0gwxdV1
zfEPjuwmWU6HqknArC0yPTuPo2elvS69dST48zY21HMBRwcPVrkLt5FA843N
lM4SjpKESrxyukgQq3RWm/QXR/3fs32wPhK8in3fVUOwekaKb8cQCVq12F0X
l3EU6hLt78MkgYlknjblH44aNocE8k0R8T4/mMwlWHr6bPCDPyTouBbDs3mF
6HeZY6j2MpHfDtWAdIJLr5hcbV5Dhl4XY71/BPMa6Ee68ZFBdHe5+7FVHJkL
a0WtCpLhb5LJxC2CH7UrRieLkkFkfKKumuDJ+5S4rRQy/LTz5xwleO8p/sSa
9WRYV9J59y/BsVuWbzsyyHDTSSRyleCuGdbdeWUymFyQapwhWPldb0qCGhmy
c2bP/SA4IPxrupImGWbtS3wKCK4+XJWJdpLha4Z3nS/BoutKHlpiZGCL7AlV
JtjpR/YTfD8ZhIQOxDcR93/xICUnypAM+M2iRVeCl09HP5M7TgZdxbIPTKIe
hmohBaUnyOChmDTgTHDK3NlXx2yJ+H7XneuJeg6XOxaPOJEhP6trD51gzUiT
/8JOk+Fhb7+/B1H/8CP6ZVJeZJgXWOR/TPSrRVSr/OV5Mmg+Df33ZRFHG7oU
0aGLZKht7jEeIvrr9ZDysTeEDJ3mkctsov9k9eUa4RtkMKxLCfg293/9xV6j
xZNhunt9ZhKhnxbd9frbk8gwnK90Un+GuN+hvRUWWWQ4EdFT7j6Jo5DGpuAz
2US8KyqWvwl9Opo57gx6TgYt+UOJBwn9KjpeeX3/DRleFWT1d47hiH9IxPdl
BRlKN3X84yP0z/J4uLWymgzdgV/eMYj5eB3w8dlgCxnu8JrJy/cT8xfP/VBl
jAxO5TO1Bp2EP/G7DntwMhzIH5QeJOaRnKYge2yODHaz56hniXlteXow2XcN
P1T2itINmon7vL8RV0blh1t+jTH0asKfPvXIFzl+YBdmealUEv7q8kg/Ffjh
QnsCL70CR+zv9REc2/jhHq3e60cpkd+EYNAhQ37YFqa1w+MZ0V/f+9rWx/kh
nqwg9jsbR/oLqnMeFvxwZp/pmwOPify4j52Ld+YHZZ4Klx/pRL1kbp1uC+KH
R8kJwYxYwt9DmvzIFX6Q6+xoJ90g7qdU9HvhOj94pm0Q7Ikg7rP9m53sHX64
X3x0rVEwjkoMJcxc8vlhYJdYqSmxX1Nanor4F/ID2ahPKceV8Gexo+l6KT84
qpKjxhxxtN/Z8vCzKn5o6nWW0bEg9t+lVGyqmx/+qqswl/cR+eWu3xImKAC3
+d5/UJLE0aJY1pSyqAD0Kz848EEER9xh9NJWKQFgX8Z2HhbAkcwJJT1FhgBk
jfx3cQsH8bxYo2HVuFMAEhepWTpjbPTQen+kjJsAmOB/t3i8YaPn1Z8Pf/IS
gJQtbvP8RWz0ZuthYR9fAbC14nXKyGejJp6jaR8vC0DLmwbKrUw2Wiq0fOWe
JAD8ezMjP0awkTm/Z09pJXEfUi5mcISNHP1ZD0/WCMDXqJErs/ps5NHn4ybQ
KACVedeSb+1moyv/+U07/BCAtOJis0xVNipwDiXx4gKQUGJ1nlOYjXjf3dI0
lxWEvTxPsxeaWKjM803sZIAgOJ4oelamz0I2dzsFxS8LwsfFCNGPO1loqWIp
VjtCEL4/EDlQRrwf7BbdExeaIAhbN/DR/WRYqOJNZZxgriBMrpi5yE5PoGqe
L/HKnYKg3VDrsjtjAjU9+JnopCsE8/F+HiMDTORdtyISuU8I3KK2O7R1MJHw
jNytnENCYPViHavoCxMdP+h8i20mBN2X6hZ2FzPRt4nhWyFeQrBge+d23FUm
+rFz8nbKfSG4mWyhp0S8Xw1847zbsioE7syzVF+9cdTS9sSqg2ctnLU5v/hY
cxyVdxyU/SWwFsYFopc+K46je93Rj5lSa8HSJjisj38cGQ6IFvGqE7y7xNe5
dQwVTdObdzuthdjD2YJ5DmPoyjp9ct6HtXAr9dvWYK9RJHss4vLVq8JAEt4Z
tsFxGKnvkDq8MUoYWs50zPAcG0YH1ueLo1hhGKp7f6p/7zDyZrbmLycLg2nh
/pNBG4bRhyh618UXwmAtnZKs9HMIuX6o3OHdLQxn2pskQq2GUDuFI7BAWgTe
PsFEThwi3s+j92qk+YmAn0i96U2+fuSA3Zl/pr0O3PkpNxmnOtGtVPnyctY6
IDkNK13VakR+n+O+8xSLwpl5pfktux6jX8vr7Ev9xKARHWPamFdhuj9aB9w3
icPcGtPP05nfMYPrnhVmLHEILMv9vaa6FzPohOS9TyTgEk3jLCtxEHub5joo
kCMBjyRdSsUfDWJb7G5odOZJQLBkxW+N4kFMpLf5y4WXEjBMtS8xbhvEOgcd
OPLeSsBddytvfuoQ5jEZ4i72VQLSBrNGEzOHsFi+Mt3RfxLw0ueFVOrDYWyl
tudGCYckvLDMiPQqHMbORXO0h3NJwu+fk02alcOYuZDBufVkSZjY3tnzuG8Y
Wy/W8cRUXBLsijbz/t0wgr3YMCf0frMkrLOVHbqeOoK1aGn03bKUBG1flRd9
10axOIsn/Bk2kpBsXDQVeHcUM7wopZVtLwknNjVzcj0dxarf/Lv51kUSduIs
94mqUaxUt377gI8knL0Qbiq2ZgzL3OcSpXmDiIdsf+UFjmFexnfVOt5Ightf
mUKF3Ti2yZtk/fudJOQqc9mGeYxjw/HBEcwKSbAd5DumETiOObWc/LFaLQl7
XXPM3O6MY2ZmauHKXyVhyX1xRrpuHNtlXdN2aUwSXtfNfUvVYGJ8pxZDZKWl
4MSuZM6Pf5iYVeCp/GlZKSgoajpYtWYCy4352lkrJwWii4f8/xOcwAyL8nb4
K0iBjgBHsC99AotdtZ5sVJcCmUHxW2A8gYmmvXUJOyQFyrRiXfWsCUy2Odiw
34/4fd384526LMyrfyTwzUUpWOKfFvbez8Lez5nlxAdJQa/9aNUdYxbmILuF
W/cKwX/cp4ocWdhD9573d2KkgPzh0wAWwcIUufdoHHgkBTveBBxMrGFhGjtX
pHKbpeAp3eA2az8ba8gvY7xrlQKhrfKHeo3Y2JkN/lub2qTALyZfApmzsUyu
iYOz3VKwJliFZeDKxgSbOv1hVAoGLxvxXgtnY6POJd9+cFDgd2Abb/o7NhbZ
dq6XyUUBzqqzmNdHNiZnsIW5wkuBvdJgpFLHxixUH3MqCFFguOh5q287G6ua
T9Q4T6XABr7XCkqTRLxYrwTyNgrUCx7Lom3EsV2rSumyWhT4sLf7RJMCjrWd
H8jeqkOB5v+YT86o4JigpU3Fib0UUJJ14zy9A8cu0QxYDw0pUIdqnSKO4Jh4
Etfia2MKuMtuuZFxHMde8SLu2uMUUIT6rY9P4NgwU0uWbUGBn/6/ZwIdccz8
P8aRXS4UiLzOv3rAF8cmlXstjE9TYOXO9Y76AByLSU9zdnKnQOjhl9Q9wTj2
8cq6oOs+FBhZSmgZi8Ax9SOrua3BFPi1pbTSJQnHBPq6eD2TKBB3hOtBRyGO
NVRYvPZJpoB4Vos3vQTH4u+3nvRLo8DF1Cl12zc4JmpbX345iwImzv2R9ypw
jNJe5pv4nAJOJc92adbjWNdrrY13X1JgIX/Bk92AY+l3ChtTiyiw+kwo/F4z
jm0wyVN+/IYCWWrRFq++45h8Q8qvkmoKkKeXA/l/Efk+E499W0OBH889crf3
4VjOzcSdqJ4Cb+9lFxr249jmQzeSalso8KmqxUhvGMcmFLj1Gr9R4Ft1SA99
FMcKuK/gX9spIODru29qjMj340XD7h4KmIooR1mycGw6a2a+t5cC/GELp3A2
jhWH+Twd7KeAzb3tkv6TOLZjjxsHe5QC1+6FjByewbEFmYGCaSYFfJpYvKmz
OFa25GA7z6bAknHibNscju1+Y/Efxxzx++KH2tQFHFu51+rCs0DEq/0cI7eI
Y8j/6Dr+vxSYjLiZL7aEY1fM6yvWrlCgY9jh3hzBetsPeomtoULAsc9HPv3F
MW7Rj1QKNxXMgg5/CV/GsU+Te2pk+ahwLDxEXO0fjl1vLvOj8VOhv++fYg3B
Bi+06IpCVLDwDuA8uoJj/HGFzZtFqDB9MjX7I8FfPFUvbxWjwhZTeTGFVRyL
NczbrClJhQbN3kP+BB/dpPBDh0oFIceM/cUEi5AeXtsjS4WSazrkXoK/Dstu
15Ojgsr7tLsLBN/+lNJ3kE6Fa5dejxHv+5j5E/H4IwpUSIy/yjNHsGREou5x
ZSq0biWNdRDccVJwzFyFClGTVkm5BKfAjXvWalRIrorncyPYRo57v4MGYf/b
pCdGsOxK2JSzJhVOGR4+WEDc/2fP30w3bSrkVWqLahGc+e6ikdcuKki3/sp+
RuTvlDazeG4PFbKOxHGvJZh+ySfHH6iwwT5DxZGo34Al0zxInwo6ST6ymUR9
n+xw4ww7SAXGT7+OeqL+pyUGXkYcpoJ9uLz9ENEv5VkH+xtGVDi/Zc0LFtHP
sdYu/rhjVMj+nVw/MI9jXomtp+6doIKbta17KtH/ypOHpNysqLDxceNaH0If
ktvLa7VtqSAyrNqnSeinsu2pSqcTFbxeqpFvEfqSzJH+medChbil9c5KOOEv
MCE+6DQVcmpSxgoIfUrKXJqS8aLCz8fyUTHjhH2C9WjCmwqWilWZ/YS+K987
m78/T4UqEdLophHC7mRU6nCRCraKf0RvDhD2p3KXH4ZTIfyb+uDNbsLfxSQ1
32tUqNFLfeTcSZw3IPfp3aDC7uQTaSodhJ05rTcYR4WM3Vq74lsJu/pnklIq
FRynNO3u1RL+1ui+nU+ngrvhM56pT8T5by89azOpwE2TmNatIuz+qU3uT6hQ
cEQ99dF7wv7OK+n5SyoE/Zs5VEzsE6/Y3wcuF1HBQNRCPfEFcd7eYt64hAqd
inpu9vmEnQNs8LdU+OUkWVP7hLAfENu47TMVgqNnQwbuEfaWsvzSHiqYDCsa
bw4k7A/V7G/0UoHlhLEE/Yh4Fx6vte6ngsLjnwu9PoRdIu780ggV/FQXbSzd
CLutk/aeGSr87gq+HkPs08oh3qqPZGmoE/PyFdiKY86SX0xaBKXh6bO126I2
4RjnoYS+n8LSkGd0tX6SQcxnrtTKgoQ0/DEevh1HIfaph/LOrXRpsOj37GVx
EIwffpm+SxqWsrsvGjWxMeeNa/fm7ZGGtd0Kzjk1bIzTpLXhP5CG33/1HSY/
sDG9Ipvxrwel4f1KfrpRMRv76OepQDKTBpeveulqycTzZjE23c9TGqDb7XiG
LRtz3WyyOdxbGkpypfd3mbExbluJsoTz0hBVJBnHSzwP95ffb392URpOFmlo
bN7NxqpDX6z7HSENOkIK+zNlCOZqiTLOkIYAcYXaPR0s7JOQmJ9iozQcWj07
f3kfC1tQb+HlaJGGNF9GzU4dFrbFPC61s1UaAlsqKofVWFhSGh+K/SENvGn3
DcVlWZir0jJ5ZkAaJmXsNCrmJjDOfUMP0JI0dFw+m2mSPYGBX+kXK2UZuFzV
/SNtmYn5Jfs5bFORgVdCRyqvTTGx3LcaUwJqMuAecDHIeZiJiax5Lom2y8Dz
A8/9p5qZWG9c1kkFTAbE9qVsPf2IiYXm3JyfOiED6beD617uZ2LlXbaMmAgZ
EB5Lq2WFjmOSHp2WFtdlICh27J+D7zh2btEilnZTBlIfhBhVnRrH5Cmmc6Xx
MkCPFDl6ymgciz1hUDOYKgPPfAoThanjmF2LpufeVzLwds72HuerMWz5k1Dx
VI8MBGu/XEr4PorpFiI9qx2yIF/lc/vz4jDW9yDW3GmnLGwXig/9NTqMRcZb
nz6zWxZyBVb3jXUMY02eMzcD9WRBsrHdv6NkGHNSVPqaclQWWqqnHkudH8au
p8c7dp4m7JZDn7cODWGt1+xDbJJlYeYAEuatHsTcbf6W2C3IwnKj42yKQz8W
k3tByblgPeRX5Kjaz3RhdnVVE5nnN0Dsl6pMrLEJoyUcf9WjLAfnlo6/D3V9
hZ11WBgI75GDX2Nr3WQulCNNjnKtV8c2wkmUOvqJ6xvKZ6QFPni2ERpVpYQ3
RvxEQequpzYL0YCj4XKb7vgA+hA/f7JgLQ0GhJvK5P8NIF5WtIO6CA1aTtds
4xQZRHfyCi13iNFAuedBaZrWIHpOXz2sR6VBSENlH1wZRL/E09RsFGiQf8T9
lJXYENJfbJ6/uYcGm4Un93mqDyPBj7rRY2dpcCrjbBOuP4oyUr/cMPWhwcZN
AZsfmI6iLedto96do8H7/g0+eidHkfHG4Mi4CzTYH6V71zV0FMWHvg3VuESD
394O0ZJvRpGw7s4LlyKJ+K1KXZs3jSHR1zvsyOk02OQU5zy4Zhw9ivls45tB
gxtcJHUu4XG0zcXCuvs+DdZH6ZAlZMeRmWiARUEWDb5frq5et2McJZ0rOW6S
TQMT2+3Pvd3HkYSq5oHUQho8O7Ph5avGcUTJ1lDbVEsDnvItfptjmeioqnv6
qzoaPGU82Ho3hYkiXmeRdL7Q4J+jYD3+hInYH4UHDjbRIJV3NdTvPRNV97KS
Xb/TYGeyF+0di4nOU5+tyeqjgXVtl7L2kQlUH0tvk1ykwVSOwN53ixOIQ9xG
L3OJBq/PFSWJc7OQVvqtlwrLNHi0tW/Obi0LZeVxRGuu0sDcrAW9pbNQwOdf
e0156KBPU2vIM2QhBkd6btw6Ojw7uPDmeDILhVwQC+HeTIe/5KaIdAYbLV84
xDyvQocuy+w8UGGjYL9gm94tdGg/J3W+fRsbBfkP6LzdSodhacu2b/vYKPBi
8ZyPFh2ydMg3JRzZ6EKwmU830GHZfMq18B4bTQdH/TLQo4OXcteQw3028g15
Z/yfPh1ojjublh+z0bnLjC23DtJBF0ZqyIVs5B02M3rQiA4dYUmcZ+rZyCPi
jnORJR1kyzgati2x0XhEzVc5azq43tPbN7TKRu6RfyHOhg7i/+qYUTw4OnPN
Re6MPR0W32u13RfB0emo7T3rXeiQkiSdL6CII+eYbyduetOBnOPCzzLGUX8M
36c/PnRYI6UQ99AURydjdTVdz9OB8wSvzEFLHDnFPRbF/Ogw4ff2qKMTjhwS
LjTPXqID5fartq/ncWR9R+yw0zU6bExpCiq5haOJOqWbn6/TARM5tcnyLo5C
OXbXbblBhwKpoJNjKTh6ctb18GI0HfaSNrn1PsAR+1DJ4duJdAhSiUhdV4Cj
K6F1Nxdu0eF2X6Wr9isciZX8rHO4QwdStsVz42Ic6dB5DVXu0WHOLPTZkTIc
hS9bGFan0yH4utmuuGociW/3jN58nw7b+9PQjhoc5biH1Sdm0qF0bK6kpQ5H
De05hvYP6fD5TPtkWxOOJAsXDP9kE+dnL15W+IGj3BHBGLtcOmirOribduFI
dwPty8c8OmQr/yv36SHqEXP4SMJzOjRMGCQH9+Ho2am0I8pFdEiTXV7uGMHR
7owXMfHFdFDzshS4MYaj5taPX2Zf04GqtXhJmYmjWYx5pLKUDupmo3672Di6
HrAao1RGhzOdr1fzcRxRC8Qa4t7SoV7384jQFI72Su82snlPB8tN/I2PZnDU
cvx47IcKOggzFmvbZnHkEuXaoPiBDrntT+UW53D0532gYFwlHTY/vNoiOI+j
G7OxRjMf6dB6g6dbZAFH0ioPY62rCX97ivbyLOKo4GRJA/pEB0WKyN8xglub
fhrF1tJBa0ExJPIvjlx5pmOn6+jwg1MKdi3jaF6Xt9HqCx2YexVt+wiO9pUW
Qg10iLHmagz4hyPZPDVjhSY6FD1zvfuP4Be9enExzXSw1yK99lvB0T5Jy8ap
Fjrk5RQr9xD83chTyKqVDjM2mjPbVwm9RoQZV3wj9GbmKBZC8ELZnTj5NjoU
6627+ZrgmMmcxuh2OgyGq5n/JHiDUrnQVAfRH5nHfn8IfmXfYmzZSYfXyHn8
//+/6yUNxr3vooNL45mSRYLb6hcaGT3E+aNv2gYIPrNGaG30TzoILNoeqSB4
SZt2dPIXoRfV05I3Cd624eeyXx8d3LlPP9lDsAd3av7ib8Jf2afKXuL+j8bN
bUIHiHl1e+ftQ3BXiwiZa4gO1l+i8ieI/EVLG0qjhunwFgsItPz///H3b5wW
HCX2y4eetpdE/cIj9kvcGiP0Oy5TPUfUu8ydo1qCSQe+hUz9TQRPHiv3TZug
w7HqbnPDJRwp7wikybHpYFxnumBF9MtJVrPlMU7El0tQO0H0N4VzMlR5ijgf
priwl+h/y2i+asE0HY7sKTsh+QdHpGa3Ho1ZOuwxnj7UTegnML13p+48MZ/6
OizVaaJ+V9NH0QIdSugtD99N4mjUzTJ5/xIdhvTl2TsIfVppNs8a/yPqNxVj
8ofQc6J0zOPWFULf5mEeu8ZxVMtxyNSSgwGnHrM3eI3iSLux4qUTFwP4TPwd
UgZx5F0c5DDEzYDjJpXM2/04yk7dIeTBywDhq9OU/8+T5OkXHhfIDDio2W8p
Tszbn5X7CteFGaDMaxXr0YojtSHr7/zrGDBzcXB3azOhly8SEQmiDPB5L5+i
1Iij9uS4vhQJBlTPTZqnE/Nfon45PV+GAYMfrCRy3hH7SXKnofp6BtQGdhmE
vMGR/L/ZhdcbGMBqCdfESnCUVOdlUUFjwJJsnW78Cxz5Odut+6pEnK/g2WeS
haPnBpQPJzYxoPuIkVdSBo4G1b57d21mgGRok+MnYr+Z/z3SMKDKgC4Oq9zJ
RBxpJulG/dnOgFnl6FWvKzia+ST9TwaI/Npkx1ZsCf8K3wqu72OAey/XiwvE
vv0TGeMwpceAw7bv3/wg9vGS/jL6fIAB8bOs3AuHccT58Wf4+SMMYG5j7mBp
4UikIotUY8GAyHZTnSkBHN1eb12mYcWApCdjVzx5iX14eZ1HhjUDrK2Wtds5
cCS1O/zLeTsGZK9vXQ6ZY6MNb13iZZ0Z4FSSoSHyi422/Kco7nuWAfne8oPH
nrPRC4ne6h5vBtAFSvxbn7KRun+y/6FzDKi7vyv7wAM22q5J6pC9wICTwqZT
/26x0a6isdSaQAYsX3wQ918AGx1+8VxufSQDbrwyHzHcw0ans7ep1KYxgG2w
b46KWOi75ll++wwGiNQ7vSkvYaF9VTljU/eJ++knjBg9ZyHZPtlcmYcMeKCH
HmqlslArlU/BJ4cBBkfDVDf5stDeuO4Nkq8ZUJ+2TMrcyEKSfpGiro0M8KQW
2k34TKBITjS10MQAapUWbuA6gaYSF1viWgg9RDZ8uGM1gRoKvBNKvzGgUiRy
7yxMoPARK0GBLgaE7vh64bfIBGLbqPIWDTNg74ZCtwsFTGQ35jZ0cJQBk8yF
86VZTFR38VF19xihh333tcbvMNGTJKkIHhaRj78AWTaIiWya1nBYzzDgqL5B
VeEBJqq1293LmmXAcOd0kJcOE2kxAyrC/xD1pWioSqowkQhpIuT5IgN2KTc/
2iHCRJfvKdrt+8sA2dblgAJOJhqXP6nbvkz4r7N2E5sbR1bF6dKeKwzAPdxC
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{2., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotLabel->FormBox["\"Sin and Cos Functions\"", TraditionalForm],
  PlotRange->{{1, 10}, {-0.9999999597402991, 0.9999999584722877}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900928758662972`*^9, 3.690092892540925*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6900928517022657`*^9, 3.6900928547753057`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Chart Labels and Legends", "Subsubsection",
 CellChangeTimes->{{3.690092568847359*^9, 3.6900925764964666`*^9}, {
  3.6900927205519514`*^9, 3.690092722312117*^9}}],

Cell[CellGroupData[{

Cell["chart legends are used for charts", "Item",
 CellChangeTimes->{{3.690092577569179*^9, 3.6900925835261526`*^9}, {
  3.690092726788099*^9, 3.6900927267911*^9}}],

Cell["only String can be used here", "Item",
 CellChangeTimes->{{3.690092577569179*^9, 3.6900925835261526`*^9}, {
  3.690092726788099*^9, 3.6900927367766285`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"ChartLegends is an option for charting functions that \
specifies what legends should be used for chart elements. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/ChartLegends"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690092590536192*^9},
 CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "3", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "2"}], "}"}]}], "}"}], ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}], ",", 
   RowBox[{"ChartLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<b\>\"", ",", "\"\<c\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.690092607096937*^9, 3.690092711071629*^9}, {
  3.6900927420561447`*^9, 3.6900927462169185`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{
      Opacity[0], 
      PointBox[{0.47103574702108164`, 0.}]}, {{}, {{{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{0.6333638863428048, 0.}, {1.5499541704857929`, 
                 1.}, "RoundingRadius" -> 0]}], StatusArea[#, 1]& , 
              TagBoxNote -> "1"], 
             StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{1.6333638863428048`, 0.}, {2.549954170485793, 
                 2.}, "RoundingRadius" -> 0]}], StatusArea[#, 2]& , 
              TagBoxNote -> "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{2.633363886342805, 0.}, {3.549954170485793, 3.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 3]& , TagBoxNote -> 
              "3"], 
             StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{3.733272227314391, 0.}, {4.649862511457378, 1.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 1]& , TagBoxNote -> 
              "1"], 
             StyleBox["1", {}, StripOnInput -> False]], Annotation[#, 
             Style[1, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{4.73327222731439, 0.}, {5.649862511457378, 3.}, 
                 "RoundingRadius" -> 0]}], StatusArea[#, 3]& , TagBoxNote -> 
              "3"], 
             StyleBox["3", {}, StripOnInput -> False]], Annotation[#, 
             Style[3, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.4992, 0.5552, 0.8309304]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{5.73327222731439, 0.}, {6.649862511457378, 2.}, 
                 "RoundingRadius" -> 0]}], StatusArea[#, 2]& , TagBoxNote -> 
              "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}}}, {}, {}}, {{}, {{}, {{
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.982864, 0.7431472, 0.3262672]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{6.833180568285976, 0.}, {7.749770852428965, 5.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 5]& , TagBoxNote -> 
              "5"], 
             StyleBox["5", {}, StripOnInput -> False]], Annotation[#, 
             Style[5, {}], "Tooltip"]& ]}, {
           Directive[
            EdgeForm[
             Directive[
              Thickness[Small], 
              Opacity[0.637]]], 
            RGBColor[0.784, 0.47519999999999996`, 0.2]], 
           TagBox[
            TooltipBox[
             TagBox[
              DynamicBox[{
                FEPrivate`If[
                 CurrentValue["MouseOver"], 
                 EdgeForm[{
                   GrayLevel[0.5], 
                   AbsoluteThickness[1.5], 
                   Opacity[0.66]}], {}, {}], 
                
                RectangleBox[{7.833180568285976, 0.}, {8.749770852428965, 2.},
                  "RoundingRadius" -> 0]}], StatusArea[#, 2]& , TagBoxNote -> 
              "2"], 
             StyleBox["2", {}, StripOnInput -> False]], Annotation[#, 
             Style[2, {}], "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {
      StyleBox[{Antialiasing -> False, {
         Directive[
          Thickness[Tiny]], {
          LineBox[{{0.47103574702108164`, 0.}, {8.91534555453712, 0.}}]}, 
         StyleBox[{}, "GraphicsLabel", StripOnInput -> False]}, 
        StyleBox[{{
           Directive[
            Thickness[Tiny]], 
           LineBox[{{0.6333638863428048, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {0.6333638863428048, 
              0.}]}], 
           LineBox[{{8.749770852428963, 0.}, 
             
             Offset[{-1.102182119232618*^-15, -6.}, {8.749770852428963, 
              0.}]}], {{}, {}, {}, {
             LineBox[{{1.5499541704857926`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.5499541704857926`, 
                0.}]}], 
             LineBox[{{1.6333638863428046`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {1.6333638863428046`, 
                0.}]}], 
             LineBox[{{2.549954170485793, 0.}, 
               Offset[{-7.347880794884119*^-16, -4.}, {2.549954170485793, 
                0.}]}], 
             LineBox[{{2.6333638863428046`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {2.6333638863428046`, 
                0.}]}]}, {}, {}, {}, {
             LineBox[{{4.6498625114573775`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.6498625114573775`, 
                0.}]}], 
             LineBox[{{4.733272227314389, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {4.733272227314389, 
                0.}]}], 
             LineBox[{{5.6498625114573775`, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.6498625114573775`, 
                0.}]}], 
             LineBox[{{5.733272227314389, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {5.733272227314389, 
                0.}]}]}, {}, {}, {
             LineBox[{{7.749770852428964, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.749770852428964, 
                0.}]}], 
             LineBox[{{7.833180568285975, 0.}, 
               
               Offset[{-7.347880794884119*^-16, -4.}, {7.833180568285975, 
                0.}]}]}, {
             LineBox[{{3.549954170485792, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.549954170485792, 
                0.}]}], 
             LineBox[{{3.73327222731439, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {3.73327222731439, 
                0.}]}], 
             LineBox[{{6.6498625114573775`, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.6498625114573775`, 
                0.}]}], 
             LineBox[{{6.833180568285975, 0.}, 
               
               Offset[{-1.102182119232618*^-15, -6.}, {6.833180568285975, 
                0.}]}]}}}, 
          StyleBox[{
            Directive[
             Thickness[Tiny]], 
            Directive[
             Thickness[Tiny]], 
            Directive[], {
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {1.0916590284142988`, 0.}], {
              0, 1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {2.091659028414299, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"c\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {3.0916590284142984`, 0.}], {
              0, 1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {4.191567369385885, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {5.191567369385884, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"c\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {6.191567369385884, 0.}], {0,
               1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"a\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {7.29147571035747, 0.}], {0, 
              1}, Automatic, {1, 0}], 
             InsetBox[
              FormBox["\"b\"", TraditionalForm], 
              Offset[{0., -1.9999999999999998`}, {8.29147571035747, 0.}], {0, 
              1}, Automatic, {1, 0}]}}, "GraphicsLabel", StripOnInput -> 
           False]}, "GraphicsTicks", StripOnInput -> False]}, "GraphicsAxes", 
       StripOnInput -> False]}}, {
    AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {False, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {0.47103574702108164`, 0.}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Identity[
          Part[#, 1]], 
         Identity[
          Part[#, 2]]}& )}, FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {{{1.0916590284142988`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {1.0916590284142988`, 
          FormBox["\"a\"", TraditionalForm], 0}, {2.091659028414299, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2.091659028414299, 
          FormBox["\"b\"", TraditionalForm], 0}, {3.0916590284142993`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0916590284142993`, 
          FormBox["\"c\"", TraditionalForm], 0}, {3.641613198900092, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {4.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {4.191567369385885, 
          FormBox["\"a\"", TraditionalForm], 0}, {5.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {5.191567369385885, 
          FormBox["\"b\"", TraditionalForm], 0}, {6.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.191567369385885, 
          FormBox["\"c\"", TraditionalForm], 0}, {6.741521539871677, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {7.291475710357471, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {7.291475710357471, 
          FormBox["\"a\"", TraditionalForm], 0}, {8.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {8.29147571035747, 
          FormBox["\"b\"", TraditionalForm], 0}}, {{1.0916590284142988`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {2.091659028414299, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.0916590284142993`, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {3.641613198900092, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {4.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {5.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.191567369385885, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {6.741521539871677, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.008, 0}}, {7.291475710357471, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}, {8.29147571035747, 
          FormBox[
           InterpretationBox[
            StyleBox[
             
             GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
              Baseline], "CacheGraphics" -> False], 
            Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}}, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {None, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"a\"", "\"b\"", "\"c\""}, "SwatchLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          Directive[], 
          Directive[], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[1]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3328, 0.37013333333333337`, 0.5539536], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", "None", "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"Automatic", ",", "Automatic", ",", "Automatic"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"Directive", "[", "]"}], ",", 
                 RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6900926404770007`*^9, {3.6900926841470737`*^9, 3.6900927116560125`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plotting Functions", "Section",
 CellChangeTimes->{{3.6900932425947537`*^9, 3.690093248202975*^9}}],

Cell[CellGroupData[{

Cell["Plot[] function can be used for this purpose", "Item",
 CellChangeTimes->{{3.690093260784915*^9, 3.6900932714900627`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\"f\
\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \
\\\"TI\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) generates a plot of \
\!\(\*StyleBox[\\\"f\\\", \\\"TI\\\"]\) as a function of \!\(\*StyleBox[\\\"x\
\\\", \\\"TI\\\"]\) from \!\(\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]]\) to \
\!\(\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"f\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"min\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) plots several functions \
\!\(\*SubscriptBox[StyleBox[\\\"f\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \
\\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Plot\\\", \\\"[\\\", RowBox[{StyleBox[\\\
\"\[Ellipsis]\\\", \\\"TR\\\"], \\\",\\\", RowBox[{RowBox[{\\\"{\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"}\\\"}], \\\"\[Element]\\\", StyleBox[\\\
\"reg\\\", \\\"TI\\\"]}]}], \\\"]\\\"}]\) takes the variable \
\!\(\*StyleBox[\\\"x\\\", \\\"TI\\\"]\) to be in the geometric region \
\!\(\*StyleBox[\\\"reg\\\", \\\"TI\\\"]\).\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Plot"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690093279411276*^9},
 CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "2"}], "+", 
    RowBox[{"2", " ", "x"}], "+", "1"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690093775158005*^9, 3.690093807339102*^9}}],

Cell[BoxData[
 GraphicsBox[GraphicsComplexBox[CompressedData["
1:eJw1VHsw1AkA3mJRkXAeu9m1/Oo4IpvIVre/D5dHnuWVx2+RVjhyHne5lPI4
ryS1OhU9rtP7aKYQPWSi5NlVV+5cXdnNymtaNpGWvW7m+ma++eab+b6/vpnP
dGvSZuF8Go3m+4n/6YnMrWrcbfv5T1tLE2k0GZmx6dvIEZN2UpKt9rRj4D25
4ENFe4JNHykO0Rj6rVVJJt/dWzyaIiEdePQrH6tVYVMlelRbM0TG1GNv/twC
DPjEGr90lJEpDyVndXhLUM7MY/0SKSdnex1ZziV64KU0XFHpek/++b1VQ0+u
IVp6K/ySzGdIU6FjTF/LUnCL5/hGHrPkxYSp9hI6B27StS9tg2lI6371qj7H
DIPW9Rvejc5DaQnPzWjecmQoCu1u7VIBqzYg6N1Rc6jrvIkLsKQj3jtuTlZm
CXo33W3RbTVE9ggnHuVZ42NPdcLhZA34HtGcCkuxxUBwDYPNXgh5+kHzxbar
4FSwI/FB9SK4rqxljEjscGSuYYFLhBbGPhb4XHtsjzDjFq/n8sUQjqh2OtSt
gWaz1ahZ4BL4DN/fVPmMB6H9mcmQFTqoFxXpD6qux87M9M2cSR1UOVW4csz4
+GlY9KSnRxfx6zXeljkBXpbaFzSP68E5MqEzONYJB6odmr2ivkCQMHiGKXJG
h/+vijSePrhvbCatxS5o7k4qXqFigGH1nlqL5RtwNT4LXS8M8Ea5bF1iiSvY
nqTjjlpDSHkRW1IVbnBRhuec2m2EqYk1exRhHtj27M5EQyADBfyrfd+83gh+
VnZdFIeJVu3h6d5wLxxOGr+pOcjEKlsXzq1eb4j3nZWealqKymOPw+/t8cWI
sHHb3Xxj+LdxIsQFfpAl6qp3R7FQ7Bwi+S5uE2o8OhUx1mz02uucobAZ0lhb
B5VJNkIzLGNmDf3BvNwnyu82gf6hKP9I9QDkRKac6fbkoMzs/MPJkQBMKRgH
PBs5eMad6/ccCoTFzfJjHctM4SLfd79uMAj20fd8dQpNMXF8NtCkLxjNlfpG
XZOmSPNrvp0r3QKLZv0inzAzdJxkxnpLQ+BNH2U9bjJDvOpzvfGBUMj+ft3S
bklAKy9Ru5UWjqTKA3qFBwn0V5rveqhFoUn+5QelkoAP22pMSQrQH1VjMGbS
SDqzk88ne8pJA/fQvNY2AmqSC7pm5yhUZ6/OkZlcJJf7LdR8XjFOOk/Iu85d
/tQ3tRC0hVAYPtFMiiWf8uKL5S8nKLi2InzK5BhJiFfO/tApI7e0QVZ+gkBi
r6HuHTsKtFSt6CdPCfwTyshI66Lwx4NU4/FxAlnpobHRDAF2uoUspnMKyZih
9AGWUEa+5g5mlf5MgN9QsbKVQ2H/i2vvOnsIaLAoW/dGChF2zJqhYQKhVplx
bDUBPATdRdPTBPa088tqVgjwl3dRCofzI3lUUVS3fZWMtNx+o0NTRMDgErQ9
DCn8rpv/tXsngWJlf1jtFQpVsWPvhYMEVqvJ12YqKJSITj9JmySQe/qyowYh
gOpXM067FQQS5HoZQQ4CnAwdXRvMiSP14w+utmTIyK55y95uPEQgTOKpV6xL
IbVaFpXXTsCK+4I+comCm0rw0qoBAko76fWaKQpcm4XTV+UEoruYp+zZApxr
iY65MUMggO0UlM0VIKqklMWfI9Dkfn2+1ToBPv8Z7X983vOz/xcsmi+Z
   "], {{{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.2], EdgeForm[None], 
      GraphicsGroupBox[
       PolygonBox[{{1, 78, 79, 50, 77, 70, 76, 64, 69, 75, 59, 63, 68, 74, 55,
         58, 62, 67, 73, 52, 54, 57, 61, 66, 72, 49, 48, 47, 46, 45, 44, 43, 
        42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 
        25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 
        7, 6, 5, 4, 3, 2, 51, 53, 56, 60, 65, 71}}]]}, {}, {}}, {{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[{1, 71, 65, 60, 56, 53, 51, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
        12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 
       29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46,
        47, 48, 49, 72, 66, 61, 57, 54, 52, 73, 67, 62, 58, 55, 74, 68, 63, 
       59, 75, 69, 64, 76, 70, 77, 50}]}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, "AxesInFront" -> True},
  PlotRange->{{0, 10}, {0., 120.99999551020412`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6900937926118355`*^9, 3.690093808109221*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690093820682423*^9, 3.690093820722416*^9}}],

Cell["we can plot multiple functions givings list of expressions", "Item",
 CellChangeTimes->{{3.6900938478415923`*^9, 3.690093867034545*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", "x", "]"}], ",", 
     RowBox[{"Cos", "[", "x", "]"}], ",", 
     RowBox[{"Tan", "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", "\"\<Expressions\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6900938735305433`*^9, 3.6900939415052414`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
jE+NRfYWbUTZrvrpxUUF1GrTTkt2bSP+B6xRhXQ=
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
zoyMo0/72hdXVxmwLquw4nnnOPofJHCbBw==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1:eJwBoQJe/SFib1JlAgAAACkAAAACAAAA2PFNMQAA8D9anKMFJev4P8JQp41O
C/A/l87eiwoS+T+srwDqnBbwPwDFWZRGOfk/gG2zojkt8D+8AsVYx4j5Pynp
GBRzWvA/LyJNXBEs+j964OP25bTwP/hMVlMMhfs/ZD89UzTA8D9sdMXeA7L7
P06elq+Cy/A/ULUt8mnf+z8iXEloH+LwP4gJpNiIO/w/yteu2VgP8T+ZPxvq
Rfn8PxvPebzLafE/PUmDHYOM/j8GLtMYGnXxP0qBiPpPwf4/8IwsdWiA8T+9
efYKrfb+P8RK3y0Fl/E/xHVq9SFj/z9sxkSfPsTxP+0CKdOgIQBAvL0PgrEe
8j9JW6VCcxEBQKYcad7/KfI/vIBYfgUxAUCQe8I6TjXyP6YhZi74UAFAZDl1
8+pL8j9WyIRsBpIBQA212mQkefI/I6MpsP0YAkBerKVHl9PyPyeHFEBAPANA
c4g8Gdnf8j/qlNeGHGYDQIhk0+oa7PI/RKALdpWQA0CyHAGOngTzP+BUew5s
5wNABo1c1KU18z+SLfIYGp0EQBtp86XnQfM/U41A2UjMBEAwRYp3KU7zP0iq
sAI1/ARAWv23Gq1m8z+5he2VWF4FQK9tE2G0l/M/Gt3qE1ssBkDESaoy9qPz
P3OJbnMCYgZA2iVBBDiw8z+rRbTDkZgGQATebqe7yPM/PeUSKYEIB0BYTsrt
wvnzP1CEPaBe9AdAAC+BetFb9D/56/G70gIKQBULGEwTaPQ/7d+0vG9KCkAq
564dVXT0PxV7tud4kwpAVJ/cwNiM9D/X9Sdt/SkLQKgPOAfgvfQ/1IeE7ypq
DEC9687YIcr0Px/T+xKCvgxA0sdlqmPW9D+Rlv+NrhQNQHw306NL4/Q/RY5e
T3JyDUDVszlK
        "]], 
       LineBox[CompressedData["
1:eJwVlXs41Pkfxb8zY4Yx1++klFVkly6bS1nFunzerYQSTZRLyS3WCpUQkdy2
QSqRoqstLLkUidqV71dIukiRS4gQMZp1KURjfn5/nOf8cZ7nPOev11npeWiX
NxXDsMwF/d+XSBPcz+6TonHNXD/vNA65RE+zKSxEigKHJkXjXWzSTK6nKDtG
ivpvnW49ncAmfdozTjedkSL9b1pCsQGbvB/NtlydK0U79zvHkeks0uH15KO2
VimidCvutPdVJCNziq7Q+qWoMvr9s7/UFcns8N/Ddf+TokETj8XCd0xycmXn
LyL5eSRrMZnKEzLJ1KDHBRsN59G68rpj+nYK5KtF5zPTM+fRHd2ImZAoBrm1
VEc0nj2ProTcN7KwYZCVO18E77g7j9o6Xl7sUGGQt8/I76TXzyOtJ38w0D90
8pR8FCPkyzziqu53jqXQSbM5v6MOdjIUWhK9PqaYRt7PVPC46yJD3uw57wen
aOQ6w1xbto8MrQnFzoa50UiVkA9raiNliLM32TBBQCO/Shx79W/LkH2H7G1G
FJXcc+RmbiIVgzs/Fkw5+VPIVDhybZMCBrrlMamj2ynkSx5c+MjBwIA5oNb/
M4XcUtwds3kZBsKMq2njoxi5QbzU9ZsuBtyoQo7nUYzkep9b9IcrBi7MG1u3
q8uIOqfIaKsHGARtiXF0lM0RFweH1x+uwuDHb4WJmS/nCJ9gx/5LtRho43Ms
96tzhELKhq1DTRiE5r6ZPGw8R9jUf2KdGsbgqY0X6X1ylmgx2H2pRoUCB0tm
9btVvxE5NY+txOoUiLP8khcwMUOECvVmBasooDZ0NNjr6QyxNIDl6qlPgdfV
kqKwkBliX3a1BsWGAn2/73izomWa6BfoFJudoMBdbVJN9eYUUZZ1xc0nbqFf
dOafXSemiHgdJn42kQJw3T+l3WmK0No2cLQ7nQIm0702L/lThF/MZaPIYgp8
R8adxvFfiYn/GHUPeygwoq1UuSXsC0F52dP5y29USNT2/q3g7ASxQr+xCVlR
4cx4vqp/0ARhkllZt82WCs4HFGWueyaIUO/MO+4uVHh1Y9bzzYoJYkS6Ky45
iAqsQbuB0ZJxokXnydqBm1TwsjUN8OsdI3JTCsPTaDQQJOgekCuXEDVTlwOv
M2lwmT/+b7lIQvTuS/TK5y3k+ilZBc4S4oc1PjuIH2hw7N8Qhsv8ZyKlWm2l
WJ8GCvXNF8u2fSbCJ1Kf/naABivDd1fWSMSEjUO48kQtDULHNq545zZMnL/h
rJT+jAa+AcUeBsbDROuIEW7YRINV1XEWD5cME24xs4pRnTQwb2sXGjV+IoKK
I+aZEzTgmFiH8dAnIkMh6uNKNTnoDfI8RawaIgYqY+8Jw+XAcUSlixR8JE5o
JtuVaNPhT41TjYVmHwgnXZZ8oz4dgk/WGGqrfSA2GCVVjRjRwZhq4Fwv6yUG
bRK0f9pKhxfc8iLL6l7CLjiedWk/HehOpe5HLHqJlTWR9ZHn6IDdv5vvkf2e
qHMPQFbjdHj/JYJ3fPodwblqq9tTxoCSz9diFOVbiPh9SSyehgIkDmCwSYkk
mHrf63kJTDDoOb1HlJSPJHnL151kswCS+Hjr5lfo4cEHyWOhbFijKTLJsetC
LukdbKUTbPD/Yu9+JKkLzVbNJm+KY4Ndne8r77ouZCIwPRN1jg3Wf6/Y0WDc
jaoeVJ9h57HBrVNLR7T2PaqlPz+7uoMNsbcF6RoKvajxRneKuzEHpuV1jyzH
+lBgwzw/fjMHGsYiwqPU+xBvUu3835YcqDVjls1BH9q51fO8xJ4D9oECyfbY
PtQ8Ong+0p8DNc9DP25n9KN2o7HUjGscONWQtZSvNID6m6npTTIO9BURDizr
QdT0Ntupjc6FodzUn0f8B1Fl21bV9ywuFMQOfZWkDKKLnUm3xMpc6H1t9P1g
xyDa1i8oZehxoaWPZoD8h1DphMYrE3cuZJsOFeVnfkLRuDkzn+TCkvTXm5uX
iFHAoo8v7jzhgmxFrZodiJHLYlFK+QsuFN4/7Yz5idEvy54r17ZzQTyhZUav
EqMhdXutnjEuWLaOv8j3HUW2el7mi1fywEKYpPn56Wekahd3IiaGB1o9V2LW
uo4hvY3K1uoiHsiMG27/GjyGLJYXKBHJPGBI7JD/6TEUKH5T8P0SD4TXYn82
+GcMkSKNd8eKeeCbd+Gj77JxdICs3hjYyYM6uoXTvffjqHUpFlakwgc1o0cR
jIRJ5M5+1h25nA8bhcvWqmZPohFZmrmNOh8ci3Ye9SQnkWxwFU+syYflabQt
cd8m0er7drmr1/OBYT7ivyrwCzouvNFyy5IPOtxFpuc8vqIVSWbrLwfzoV/5
09za0Gk02eUYnHuMD50m+Nyjq9Poqe6RitLjfAh2UF6eVzONgt7eMn0ezYd7
Luy1IsEMeqLO3PY9mQ9GuywvXSqbQYEVzZ77c/igaF+a6MCaReaKn3P88vhw
ysmtSNFwFi11ZQyHFvChoVJIX+89ix5TjQ6dK+HD35lrmt+Ss2iJ7fUI8hEf
WjP2vSg/MYeqBnwvaLTygXJwsWkZT4rSNsW26XTwgRTmNPlskSLfpCsqxl18
yNPOWloULkUCvcYs+z4+FH4pSpN9lCKfCP2ieAkfUt8QF1lPFn5MMF83yMDh
uf5EmIk9Bv0HlJmTTBwmwlJufQrC4EGFno2MjUOzQnfeTCoGnq5eb5QX4WD6
WbTbpgWD8ryn763UcAi90vxaupcC+1Ha9O1NODRW1FpfjqFCfXyOWdyvONQY
Bmp8y6GC3rOKP/ea4vBoV8y+18+oQNndtYhtjsOerAvaM4tpkO2nqRdgi8Ne
/TsSv9IFTt3ddMxCiEN7TqBC77sF7n21rlrusLB3ndvkAE0OrKIDbRqdcShv
d+AVOMqBOL3CV9cbByZj9KqIQQeHzoY78r44rAWnvo4FblWqd031+OHQ2mls
2e5Bh7MF2J8ph3Hwfdz8aJigw4Zq67/GI3Dw6Bkda49nQNhoZ8e9VBzkzsRO
629UgA/rJerJ6TioOtBdTh5WgG3HMN8DGTi41mZvelagAD9QNaeUruPgs7QK
P67JhCrlQEFoPg5PrIZOCrQUYZVrtLNtIQ4/qVw9uPoPRUi5mZqldQeHYKtR
q8giRfDQrtBpK8PhoU7FV+qvLJAzx7Ybkjjgh+RGsr3YEJAgSOXX4NBSpTFH
lrCh9eVPHZ/qcNAPvHb+EIUDiSN3375pwMHi7H67oCAO/A+a/WKS
        "]], 
       LineBox[CompressedData["
1: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
4pOzALbEuu48dowD/wP0RI46
        "]], 
       LineBox[CompressedData["
1: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
        "]], 
       LineBox[{{1.5697683999510592`, 3.680882091591942}, {
        1.569780314353465, -3.6969707805590066`}}], 
       LineBox[{{4.71114644518174, 3.680882091591942}, {
        4.711159739514526, -3.6969707805590066`}}], 
       LineBox[{{7.85465839562941, 3.680882091591942}, {
        7.85467139451763, -3.6969707805590066`}}]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {2., 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{1, 10}, {-3.6969707805590066`, 3.680882091591942}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"sin", "(", "x", ")"}], 
       RowBox[{"cos", "(", "x", ")"}], 
       RowBox[{"tan", "(", "x", ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6900939272803*^9, 3.690093944615713*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[" Creating Interactive and Animated  Visualizations ", "Chapter",
 CellChangeTimes->{{3.6902161860573416`*^9, 3.690216211828116*^9}, 
   3.6902165048805532`*^9}],

Cell[CellGroupData[{

Cell["Creating CDF file", "Section",
 CellChangeTimes->{{3.6902162881758585`*^9, 3.690216294963372*^9}}],

Cell[CellGroupData[{

Cell["\<\
 cdf(computable document formate ) is made  for users who do not have whole \
mathematica, they could also see their content.\
\>", "Item",
 CellChangeTimes->{{3.690216336518723*^9, 3.690216392405645*^9}}],

Cell[TextData[{
 "go to",
 StyleBox[" file>export>webembedded/standalone ", "Code"],
 "\[LineSeparator]now you can choose to export entire document or only \
selected(if you have selected). "
}], "Item",
 CellChangeTimes->{{3.6902164353566914`*^9, 3.690216491239493*^9}, {
  3.690216588831706*^9, 3.69021661860524*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Manipulationg input values for an expression", "Section",
 CellChangeTimes->{{3.6902168649638963`*^9, 3.690216896306241*^9}}],

Cell[CellGroupData[{

Cell[" for manipulating values we use Manipulate[] function", "Item",
 CellChangeTimes->{{3.690216897916314*^9, 3.6902169140991616`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\) generates \
a version of \!\(\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\) with controls added \
to allow interactive manipulation of the value of \!\(\*StyleBox[\\\"u\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) allows the value of \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to vary between \
\!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\) and \!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\) in steps \!\(\*StyleBox[\\\"du\\\", \
\\\"TI\\\"]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"init\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\) takes the initial value of \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to be \
\!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"init\\\", \\\
\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \
\\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"init\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\
\", \\\"TI\\\"], StyleBox[\\\"lbl\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \
\\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \
\\\"]\\\"}]\) labels the controls for \!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) \
with \!\(\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"lbl\\\", \\\"TI\\\"]]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\
\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\) allows \
\!\(\*StyleBox[\\\"u\\\", \\\"TI\\\"]\) to take on discrete values \
\!\(\*RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\) provides controls to manipulate \
each of the \!\(\*RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \
\\\"TR\\\"]}]\). \\n\!\(\*RowBox[{\\\"Manipulate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \\\"TI\\\"], StyleBox[\\\"u\\\", \
\\\"TI\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \
\\\"}\\\"}]}], \\\",\\\", RowBox[{SubscriptBox[StyleBox[\\\"c\\\", \
\\\"TI\\\"], StyleBox[\\\"v\\\", \\\"TI\\\"]], \\\"\[Rule]\\\", RowBox[{\\\"{\
\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\) links the controls to the \
specified controllers on an external device.\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Manipulate"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902169298771815`*^9},
 CellTags->"Info-562778dd-e1af-41c8-99f3-a4833404956e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Manipulate", "[", 
  RowBox[{"expr", ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", "umin", ",", "umax"}], "}"}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{
  "now", " ", "expression", " ", "could", " ", "be", " ", "anything", " ", 
   "plot"}], ",", "graph", ",", 
  RowBox[{"function", " ", 
   RowBox[{"etc", "."}]}]}]}], "Code",
 CellChangeTimes->{{3.69021777825837*^9, 3.6902178210432405`*^9}},
 EmphasizeSyntaxErrors->True],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`u$$ = $CellContext`umin, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`u$$], $CellContext`umin, $CellContext`umax}}, 
    Typeset`size$$ = {32., {3., 6.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`u$199787$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`u$$ = $CellContext`umin}, 
      "ControllerVariables" :> {
        Hold[$CellContext`u$$, $CellContext`u$199787$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> $CellContext`expr, 
      "Specifications" :> {{$CellContext`u$$, $CellContext`umin, \
$CellContext`umax}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{286., {55., 62.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.6902272928704853`*^9}]
}, Open  ]],

Cell["example 1 - value for sin[x] function from 1 to 20", "Item",
 CellChangeTimes->{{3.6902169719317026`*^9, 3.690216988181703*^9}, {
  3.690217028596558*^9, 3.6902170319207644`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690216989902845*^9, 3.6902170126317186`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`x$$ = 9.69, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`x$$], 1, 10}}, Typeset`size$$ = {73., {0., 9.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`x$2479$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`x$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`x$$, $CellContext`x$2479$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Sin[$CellContext`x$$], 
      "Specifications" :> {{$CellContext`x$$, 1, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{284., {55., 62.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.690217013552331*^9}]
}, Open  ]],

Cell["example 2 - plot for sin[x] for 1 to 20", "Item",
 CellChangeTimes->{{3.69021703640775*^9, 3.6902170525510063`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"a", " ", "x"}]}], ")"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "2"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902170539079056`*^9, 3.6902171086355453`*^9}, {
   3.690217211608612*^9, 3.690217268554761*^9}, {3.690217300345007*^9, 
   3.6902173349771194`*^9}, {3.6902173684235525`*^9, 3.690217394733965*^9}, {
   3.690217445373146*^9, 3.6902174715790925`*^9}, 3.69021761463721*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`a$$ = 1.3960000000000001`, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`a$$], 0, 2}}, Typeset`size$$ = {396., {116., 120.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`a$40742$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`a$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`a$$, $CellContext`a$40742$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`x (
          1 + $CellContext`a$$ $CellContext`x)], {$CellContext`x, 0, 6}], 
      "Specifications" :> {{$CellContext`a$$, 0, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {165., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.690217072231812*^9, 3.6902171090067935`*^9}, {
   3.690217222491991*^9, 3.690217268941018*^9}, {3.6902174459095035`*^9, 
   3.6902174726247873`*^9}, 3.690217616053151*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"x", "+", "y"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902176263359857`*^9, 3.6902176690747337`*^9}, 
   3.690218008759323*^9}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`y$$ = 0, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`y$$], 0, 10}}, Typeset`size$$ = {396., {116., 120.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`y$62715$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`y$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`y$$, $CellContext`y$62715$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Sin[$CellContext`x + $CellContext`y$$], {$CellContext`x, 0, 10}], 
      "Specifications" :> {{$CellContext`y$$, 0, 10}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{451., {165., 172.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.690217650644956*^9, 3.690217670042385*^9}, 
   3.690218005004821*^9}]
}, Open  ]],

Cell["\<\
 here we can think of as we are manipulationg x of Sin[x] as  in Sin[x+y] , x \
needs to be given in \[LineSeparator]Plot function so we can manipulate y.\
\[LineSeparator]\
\>", "Item",
 CellChangeTimes->{{3.69021769127201*^9, 3.6902177631727047`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Factor", "[", 
     RowBox[{
      RowBox[{
       InterpretationBox["x",
        ToExpression["x"]], "^", "n"}], "+", "1"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "10", ",", "2"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"here", " ", "2", " ", "is", " ", "step"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902178481485806`*^9, 3.6902178830831814`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 10, 2}}, Typeset`size$$ = {183., {3., 12.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$50007$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$50007$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Factor[ToExpression["x"]^$CellContext`n$$ + 1], 
      "Specifications" :> {{$CellContext`n$$, 1, 10, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{286., {55., 62.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.6902178369000998`*^9, 3.690217889145208*^9}}]
}, Open  ]],

Cell[" we can  manipulate many values at a time", "Item",
 CellChangeTimes->{{3.690218029054241*^9, 3.6902180410492177`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", "3"}], "-", 
      RowBox[{"a", "  ", 
       RowBox[{"x", "^", "2"}]}], "+", "b"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "15"}], ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "10", ",", "1000"}], "}"}], ","}], "]"}]], "Input",
 CellChangeTimes->{{3.690218043332735*^9, 3.6902180784393797`*^9}, {
  3.690218123360338*^9, 3.6902181782943115`*^9}, {3.6902182107885857`*^9, 
  3.6902182700866327`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Manipulate", "::", "vsform"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Manipulate argument \[NoBreak]\\!\\(Null\\)\[NoBreak] does \
not have the correct form for a variable specification. \\!\\(\\*ButtonBox[\\\
\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/Manipulate\\\", ButtonNote -> \
\\\"Manipulate::vsform\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.690218270628992*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "3"], "-", 
      RowBox[{"a", " ", 
       SuperscriptBox["x", "2"]}], "+", "b"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "6"}], ",", "6"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"-", "15"}], ",", "25"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "10", ",", "1000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690218285541911*^9, 3.6902182859781914`*^9}}],

Cell[BoxData[
 RowBox[{
  TagBox[
   StyleBox[
    DynamicModuleBox[{$CellContext`a$$ = -0.06725388696278856, \
$CellContext`b$$ = 875.0915964373906, Typeset`show$$ = True, 
     Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
     Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
     "\"untitled\"", Typeset`specs$$ = {{
       Hold[$CellContext`a$$], -15, 25}, {
       Hold[$CellContext`b$$], 10, 1000}}, Typeset`size$$ = {
     396., {128., 133.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
     Typeset`skipInitDone$$ = True, $CellContext`a$80570$$ = 
     0, $CellContext`b$80571$$ = 0}, 
     DynamicBox[Manipulate`ManipulateBoxes[
      1, StandardForm, 
       "Variables" :> {$CellContext`a$$ = -15, $CellContext`b$$ = 10}, 
       "ControllerVariables" :> {
         Hold[$CellContext`a$$, $CellContext`a$80570$$, 0], 
         Hold[$CellContext`b$$, $CellContext`b$80571$$, 0]}, 
       "OtherVariables" :> {
        Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
         Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
         Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
         Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> 
       Plot[$CellContext`x^3 - $CellContext`a$$ $CellContext`x^2 + \
$CellContext`b$$, {$CellContext`x, -6, 6}], 
       "Specifications" :> {{$CellContext`a$$, -15, 25}, {$CellContext`b$$, 
          10, 1000}}, "Options" :> {}, "DefaultOptions" :> {}],
      ImageSizeCache->{451., {191., 198.}},
      SingleEvaluation->True],
     Deinitialization:>None,
     DynamicModuleValues:>{},
     SynchronousInitialization->True,
     UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
     UnsavedVariables:>{Typeset`initDone$$},
     UntrackedVariables:>{Typeset`size$$}], "Manipulate",
    Deployed->True,
    StripOnInput->False],
   Manipulate`InterpretManipulate[1]], "   "}]], "Input",
 CellChangeTimes->{{3.690218302242296*^9, 3.690218303137888*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Animating Result in Mathematic", "Section",
 CellChangeTimes->{{3.6902183674004498`*^9, 3.6902183816038857`*^9}}],

Cell[CellGroupData[{

Cell[" Animate[] is used for Animate  in mathematica", "Item",
 CellChangeTimes->{{3.690218383052021*^9, 3.690218405879717*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
an animation of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) in which \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) varies continuously from \
\\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]\\) to \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"du\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) takes \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) to vary in steps \
\\!\\(\\*StyleBox[\\\"du\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Animate\
\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"u\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
makes \\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) take on discrete values \\!\
\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"u\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\), \[Ellipsis]. \
\\n\\!\\(\\*RowBox[{\\\"Animate\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"u\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", RowBox[{\
\\\"{\\\", RowBox[{StyleBox[\\\"v\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) varies all the variables \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\), \\!\\(\\*StyleBox[\\\"v\\\", \
\\\"TI\\\"]\\), \[Ellipsis]. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Animate"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902184102646303`*^9},
 CellTags->"Info-6424051e-3917-44ae-9e51-993fdc960592"],

Cell["\<\
Animate[] is same as Manipulate, although Manipulate have Animation embedded \
on it(on clicking plus(+) sign)\
\>", "Item",
 CellChangeTimes->{{3.6902184216622024`*^9, 3.6902184291941533`*^9}, {
  3.6902184711641207`*^9, 3.690218515036003*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Animate", "[", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"x", "+", "n"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "20"}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}], ",", 
   RowBox[{"AnimationRunning", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902184347568493`*^9, 3.690218459795027*^9}, {
  3.690218525139715*^9, 3.690218553652849*^9}, {3.69021863519503*^9, 
  3.6902186360696144`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`n$$ = 5.774125657230615, Typeset`show$$ = 
    True, Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`n$$], 1, 10}}, Typeset`size$$ = {396., {121., 125.}}, 
    Typeset`update$$ = 0, Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`n$112171$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`n$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`n$$, $CellContext`n$112171$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        Cos[$CellContext`x + $CellContext`n$$], {$CellContext`x, 1, 20}], 
      "Specifications" :> {{$CellContext`n$$, 1, 10, AnimationRunning -> 
         False, AppearanceElements -> {
          "ProgressSlider", "PlayPauseButton", "FasterSlowerButtons", 
           "DirectionButton"}}}, 
      "Options" :> {
       ControlType -> Animator, AppearanceElements -> None, DefaultBaseStyle -> 
        "Animate", DefaultLabelStyle -> "AnimateLabel", SynchronousUpdating -> 
        True, ShrinkingDelay -> 10.}, "DefaultOptions" :> {}],
     ImageSizeCache->{451., {163., 170.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Animate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.69021855440635*^9, {3.6902186167332125`*^9, 3.690218636913172*^9}}]
}, Open  ]],

Cell["\<\
 if we haven\[CloseCurlyQuote]t used AnimateRunning-> false then we get \
animate start running automatically , so if we wanted to run when only we \
click run button we use it.s\
\>", "Item",
 CellChangeTimes->{{3.690218559897999*^9, 3.690218609755581*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Conditionals", "Chapter",
 CellChangeTimes->{{3.6902194068700237`*^9, 3.6902194261707935`*^9}}],

Cell[CellGroupData[{

Cell["If statement", "Section",
 CellChangeTimes->{{3.6902194410873575`*^9, 3.6902194562941732`*^9}}],

Cell[CellGroupData[{

Cell["\<\
 If[condition,on_true,on_false] evaluates condition and returns result \
according to condition.\
\>", "Item",
 CellChangeTimes->{{3.6902194817207465`*^9, 3.6902195220404725`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives \\!\\(\\*StyleBox[\\\"t\\\", \
\\\"TI\\\"]\\) if \\!\\(\\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\\) \
evaluates to True, and \\!\\(\\*StyleBox[\\\"f\\\", \\\"TI\\\"]\\) if it \
evaluates to False. \\n\\!\\(\\*RowBox[{\\\"If\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"condition\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"t\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"f\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"u\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) gives \
\\!\\(\\*StyleBox[\\\"u\\\", \\\"TI\\\"]\\) if \
\\!\\(\\*StyleBox[\\\"condition\\\", \\\"TI\\\"]\\) evaluates to neither True \
nor False. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/If"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902194831583166`*^9},
 CellTags->"Info-831920e9-1d2b-4e20-8db7-accb13fad66d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztm01uK7kVRoUkgyzgbSCzN8kGNEsAb6C1gm6ga+gAnQCBdqGJBx54BZoX
YMDwErQBPfiNMvUWlCpVFXlJXv5IKqnK9jlwd5co/lzykvcjqeq//favX6o/
LRaLf/+1+dcvv/73H3/88et69Zfmwz/X//n9tz+3XzX//L3J0z7/DwAAYDoO
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV6GuFlU9tRERzrNt
zj26Ejfu8oXNqcUv78K1B+E69e83y0XDcrO/bbulmNav5DWYC8/rx2/fxd/6
Lfbt/evojZ8+kZqFk1g0Y1Jsm2PS51oaRaOd7PLt/FXIeAHtpn6/Rv0R38xo
Pgetz246wZj8eNrePb37qT93d6vdNZtFhuYNMpTgw8tQpM4ZzWdk6GsRypB/
SorpUX+ut2f7NkHMnWYmHdNFvoX5Xj10m+ewiEgJspjp2ZQP0gTia2lGVXll
ejMi3dH632ZTq9Lt1CuxVh2X3KZSe79IjZtvQ11kT2h5MNqRYXRMXiRrUNr1
upk1PtrN1FCr1jqd8au6gd/HWynZCaZMe5vgFBhlPmsZSted6qyup4ptdVAk
UznclPfd9tGw3QUnHZdzT0NyUZidSmSlGOzyyy2usEh0qzZ84dbkV9TWI/XK
GDwU0m0TIVO1zV1C8ar83Aq21HHR2dZkIEyPm2dDoT2a5VFjs8YMJbP+UrpZ
aHz5UKvWet2R4SsodS2/j7VScg1Fp33Jaei8fonmegEpX3fxqaVOpxMqhxtz
Exly9i3O3sWEmIJNziG6HsMiska19X7HFJl17sobPmXEVA1nlhJl1EYpPpJG
hkRrjuXlQUl71u3JikhsGJPVZv3lt5EzPh171Sb0oUv1x5u91/P7OCsl21B+
2o/ar7Di8nWXnueqbScsargxt5IhNd732w+xfOV+MxNS5OIKEr2wFt3j1NWZ
6zFxprtg2ab3YvrgXFOGdCG8WIbCavP+GluG8iJTnuPKfj+Mt1KyE2xcGTql
uTIDkKFPyc0u5RxnOyukikcUZXEFy1At4pyvldalDcrkk+d3+5yVoV7V4tfg
aj+1+y53lJKD45ovW1FvMJRRjT2r9kRkKBapZKhOVJvz18gylLXB+T7WqH8u
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
    "], {{0, 115}, {557, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{557, 115},
  PlotRange->{{0, 557}, {0, 115}}]], "Input"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztm01uK7kVRoUkgyzgbSCzN8kGNEsAb6C1gm6ga+gAnQCBdqGJBx54BZoX
YMDwErQBPfiNMvUWlCpVFXlJXv5IKqnK9jlwd5co/lzykvcjqeq//favX6o/
LRaLf/+1+dcvv/73H3/88et69Zfmwz/X//n9tz+3XzX//L3J0z7/DwAAYDoO
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV6GuFlU9tRERzrNt
zj26Ejfu8oXNqcUv78K1B+E69e83y0XDcrO/bbulmNav5DWYC8/rx2/fxd/6
Lfbt/evojZ8+kZqFk1g0Y1Jsm2PS51oaRaOd7PLt/FXIeAHtpn6/Rv0R38xo
Pgetz246wZj8eNrePb37qT93d6vdNZtFhuYNMpTgw8tQpM4ZzWdk6GsRypB/
SorpUX+ut2f7NkHMnWYmHdNFvoX5Xj10m+ewiEgJspjp2ZQP0gTia2lGVXll
ejMi3dH632ZTq9Lt1CuxVh2X3KZSe79IjZtvQ11kT2h5MNqRYXRMXiRrUNr1
upk1PtrN1FCr1jqd8au6gd/HWynZCaZMe5vgFBhlPmsZSted6qyup4ptdVAk
UznclPfd9tGw3QUnHZdzT0NyUZidSmSlGOzyyy2usEh0qzZ84dbkV9TWI/XK
GDwU0m0TIVO1zV1C8ar83Aq21HHR2dZkIEyPm2dDoT2a5VFjs8YMJbP+UrpZ
aHz5UKvWet2R4SsodS2/j7VScg1Fp33Jaei8fonmegEpX3fxqaVOpxMqhxtz
Exly9i3O3sWEmIJNziG6HsMiska19X7HFJl17sobPmXEVA1nlhJl1EYpPpJG
hkRrjuXlQUl71u3JikhsGJPVZv3lt5EzPh171Sb0oUv1x5u91/P7OCsl21B+
2o/ar7Di8nWXnueqbScsargxt5IhNd732w+xfOV+MxNS5OIKEr2wFt3j1NWZ
6zFxprtg2ab3YvrgXFOGdCG8WIbCavP+GluG8iJTnuPKfj+Mt1KyE2xcGTql
uTIDkKFPyc0u5RxnOyukikcUZXEFy1At4pyvldalDcrkk+d3+5yVoV7V4tfg
aj+1+y53lJKD45ovW1FvMJRRjT2r9kRkKBapZKhOVJvz18gylLXB+T7WqH8u
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
    "], {{0, 115}, {557, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{557, 115},
  PlotRange->{{0, 557}, {0, 115}}]], "Input",
 CellChangeTimes->{3.6902197874868517`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"abs", "[", "x_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"x", "<", "0"}], ",", 
    RowBox[{"-", "x"}], ",", "x"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.690220011287163*^9, 3.690220015146724*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.690220015474864*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"abs", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.690220019318803*^9, 3.690220020959511*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.690220021240772*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Which Statement", "Section",
 CellChangeTimes->{{3.690220178293778*^9, 3.6902201812939243`*^9}}],

Cell[CellGroupData[{

Cell[" return the value according to first true result", "Item",
 CellChangeTimes->{{3.6902201846534634`*^9, 3.6902201911694093`*^9}, {
  3.690220230536804*^9, 3.690220237805703*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Which\\\", \\\"[\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"test\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"value\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"test\\\
\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"value\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\
\"}]\\) evaluates each of the \\!\\(\\*SubscriptBox[StyleBox[\\\"test\\\", \\\
\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) in turn, returning the value \
of the \\!\\(\\*SubscriptBox[StyleBox[\\\"value\\\", \\\"TI\\\"], StyleBox[\\\
\"i\\\", \\\"TI\\\"]]\\) corresponding to the first one that yields True. \
\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Which"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902201870129547`*^9},
 CellTags->"Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"a", "=", "2"}], ";", 
  RowBox[{"Which", "[", 
   RowBox[{
    RowBox[{"a", "==", "1"}], ",", "x", ",", 
    RowBox[{"a", "==", "2"}], ",", "b"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"a", "=", "2"}], ";", " ", 
    RowBox[{
    "can", " ", "be", " ", "written", " ", "on", " ", "diffent", " ", "line", 
     " ", "as", " ", "well", " ", "it", " ", "is", " ", "just", " ", 
     "delimiter"}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902202421652946`*^9, 3.690220314960527*^9}}],

Cell[BoxData["b"], "Output",
 CellChangeTimes->{
  3.690220250884468*^9, {3.6902203122230964`*^9, 3.6902203153355446`*^9}}]
}, Open  ]],

Cell["\<\
here in previous example a== 2 turns true so  b will be returned \
\>", "Item",
 CellChangeTimes->{{3.690220289953806*^9, 3.690220336840093*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Looping Constructs", "Chapter",
 CellChangeTimes->{{3.6902203765360684`*^9, 3.690220379598685*^9}}],

Cell[CellGroupData[{

Cell["Do ", "Section",
 CellChangeTimes->{{3.690220388118686*^9, 3.690220388978108*^9}}],

Cell[CellGroupData[{

Cell[" ", "Item",
 CellChangeTimes->{{3.6902204135620975`*^9, 3.6902204183279715`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\"expr\\\", \
\\\"TI\\\"]\\) \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) times. \
\\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) evaluates \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) with the variable \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) successively taking on the values \
1 through \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]\\) (in steps of 1). \\n\\!\\(\\*RowBox[{\\\
\"Do\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Do\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Do\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\
\"expr\\\", \\\"TI\\\"]\\) looping over different values of \
\\!\\(\\*StyleBox[\\\"j\\\", \\\"TI\\\"]\\) etc. for each \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\). \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Do"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902204152653074`*^9},
 CellTags->"Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b"],

Cell["Example 1 - doing something  n times", "Item",
 CellChangeTimes->{{3.6902206348685045`*^9, 3.6902206478535247`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", "\"\<hello\>\"", "]"}], ",", 
   RowBox[{"{", "3", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.69022064914312*^9, 3.6902206610655756`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["\<\"hello\"\>"], "Print",
 CellChangeTimes->{{3.690220658034174*^9, 3.690220661346839*^9}}],

Cell[BoxData["\<\"hello\"\>"], "Print",
 CellChangeTimes->{{3.690220658034174*^9, 3.690220661346839*^9}}],

Cell[BoxData["\<\"hello\"\>"], "Print",
 CellChangeTimes->{{3.690220658034174*^9, 3.690220661346839*^9}}]
}, Open  ]]
}, Open  ]],

Cell["Example 2 - Print the first four squares:", "Item",
 CellChangeTimes->{{3.690220466046645*^9, 3.690220481719284*^9}, {
  3.6902206328528175`*^9, 3.6902206329309464`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{"Print", "[", 
     RowBox[{"n", "^", "2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"n", ",", "4"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "value", " ", "of", " ", "n", " ", "will", " ", "be", " ", "taken", " ", 
    "from", " ", "1", " ", "to", " ", "4"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902204854580708`*^9, 3.6902205004588203`*^9}, {
  3.6902205860108104`*^9, 3.6902205999836893`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.6902205008181973`*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.6902205008181973`*^9}],

Cell[BoxData["9"], "Print",
 CellChangeTimes->{3.6902205008338227`*^9}],

Cell[BoxData["16"], "Print",
 CellChangeTimes->{3.6902205008338227`*^9}]
}, Open  ]]
}, Open  ]],

Cell["Example 3- n goes from - 3 to 5 in steps of 2 :", "Item",
 CellChangeTimes->{{3.690220532890829*^9, 3.690220541547505*^9}, {
  3.690220627993204*^9, 3.6902206288525877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", "n", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "3"}], ",", "5", ",", "2"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "value", " ", "of", " ", "n", " ", "will", " ", "be", " ", "from"}], " ",
      "-", 
     RowBox[{"3", " ", "to", " ", "5", " ", "in", " ", "step"}]}], "=", "2"}],
    " ", "*)"}]}]}], "Input",
 CellChangeTimes->{{3.690220607487871*^9, 3.6902206240199313`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", "3"}]], "Print",
 CellChangeTimes->{3.6902205533956156`*^9}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Print",
 CellChangeTimes->{3.6902205534112396`*^9}],

Cell[BoxData["1"], "Print",
 CellChangeTimes->{3.6902205534112396`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.6902205534112396`*^9}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{3.6902205534268627`*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6902205431257067`*^9, 3.690220546223421*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["While", "Section",
 CellChangeTimes->{{3.690220682133571*^9, 3.690220682742997*^9}}],

Cell[CellGroupData[{

Cell[" while evaluates until test fails", "Item",
 CellChangeTimes->{{3.6902206862587576`*^9, 3.690220706483329*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"While\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) evaluates \\!\\(\\*StyleBox[\\\"test\\\", \
\\\"TI\\\"]\\), then \\!\\(\\*StyleBox[\\\"body\\\", \\\"TI\\\"]\\), \
repetitively, until \\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) first \
fails to give True. \"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/While"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690220689810602*^9},
 CellTags->"Info-d985ebce-900e-4a90-930a-399ca16133dc"],

Cell[TextData[{
 "Example 1 - ",
 "Print and increment ",
 Cell[BoxData[
  StyleBox["n", "TI"]], "InlineFormula"],
 " while the condition ",
 Cell[BoxData[
  RowBox[{
   StyleBox["n", "TI"], "<", "4"}]], "InlineFormula"],
 " is satisfied:"
}], "Item",
 CellChangeTimes->{{3.6902207207226796`*^9, 3.6902207285199437`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"While", "[", 
  RowBox[{
   RowBox[{"n", "<", "4"}], ",", 
   RowBox[{
    RowBox[{"Print", "[", "n", "]"}], ";", 
    RowBox[{"n", "++"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.690220754888262*^9, 3.6902207600603905`*^9}, {
  3.690220811171632*^9, 3.6902208263006816`*^9}, {3.69022088107963*^9, 
  3.6902208811577606`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.690220741867613*^9, 3.6902207616229305`*^9}, {
  3.690220812846861*^9, 3.6902208185190177`*^9}, {3.6902208756887407`*^9, 
  3.690220893025381*^9}}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.690220741867613*^9, 3.6902207616229305`*^9}, {
  3.690220812846861*^9, 3.6902208185190177`*^9}, {3.6902208756887407`*^9, 
  3.690220893025381*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.690220741867613*^9, 3.6902207616229305`*^9}, {
  3.690220812846861*^9, 3.6902208185190177`*^9}, {3.6902208756887407`*^9, 
  3.690220893025381*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"here", " ", "n"}], "<", 
   RowBox[{
   "4", " ", "is", " ", "test", " ", "and", " ", "remaining", " ", "is", " ", 
    RowBox[{"body", "."}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6902208886581335`*^9, 3.6902208994695168`*^9}}],

Cell["post and pre increment works same as c/c++", "Item",
 CellChangeTimes->{{3.6902209028602705`*^9, 3.6902209170770545`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "1"}], ";", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"n", "++"}], "<", "4"}], ",", 
    RowBox[{"Print", "[", "n", "]"}]}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{"post", " ", "increment"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.690220919749044*^9, 3.6902209663586617`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.690220938925908*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.690220938941533*^9}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{3.690220938941533*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"n", "=", "1"}], ";", 
  RowBox[{"While", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"++", "n"}], "<", "4"}], ",", 
    RowBox[{"Print", "[", "n", "]"}]}], "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"pre", " ", "increment"}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902209491974416`*^9, 3.6902209741090193`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["2"], "Print",
 CellChangeTimes->{3.6902209509475164`*^9}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{3.6902209509475164`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["For", "Section",
 CellChangeTimes->{{3.6902209973171735`*^9, 3.690220999520398*^9}}],

Cell[CellGroupData[{

Cell["\<\
 same as c/c++, it has 4 things intialise,test,increment,body\
\>", "Item",
 CellChangeTimes->{{3.6902210031345186`*^9, 3.6902210090254507`*^9}, {
  3.690221493929618*^9, 3.6902215177004786`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"For\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"start\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"test\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"incr\\\", \
\\\"TI\\\"], \\\",\\\", StyleBox[\\\"body\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
executes \\!\\(\\*StyleBox[\\\"start\\\", \\\"TI\\\"]\\), then repeatedly \
evaluates \\!\\(\\*StyleBox[\\\"body\\\", \\\"TI\\\"]\\) and \
\\!\\(\\*StyleBox[\\\"incr\\\", \\\"TI\\\"]\\) until \
\\!\\(\\*StyleBox[\\\"test\\\", \\\"TI\\\"]\\) fails to give True. \"\>", 
   "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/For"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.6902210052283726`*^9},
 CellTags->"Info-bd6ea501-3291-4107-8607-d11b18098119"],

Cell["example 1- Printing from 1 to 5", "Item",
 CellChangeTimes->{{3.690221521594593*^9, 3.690221563002896*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "5"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{"Print", "[", "i", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902215382829065`*^9, 3.690221573972184*^9}}],

Cell[CellGroupData[{

Cell[BoxData["1"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.6902215744878073`*^9}}],

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.6902215745034323`*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.6902215745034323`*^9}}],

Cell[BoxData["4"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.6902215745034323`*^9}}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.6902215597527065`*^9, 3.690221574519058*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
comma ends a part of For[] (applicable to all functions), and semicolon(;) \
ends one statement , so we can have multiple semicolon separated statements \
in a part.\
\>", "Item",
 CellChangeTimes->{{3.6902216033798532`*^9, 3.6902216040986323`*^9}, {
  3.6902218762745557`*^9, 3.690221976665059*^9}}],

Cell["Example ", "Item",
 CellChangeTimes->{{3.690221994572178*^9, 3.6902219999630947`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"i", "=", "1"}], ";", 
    RowBox[{"t", "=", "x"}]}], ",", 
   RowBox[{"i", "<", "4"}], ",", 
   RowBox[{"i", "++"}], ",", 
   RowBox[{
    RowBox[{"t", "=", 
     RowBox[{"i", "+", 
      RowBox[{"t", "^", "2"}]}]}], ";", 
    RowBox[{"Print", "[", "t", "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690222018823388*^9, 3.690222039030697*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "+", 
  SuperscriptBox["x", "2"]}]], "Print",
 CellChangeTimes->{{3.690222002916339*^9, 3.6902220392963047`*^9}}],

Cell[BoxData[
 RowBox[{"2", "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}], ")"}], "2"]}]], "Print",
 CellChangeTimes->{{3.690222002916339*^9, 3.6902220393119297`*^9}}],

Cell[BoxData[
 RowBox[{"3", "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"2", "+", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "2"]}], ")"}], "2"]}], ")"}], "2"]}]], "Print",
 CellChangeTimes->{{3.690222002916339*^9, 3.6902220393119297`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"here", " ", "we", " ", "have", " ", "intialise", " ", "i"}], "=", 
   RowBox[{
    RowBox[{"1", " ", "and", " ", "t"}], "=", 
    RowBox[{
     RowBox[{
     "x", " ", "and", " ", "we", " ", "are", " ", "going", " ", "until", " ", 
      "i"}], "<", "4"}]}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6902220426870975`*^9, 3.6902220658322425`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Break and Continue", "Section",
 CellChangeTimes->{{3.6902221217131557`*^9, 3.690222124525795*^9}}],

Cell[CellGroupData[{

Cell["Break[] breaks the nearest loop (same as c/c++)", "Item",
 CellChangeTimes->{{3.690222130432336*^9, 3.6902221591837664`*^9}, {
  3.6902222272415037`*^9, 3.6902222312769237`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Break\\\", \\\"[\\\", \\\"]\\\"}]\\) \
exits the nearest enclosing Do, For, or While. \"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Break"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690222132619936*^9},
 CellTags->"Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<", "1000"}], ",", 
    RowBox[{"i", "++"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", ">", "10"}], ",", 
      RowBox[{"Break", "[", "]"}]}], "]"}]}], "]"}], ";", 
  RowBox[{"Print", "[", "i", "]"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"show", " ", "i", " ", "after", " ", "For", " ", "ends"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6902221923297*^9, 3.690222218366068*^9}}],

Cell[BoxData["11"], "Print",
 CellChangeTimes->{3.6902222186629295`*^9}]
}, Open  ]],

Cell["Break[] never passes any argument to itself", "Item",
 CellChangeTimes->{{3.6902222341676855`*^9, 3.6902222604658723`*^9}}],

Cell["\<\
Continue[] continues loop without executing rest of the body(same as c/c++)\
\>", "Item",
 CellChangeTimes->{{3.6902222694819126`*^9, 3.6902223046086636`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Continue\\\", \\\"[\\\", \\\"]\\\"}]\\) \
exits to the nearest enclosing Do, For, or While in a procedural program. \
\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Continue"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690222272888328*^9},
 CellTags->"Info-0d428704-2979-4809-b2e4-e8a0d2525948"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"PrimeQ", "[", "i", "]"}]}], ",", 
      RowBox[{"Continue", "[", "]"}]}], "]"}], ";", 
    RowBox[{"Print", "[", "i", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902223430832043`*^9, 3.6902224183277197`*^9}}],

Cell[CellGroupData[{

Cell[BoxData["2"], "Print",
 CellChangeTimes->{{3.690222390701338*^9, 3.69022241924961*^9}}],

Cell[BoxData["3"], "Print",
 CellChangeTimes->{{3.690222390701338*^9, 3.69022241924961*^9}}],

Cell[BoxData["5"], "Print",
 CellChangeTimes->{{3.690222390701338*^9, 3.690222419265236*^9}}],

Cell[BoxData["7"], "Print",
 CellChangeTimes->{{3.690222390701338*^9, 3.690222419265236*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Table in Mathematica", "Chapter",
 CellChangeTimes->{{3.6902224893663907`*^9, 3.6902224944760437`*^9}}],

Cell[CellGroupData[{

Cell["\<\
 Table is used to generate different types of list of values.\
\>", "Item",
 CellChangeTimes->{{3.6902258862499847`*^9, 3.6902259199722104`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) generates a list of \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\) copies of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \
\\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\
\\\"], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) generates \
a list of the values of \\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) when \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) runs from 1 to \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"max\\\", \
\\\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) starts \
with \\!\\(\\*RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]]}]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]], \\\",\\\", StyleBox[\\\"di\\\", \
\\\"TI\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) uses steps \
\\!\\(\\*StyleBox[\\\"di\\\", \\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Table\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \
uses the successive values \\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\
\"], StyleBox[\\\"1\\\", \\\"TR\\\"]]\\), \
\\!\\(\\*SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \\\
\"TR\\\"]]\\), \[Ellipsis].\\n\\!\\(\\*RowBox[{\\\"Table\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"expr\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"i\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"i\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\
\", RowBox[{StyleBox[\\\"j\\\", \\\"TI\\\"], \\\",\\\", \
SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], StyleBox[\\\"min\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"j\\\", \\\"TI\\\"], \
StyleBox[\\\"max\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) gives a nested list. The list \
associated with \\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) is \
outermost.\"\>", "MSG"], "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Table"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.690225890610882*^9},
 CellTags->"Info-fcf33395-6733-4906-b49c-e1e329cde97d"],

Cell["\<\
 Table always have two parts expression and iterator.\[LineSeparator]iterator \
defines how many times the expression needs to be put in Table.\
\>", "Item",
 CellChangeTimes->{{3.6902260115511203`*^9, 3.6902260694034576`*^9}}],

Cell["Example 1- having a list of 9 \[OpenCurlyDoubleQuote]hello\
\[CloseCurlyDoubleQuote]", "Item",
 CellChangeTimes->{{3.690226141958663*^9, 3.690226186966522*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{"\"\<hello\>\"", ",", "9"}], "]"}]], "Input",
 CellChangeTimes->{{3.690226165237997*^9, 3.6902261970164185`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"hello\"\>", ",", "\<\"hello\"\>", ",", "\<\"hello\"\>", 
   ",", "\<\"hello\"\>", ",", "\<\"hello\"\>", ",", "\<\"hello\"\>", 
   ",", "\<\"hello\"\>", ",", "\<\"hello\"\>", ",", "\<\"hello\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.6902261973216205`*^9}]
}, Open  ]],

Cell["Example 2- having list of squares of number 1 to 10", "Item",
 CellChangeTimes->{{3.6902262020717773`*^9, 3.690226263857828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902262655199323`*^9, 3.690226273279088*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.6902262737123737`*^9}]
}, Open  ]],

Cell["as 1 is by default imin we can use", "Item",
 CellChangeTimes->{{3.6902262803427787`*^9, 3.690226297958007*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"n", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6902262999593334`*^9, 3.6902263078815947`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "4", ",", "9", ",", "16", ",", "25", ",", "36", ",", "49", ",", 
   "64", ",", "81", ",", "100"}], "}"}]], "Output",
 CellChangeTimes->{3.690226308152774*^9}]
}, Open  ]],

Cell["Example 3 - Make a 4\[Times]3 matrix:", "Item",
 CellChangeTimes->{{3.6902264257344947`*^9, 3.6902264362347913`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "+", "j"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.690226439795314*^9, 3.690226474703317*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"2", "3", "4", "5", "6"},
     {"3", "4", "5", "6", "7"},
     {"4", "5", "6", "7", "8"},
     {"5", "6", "7", "8", "9"},
     {"6", "7", "8", "9", "10"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.690226460232442*^9, 3.6902264750033607`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Table is most commonly used for Plotting ", "Item",
 CellChangeTimes->{{3.6902264871664753`*^9, 3.690226500627781*^9}}],

Cell["Example 4 - plot primes first 50 Primes", "Item",
 CellChangeTimes->{{3.6902265030231433`*^9, 3.690226511221411*^9}, {
  3.6902270997549133`*^9, 3.6902271047147255`*^9}, {3.690227305834883*^9, 
  3.690227307040064*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Prime", "[", "i", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "50"}], "}"}]}], "]"}], ",", 
   RowBox[{"Filling", "\[Rule]", "Bottom"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.690226513710944*^9, 3.690226533906339*^9}, {
   3.69022667172009*^9, 3.6902266979110403`*^9}, 3.6902267936767*^9, {
   3.6902271107239695`*^9, 3.6902271202993145`*^9}, {3.690227287394812*^9, 
   3.690227315069352*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, GraphicsComplexBox[CompressedData["
1:eJzt1UtOwlAYxfHGEUMGDBgwQEIIIYTwfj8qvk00isb4SqwoapTELXQVjrsU
lsISXIKa+7836VkDTcjpj9OW0psv3Z5/zRZbnud9/33+02w/E3b8eCYkU2SS
zMj3BTJNluS4GpklG2SO7JB5ciTXnZBFk+E0/jvhHi7jfVzBh7iKT+L3FZ7i
Oj6L3+fqHDfxBW6Z9Ge4TX8Z/1+rK9zl+Gvcwze4j2/xgPOth/gO85z8ezzG
D5jntnrEvskgMBni7BP9Dj0OcTSnn5pcY7sO0TP9Lue/0OM19linaEGPg1d6
1i3Cdh3Xb/QH3O87PY6wxzqvbY+DD/oj+k96HCzpj7metZsPu/lxJsRJcUqc
FmfEWXFOnBcXxEVxSVwWV8RVcU1cFzfETXFL3BZ3xF1xT9wXD8RD8Ug8Fk/E
ftyh2M6H68V2PlwvtvPherGdD9eL7Xy4Xmznw/ViOx+uF9v5cL3YzofbNu8P
4837w/Sb94e53tL/Bao9uFA=
    "], {{{}, {}, {}, {}, 
      {RGBColor[0.368417, 0.506779, 0.709798], Opacity[0.3], LineBox[{51, 1}],
        LineBox[{52, 2}], LineBox[{53, 3}], LineBox[{54, 4}], 
       LineBox[{55, 5}], LineBox[{56, 6}], LineBox[{57, 7}], LineBox[{58, 8}],
        LineBox[{59, 9}], LineBox[{60, 10}], LineBox[{61, 11}], 
       LineBox[{62, 12}], LineBox[{63, 13}], LineBox[{64, 14}], 
       LineBox[{65, 15}], LineBox[{66, 16}], LineBox[{67, 17}], 
       LineBox[{68, 18}], LineBox[{69, 19}], LineBox[{70, 20}], 
       LineBox[{71, 21}], LineBox[{72, 22}], LineBox[{73, 23}], 
       LineBox[{74, 24}], LineBox[{75, 25}], LineBox[{76, 26}], 
       LineBox[{77, 27}], LineBox[{78, 28}], LineBox[{79, 29}], 
       LineBox[{80, 30}], LineBox[{81, 31}], LineBox[{82, 32}], 
       LineBox[{83, 33}], LineBox[{84, 34}], LineBox[{85, 35}], 
       LineBox[{86, 36}], LineBox[{87, 37}], LineBox[{88, 38}], 
       LineBox[{89, 39}], LineBox[{90, 40}], LineBox[{91, 41}], 
       LineBox[{92, 42}], LineBox[{93, 43}], LineBox[{94, 44}], 
       LineBox[{95, 45}], LineBox[{96, 46}], LineBox[{97, 47}], 
       LineBox[{98, 48}], LineBox[{99, 49}], LineBox[{100, 50}]}}, {{}, 
      {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
       0.011000000000000001`], AbsoluteThickness[1.6], 
       PointBox[{101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 
        113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 
        127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 
        141, 142, 143, 144, 145, 146, 147, 148, 149, 150}]}, {}}}], {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 50.}, {0, 229.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6902265344967265`*^9, 3.6902266995167418`*^9, 3.690226794776867*^9, {
   3.690227116363717*^9, 3.690227120704376*^9}, {3.690227293220541*^9, 
   3.6902273155928173`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.690229351526173*^9, 3.690229351535179*^9}}],

Cell["", "Subsection",
 CellChangeTimes->{{3.6902207180506854`*^9, 3.690220718925726*^9}, 
   3.6902290704411488`*^9}]
}, Open  ]]
},
PrintingStyleEnvironment->"SlideShow",
WindowSize->{734, 659},
WindowMargins->{{Automatic, 41}, {-16, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{612, 792}},
Magnification:>1.1 Inherited,
FrontEndVersion->"10.2 for Microsoft Windows (64-bit) (July 7, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-bd6ea501-3291-4107-8607-d11b18098119"->{
  Cell[567434, 13405, 846, 17, 47, "Print",
   CellTags->"Info-bd6ea501-3291-4107-8607-d11b18098119"]},
 "Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff"->{
  Cell[571625, 13541, 439, 11, 47, "Print",
   CellTags->"Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff"]},
 "Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691"->{
  Cell[15634, 470, 2034, 34, 75, "Print",
   CellTags->"Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691"]},
 "Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"->{
  Cell[417609, 10194, 453, 11, 74, "Print",
   CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"]},
 "Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"->{
  Cell[130612, 4319, 193, 3, 44, "Print",
   CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]},
 "Info-d985ebce-900e-4a90-930a-399ca16133dc"->{
  Cell[563302, 13264, 694, 14, 47, "Print",
   CellTags->"Info-d985ebce-900e-4a90-930a-399ca16133dc"]},
 "Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d"->{
  Cell[7555, 246, 866, 17, 68, "Print",
   CellTags->"Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d"]},
 "Info-fcf33395-6733-4906-b49c-e1e329cde97d"->{
  Cell[574691, 13645, 3742, 57, 168, "Print",
   CellTags->"Info-fcf33395-6733-4906-b49c-e1e329cde97d"]},
 "Info-0d428704-2979-4809-b2e4-e8a0d2525948"->{
  Cell[573007, 13585, 471, 11, 47, "Print",
   CellTags->"Info-0d428704-2979-4809-b2e4-e8a0d2525948"]},
 "Info-02b8c313-4e5b-4338-a61a-7aeffe471d89"->{
  Cell[11176, 323, 574, 13, 47, "Print",
   CellTags->"Info-02b8c313-4e5b-4338-a61a-7aeffe471d89"]},
 "Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"->{
  Cell[457701, 11102, 2153, 36, 96, "Print",
   CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"]},
 "Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a"->{
  Cell[12591, 357, 652, 14, 47, "Print",
   CellTags->"Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a"]},
 "Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b"->{
  Cell[556085, 13080, 3838, 59, 188, "Print",
   CellTags->"Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b"]},
 "Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"->{
  Cell[256741, 7008, 450, 11, 51, "Print",
   CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"]},
 "Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e"->{
  Cell[11753, 338, 835, 17, 68, "Print",
   CellTags->"Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e"]},
 "Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"->{
  Cell[250419, 6847, 1995, 33, 96, "Print",
   CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"]},
 "Info-562778dd-e1af-41c8-99f3-a4833404956e"->{
  Cell[513574, 12149, 5285, 79, 208, "Print",
   CellTags->"Info-562778dd-e1af-41c8-99f3-a4833404956e"]},
 "Info-59173d98-7577-4534-ad73-126483fd6107"->{
  Cell[278471, 7627, 419, 10, 51, "Print",
   CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"]},
 "Info-6424051e-3917-44ae-9e51-993fdc960592"->{
  Cell[534416, 12619, 2980, 46, 128, "Print",
   CellTags->"Info-6424051e-3917-44ae-9e51-993fdc960592"]},
 "Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3"->{
  Cell[553692, 13012, 1138, 20, 68, "Print",
   CellTags->"Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3"]},
 "Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b"->{
  Cell[9605, 290, 1395, 23, 108, "Print",
   CellTags->"Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b"]},
 "Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"->{
  Cell[274975, 7532, 477, 11, 74, "Print",
   CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"]},
 "Info-831920e9-1d2b-4e20-8db7-accb13fad66d"->{
  Cell[541053, 12763, 1127, 21, 68, "Print",
   CellTags->"Info-831920e9-1d2b-4e20-8db7-accb13fad66d"]},
 "Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"->{
  Cell[278893, 7639, 425, 10, 51, "Print",
   CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]},
 "Info-913b775d-8622-437f-a24c-3c3cd89342aa"->{
  Cell[127624, 4253, 2193, 36, 88, "Print",
   CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-bd6ea501-3291-4107-8607-d11b18098119", 586587, 13926},
 {"Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff", 586739, 13929},
 {"Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691", 586891, 13932},
 {"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06", 587041, 13935},
 {"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016", 587193, 13938},
 {"Info-d985ebce-900e-4a90-930a-399ca16133dc", 587343, 13941},
 {"Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d", 587495, 13944},
 {"Info-fcf33395-6733-4906-b49c-e1e329cde97d", 587643, 13947},
 {"Info-0d428704-2979-4809-b2e4-e8a0d2525948", 587797, 13950},
 {"Info-02b8c313-4e5b-4338-a61a-7aeffe471d89", 587949, 13953},
 {"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf", 588098, 13956},
 {"Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a", 588251, 13959},
 {"Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b", 588400, 13962},
 {"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57", 588554, 13965},
 {"Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e", 588705, 13968},
 {"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28", 588854, 13971},
 {"Info-562778dd-e1af-41c8-99f3-a4833404956e", 589006, 13974},
 {"Info-59173d98-7577-4534-ad73-126483fd6107", 589160, 13977},
 {"Info-6424051e-3917-44ae-9e51-993fdc960592", 589311, 13980},
 {"Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3", 589465, 13983},
 {"Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b", 589618, 13986},
 {"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2", 589768, 13989},
 {"Info-831920e9-1d2b-4e20-8db7-accb13fad66d", 589919, 13992},
 {"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0", 590072, 13995},
 {"Info-913b775d-8622-437f-a24c-3c3cd89342aa", 590223, 13998}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 154, 2, 79, "Chapter"],
Cell[CellGroupData[{
Cell[759, 28, 330, 4, 31, "Item"],
Cell[1092, 34, 522, 10, 67, "Item"],
Cell[1617, 46, 173, 5, 31, "Item"],
Cell[1793, 53, 171, 2, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2001, 60, 96, 1, 32, "Input"],
Cell[2100, 63, 76, 1, 33, "Output"]
}, Open  ]],
Cell[2191, 67, 475, 10, 53, "Item"],
Cell[CellGroupData[{
Cell[2691, 81, 98, 1, 32, "Item"],
Cell[2792, 84, 89, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2918, 90, 103, 3, 32, "Input"],
Cell[3024, 95, 137, 2, 33, "Output"]
}, Open  ]],
Cell[3176, 100, 239, 7, 30, "Item"],
Cell[CellGroupData[{
Cell[3440, 111, 118, 2, 32, "Input"],
Cell[3561, 115, 95, 2, 33, "Output"]
}, Open  ]],
Cell[3671, 120, 101, 1, 31, "Item"],
Cell[3775, 123, 89, 1, 53, "Input"],
Cell[CellGroupData[{
Cell[3889, 128, 269, 5, 32, "Input"],
Cell[4161, 135, 73, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4271, 141, 261, 7, 32, "Input"],
Cell[4535, 150, 74, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4658, 157, 120, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[4803, 162, 167, 3, 31, "Item"],
Cell[4973, 167, 251, 5, 49, "Item"],
Cell[5227, 174, 270, 5, 49, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5534, 184, 378, 9, 32, "Input"],
Cell[5915, 195, 151, 3, 33, "Output"]
}, Open  ]],
Cell[6081, 201, 406, 10, 32, "Input"],
Cell[6490, 213, 275, 6, 89, "Text"],
Cell[CellGroupData[{
Cell[6790, 223, 112, 1, 31, "Item"],
Cell[6905, 226, 140, 1, 31, "Item"],
Cell[7048, 229, 130, 1, 49, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7227, 236, 139, 2, 79, "Chapter"],
Cell[CellGroupData[{
Cell[7391, 242, 161, 2, 31, "Item"],
Cell[7555, 246, 866, 17, 68, "Print",
 CellTags->"Info-fb5d7d8b-a199-4ef3-88b5-fcc30748b07d"],
Cell[8424, 265, 128, 1, 31, "Item"],
Cell[8555, 268, 209, 4, 31, "Item"],
Cell[8767, 274, 239, 3, 31, "Item"],
Cell[9009, 279, 275, 3, 31, "Item"],
Cell[9287, 284, 315, 4, 31, "Item"],
Cell[9605, 290, 1395, 23, 108, "Print",
 CellTags->"Info-8a8ea33f-0f7f-49fa-b2f7-562c49dcb82b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11037, 318, 114, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[11176, 323, 574, 13, 47, "Print",
 CellTags->"Info-02b8c313-4e5b-4338-a61a-7aeffe471d89"],
Cell[11753, 338, 835, 17, 68, "Print",
 CellTags->"Info-304a52f0-c52f-4bd8-a849-ccc7ac9c440e"],
Cell[12591, 357, 652, 14, 47, "Print",
 CellTags->"Info-19dc6f22-5d34-4c58-93a4-80a8b2bdaa9a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13280, 376, 258, 6, 32, "Input"],
Cell[13541, 384, 70, 1, 33, "Output"]
}, Open  ]],
Cell[13626, 388, 92, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[13743, 393, 121, 2, 32, "Input"],
Cell[13867, 397, 97, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14001, 404, 140, 3, 35, "Input"],
Cell[14144, 409, 87, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14268, 415, 153, 3, 35, "Input"],
Cell[14424, 420, 192, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14653, 432, 155, 3, 35, "Input"],
Cell[14811, 437, 191, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15039, 449, 181, 4, 35, "Input"],
Cell[15223, 455, 250, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15510, 467, 121, 1, 34, "Item"],
Cell[15634, 470, 2034, 34, 75, "Print",
 CellTags->"Info-b77543a4-c184-4c36-9cc3-0bb1e4ac0691"],
Cell[CellGroupData[{
Cell[17693, 508, 173, 5, 35, "Input"],
Cell[17869, 515, 1103, 37, 55, "Output"]
}, Open  ]],
Cell[18987, 555, 106, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19130, 561, 622, 15, 58, "Input"],
Cell[19755, 578, 698, 21, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20490, 604, 278, 7, 35, "Input"],
Cell[20771, 613, 342, 10, 55, "Output"]
}, Open  ]],
Cell[21128, 626, 84, 1, 35, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[21261, 633, 122, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[21408, 638, 326, 6, 73, "Item"],
Cell[21737, 646, 181, 4, 34, "Item"]
}, Open  ]],
Cell[21933, 653, 197, 4, 35, "Input"],
Cell[22133, 659, 144, 1, 58, "Input"],
Cell[CellGroupData[{
Cell[22302, 664, 113, 1, 35, "Input"],
Cell[22418, 667, 97, 2, 36, "Output"]
}, Open  ]],
Cell[22530, 672, 224, 5, 34, "Item"],
Cell[22757, 679, 148, 2, 35, "Input"],
Cell[22908, 683, 98, 2, 35, "Input"],
Cell[CellGroupData[{
Cell[23031, 689, 127, 2, 35, "Input"],
Cell[23161, 693, 99, 2, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[23309, 701, 105, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[23439, 706, 178, 2, 34, "Item"],
Cell[23620, 710, 307, 6, 53, "Item"],
Cell[23930, 718, 158, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24125, 726, 125, 2, 35, "Input"],
Cell[24253, 730, 513, 12, 25, "Message"],
Cell[24769, 744, 94, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24900, 750, 118, 2, 35, "Input"],
Cell[25021, 754, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25131, 760, 176, 4, 58, "Input"],
Cell[25310, 766, 92, 2, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25439, 773, 178, 3, 35, "Input"],
Cell[25620, 778, 497, 10, 25, "Message"],
Cell[26120, 790, 95, 1, 36, "Output"]
}, Open  ]],
Cell[26230, 794, 139, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26406, 800, 128, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[26559, 805, 259, 5, 34, "Item"],
Cell[26821, 812, 244, 3, 34, "Item"],
Cell[27068, 817, 244, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27349, 825, 360, 9, 58, "Input"],
Cell[27712, 836, 162, 2, 182, "Output"]
}, Open  ]],
Cell[27889, 841, 96, 1, 35, "Input"],
Cell[27988, 844, 183, 4, 53, "Item"],
Cell[CellGroupData[{
Cell[28196, 852, 132, 2, 35, "Input"],
Cell[28331, 856, 191, 4, 182, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28559, 865, 204, 4, 34, "Item"],
Cell[28766, 871, 160, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28963, 879, 224, 5, 35, "Input"],
Cell[29190, 886, 137, 2, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[29376, 894, 109, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[29510, 899, 105, 1, 34, "Item"],
Cell[29618, 902, 133, 1, 31, "Item"],
Cell[29754, 905, 132, 1, 31, "Item"],
Cell[29889, 908, 129, 1, 31, "Item"],
Cell[30021, 911, 156, 3, 31, "Item"],
Cell[30180, 916, 194, 2, 31, "Item"],
Cell[30377, 920, 207, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30621, 929, 127, 2, 32, "Input"],
Cell[30751, 933, 73, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30861, 939, 168, 4, 32, "Input"],
Cell[31032, 945, 140, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31209, 951, 288, 7, 32, "Input"],
Cell[31500, 960, 214, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31751, 970, 130, 2, 32, "Input"],
Cell[31884, 974, 94, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32015, 980, 99, 1, 32, "Input"],
Cell[32117, 983, 188, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32342, 993, 130, 2, 32, "Input"],
Cell[32475, 997, 75, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32587, 1003, 130, 2, 32, "Input"],
Cell[32720, 1007, 205, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32962, 1017, 170, 4, 32, "Input"],
Cell[33135, 1023, 100, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33272, 1029, 130, 2, 35, "Input"],
Cell[33405, 1033, 96, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33538, 1039, 202, 5, 35, "Input"],
Cell[33743, 1046, 218, 7, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34010, 1059, 138, 2, 86, "Chapter"],
Cell[34151, 1063, 138, 1, 34, "Item"],
Cell[34292, 1066, 71, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[34388, 1071, 108, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[34521, 1076, 195, 4, 35, "Input"],
Cell[34719, 1082, 147, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34903, 1090, 120, 1, 34, "Item"],
Cell[35026, 1093, 128, 1, 34, "Item"],
Cell[35157, 1096, 135, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35329, 1102, 128, 2, 35, "Input"],
Cell[35460, 1106, 145, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35642, 1114, 153, 3, 35, "Input"],
Cell[35798, 1119, 223, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36058, 1129, 161, 3, 35, "Input"],
Cell[36222, 1134, 141, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36400, 1142, 172, 4, 35, "Input"],
Cell[36575, 1148, 300, 8, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[36924, 1162, 121, 1, 94, "Section"],
Cell[CellGroupData[{
Cell[37070, 1167, 158, 3, 34, "Item"],
Cell[37231, 1172, 123, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37391, 1178, 302, 6, 35, "Input"],
Cell[37696, 1186, 228, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37961, 1196, 151, 3, 35, "Input"],
Cell[38115, 1201, 96, 1, 36, "Output"]
}, Open  ]],
Cell[38226, 1205, 159, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[38410, 1212, 166, 4, 35, "Input"],
Cell[38579, 1218, 71, 1, 36, "Output"]
}, Open  ]],
Cell[38665, 1222, 170, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[38860, 1229, 371, 10, 35, "Input"],
Cell[39234, 1241, 140, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39411, 1249, 174, 4, 34, "Item"],
Cell[39588, 1255, 174, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39799, 1264, 174, 4, 35, "Input"],
Cell[39976, 1270, 126, 3, 36, "Output"]
}, Open  ]],
Cell[40117, 1276, 144, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[40286, 1281, 341, 8, 35, "Input"],
Cell[40630, 1291, 124, 2, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40791, 1298, 101, 1, 35, "Input"],
Cell[40895, 1301, 200, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41132, 1310, 393, 10, 35, "Input"],
Cell[41528, 1322, 149, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41714, 1330, 97, 1, 35, "Input"],
Cell[41814, 1333, 196, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42047, 1342, 160, 3, 34, "Item"],
Cell[42210, 1347, 162, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42409, 1355, 474, 12, 58, "Input"],
Cell[42886, 1369, 172, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[43107, 1378, 127, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[43259, 1383, 102, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[43386, 1388, 193, 4, 35, "Input"],
Cell[43582, 1394, 215, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43834, 1404, 150, 3, 35, "Input"],
Cell[43987, 1409, 509, 11, 25, "Message"],
Cell[44499, 1422, 287, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44823, 1434, 186, 2, 34, "Item"],
Cell[45012, 1438, 213, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45262, 1447, 458, 10, 58, "Input"],
Cell[45723, 1459, 292, 6, 36, "Output"]
}, Open  ]],
Cell[46030, 1468, 157, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[46212, 1475, 183, 4, 35, "Input"],
Cell[46398, 1481, 252, 6, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46699, 1493, 104, 1, 58, "Subsection"],
Cell[46806, 1496, 166, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[46997, 1503, 99, 1, 35, "Input"],
Cell[47099, 1506, 250, 6, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47386, 1517, 235, 5, 35, "Input"],
Cell[47624, 1524, 238, 5, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[47923, 1536, 218, 3, 85, "Section"],
Cell[48144, 1541, 139, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[48308, 1546, 191, 4, 35, "Input"],
Cell[48502, 1552, 237, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48776, 1562, 129, 2, 35, "Input"],
Cell[48908, 1566, 73, 1, 36, "Output"]
}, Open  ]],
Cell[48996, 1570, 159, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[49180, 1577, 152, 3, 35, "Input"],
Cell[49335, 1582, 72, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49444, 1588, 213, 4, 34, "Item"],
Cell[49660, 1594, 180, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49877, 1601, 157, 3, 35, "Input"],
Cell[50037, 1606, 142, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50216, 1614, 266, 6, 35, "Input"],
Cell[50485, 1622, 215, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50737, 1632, 232, 4, 35, "Input"],
Cell[50972, 1638, 251, 7, 36, "Output"]
}, Open  ]],
Cell[51238, 1648, 142, 1, 34, "Item"],
Cell[51383, 1651, 194, 4, 35, "Input"],
Cell[51580, 1657, 323, 8, 35, "Input"],
Cell[51906, 1667, 92, 1, 35, "Input"],
Cell[CellGroupData[{
Cell[52023, 1672, 111, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[52159, 1677, 123, 1, 34, "Item"],
Cell[52285, 1680, 155, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52477, 1688, 193, 4, 35, "Input"],
Cell[52673, 1694, 215, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52925, 1704, 130, 2, 35, "Input"],
Cell[53058, 1708, 74, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53169, 1714, 127, 2, 35, "Input"],
Cell[53299, 1718, 73, 1, 36, "Output"]
}, Open  ]],
Cell[53387, 1722, 193, 2, 34, "Item"],
Cell[CellGroupData[{
Cell[53605, 1728, 178, 4, 35, "Input"],
Cell[53786, 1734, 205, 5, 36, "Output"]
}, Open  ]],
Cell[54006, 1742, 137, 2, 35, "Input"],
Cell[CellGroupData[{
Cell[54168, 1748, 273, 6, 58, "Input"],
Cell[54444, 1756, 209, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54690, 1766, 228, 5, 34, "Item"],
Cell[54921, 1773, 183, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55141, 1780, 176, 4, 35, "Input"],
Cell[55320, 1786, 202, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55559, 1796, 136, 2, 35, "Input"],
Cell[55698, 1800, 194, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55929, 1810, 141, 1, 34, "Item"],
Cell[56073, 1813, 126, 1, 34, "Item"]
}, Open  ]],
Cell[56214, 1817, 117, 2, 35, "Input"],
Cell[CellGroupData[{
Cell[56356, 1823, 212, 5, 35, "Input"],
Cell[56571, 1830, 158, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56766, 1839, 133, 2, 35, "Input"],
Cell[56902, 1843, 211, 6, 52, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[57174, 1856, 115, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[57314, 1861, 107, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[57446, 1866, 192, 2, 34, "Item"],
Cell[57641, 1870, 231, 5, 53, "Item"],
Cell[57875, 1877, 163, 2, 34, "Item"],
Cell[58041, 1881, 298, 6, 53, "Item"],
Cell[58342, 1889, 318, 6, 53, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[58709, 1901, 104, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[58838, 1906, 126, 1, 34, "Item"],
Cell[58967, 1909, 133, 1, 34, "Item"],
Cell[59103, 1912, 141, 1, 34, "Item"],
Cell[59247, 1915, 210, 4, 34, "Item"],
Cell[59460, 1921, 219, 4, 34, "Item"]
}, Open  ]],
Cell[59694, 1928, 385, 7, 58, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[60128, 1941, 172, 2, 85, "Section"],
Cell[CellGroupData[{
Cell[60325, 1947, 97, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[60447, 1952, 330, 6, 35, "Input"],
Cell[60780, 1960, 266, 6, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61083, 1971, 163, 3, 34, "Item"],
Cell[61249, 1976, 214, 3, 53, "Item"]
}, Open  ]],
Cell[61478, 1982, 405, 7, 53, "Input"],
Cell[CellGroupData[{
Cell[61908, 1993, 198, 3, 32, "Input"],
Cell[62109, 1998, 316, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62462, 2010, 212, 5, 32, "Input"],
Cell[62677, 2017, 235, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62949, 2027, 281, 7, 32, "Input"],
Cell[63233, 2036, 213, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63483, 2046, 154, 3, 32, "Input"],
Cell[63640, 2051, 213, 5, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[63902, 2062, 98, 1, 53, "Subsection"],
Cell[64003, 2065, 127, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[64155, 2070, 128, 2, 32, "Input"],
Cell[64286, 2074, 212, 5, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64535, 2084, 69, 1, 32, "Input"],
Cell[64607, 2087, 212, 5, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64868, 2098, 100, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[64993, 2103, 133, 1, 31, "Item"],
Cell[65129, 2106, 175, 4, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65341, 2115, 198, 4, 32, "Input"],
Cell[65542, 2121, 147, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65726, 2129, 164, 3, 31, "Item"],
Cell[65893, 2134, 168, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66098, 2142, 156, 3, 35, "Input"],
Cell[66257, 2147, 224, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66518, 2157, 187, 4, 35, "Input"],
Cell[66708, 2163, 375, 11, 36, "Output"]
}, Open  ]],
Cell[67098, 2177, 176, 4, 34, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67323, 2187, 129, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[67477, 2192, 207, 4, 34, "Item"],
Cell[67687, 2198, 211, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[67935, 2207, 215, 5, 35, "Input"],
Cell[68153, 2214, 152, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68342, 2222, 130, 2, 35, "Input"],
Cell[68475, 2226, 71, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68583, 2232, 151, 3, 35, "Input"],
Cell[68737, 2237, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68847, 2243, 126, 2, 35, "Input"],
Cell[68976, 2247, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69086, 2253, 168, 4, 35, "Input"],
Cell[69257, 2259, 73, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69367, 2265, 184, 4, 35, "Input"],
Cell[69554, 2271, 71, 1, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69674, 2278, 113, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[69812, 2283, 238, 5, 35, "Input"],
Cell[70053, 2290, 225, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70315, 2300, 158, 3, 34, "Item"],
Cell[70476, 2305, 156, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70669, 2313, 235, 3, 58, "Subsection"],
Cell[CellGroupData[{
Cell[70929, 2320, 265, 5, 34, "Item"],
Cell[71197, 2327, 281, 3, 34, "Item"],
Cell[71481, 2332, 285, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71803, 2340, 147, 2, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[71975, 2346, 125, 1, 34, "Item"],
Cell[72103, 2349, 694, 12, 136, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72846, 2367, 102, 1, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[72973, 2372, 442, 10, 80, "Input"],
Cell[73418, 2384, 171, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73626, 2392, 159, 3, 35, "Input"],
Cell[73788, 2397, 137, 3, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[73986, 2407, 117, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[74128, 2412, 185, 2, 34, "Item"],
Cell[74316, 2416, 278, 5, 53, "Item"],
Cell[74597, 2423, 217, 3, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74851, 2431, 178, 4, 35, "Input"],
Cell[75032, 2437, 205, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75274, 2447, 268, 6, 35, "Input"],
Cell[75545, 2455, 233, 5, 36, "Output"]
}, Open  ]],
Cell[75793, 2463, 238, 4, 53, "Item"],
Cell[CellGroupData[{
Cell[76056, 2471, 368, 10, 35, "Input"],
Cell[76427, 2483, 141, 3, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[76629, 2493, 122, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[76776, 2498, 154, 3, 34, "Item"],
Cell[76933, 2503, 126, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77096, 2509, 290, 7, 35, "Input"],
Cell[77389, 2518, 206, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77632, 2528, 139, 2, 35, "Input"],
Cell[77774, 2532, 199, 4, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78022, 2542, 112, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[78159, 2547, 178, 4, 35, "Input"],
Cell[78340, 2553, 224, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78601, 2563, 191, 4, 35, "Input"],
Cell[78795, 2569, 213, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79045, 2579, 190, 4, 35, "Input"],
Cell[79238, 2585, 233, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79508, 2595, 118, 1, 58, "Subsection"],
Cell[79629, 2598, 174, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[79828, 2606, 276, 5, 35, "Input"],
Cell[80107, 2613, 488, 9, 61, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80632, 2627, 157, 3, 34, "Item"],
Cell[80792, 2632, 175, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81004, 2641, 99, 1, 35, "Input"],
Cell[81106, 2644, 212, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81355, 2654, 200, 4, 35, "Input"],
Cell[81558, 2660, 149, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[81756, 2669, 135, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[81916, 2674, 282, 7, 35, "Input"],
Cell[82201, 2683, 188, 4, 36, "Output"]
}, Open  ]],
Cell[82404, 2690, 162, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[82591, 2697, 99, 1, 35, "Input"],
Cell[82693, 2700, 186, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82916, 2710, 130, 2, 35, "Input"],
Cell[83049, 2714, 148, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83246, 2723, 147, 1, 58, "Subsection"],
Cell[83396, 2726, 169, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[83590, 2733, 129, 2, 35, "Input"],
Cell[83722, 2737, 186, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83945, 2747, 99, 1, 35, "Input"],
Cell[84047, 2750, 147, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84231, 2758, 162, 3, 35, "Input"],
Cell[84396, 2763, 128, 3, 36, "Output"]
}, Open  ]],
Cell[84539, 2769, 156, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[84720, 2776, 155, 3, 35, "Input"],
Cell[84878, 2781, 146, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[85073, 2790, 94, 1, 58, "Subsection"],
Cell[85170, 2793, 133, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[85328, 2798, 231, 5, 35, "Input"],
Cell[85562, 2805, 179, 4, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85778, 2814, 231, 5, 35, "Input"],
Cell[86012, 2821, 147, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86196, 2829, 158, 3, 35, "Input"],
Cell[86357, 2834, 184, 4, 36, "Output"]
}, Open  ]],
Cell[86556, 2841, 212, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[86793, 2849, 280, 7, 35, "Input"],
Cell[87076, 2858, 216, 5, 36, "Output"]
}, Open  ]],
Cell[87307, 2866, 105, 1, 34, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[87473, 2874, 120, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[87618, 2879, 116, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[87759, 2884, 212, 4, 34, "Item"],
Cell[87974, 2890, 174, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88185, 2897, 197, 4, 35, "Input"],
Cell[88385, 2903, 145, 3, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88567, 2911, 291, 8, 35, "Input"],
Cell[88861, 2921, 287, 8, 36, "Output"]
}, Open  ]],
Cell[89163, 2932, 173, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[89361, 2940, 162, 3, 32, "Input"],
Cell[89526, 2945, 661, 18, 48, "Output"]
}, Open  ]],
Cell[90202, 2966, 402, 8, 53, "Input"],
Cell[CellGroupData[{
Cell[90629, 2978, 96, 1, 32, "Input"],
Cell[90728, 2981, 256, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91021, 2993, 348, 8, 32, "Input"],
Cell[91372, 3003, 259, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91668, 3015, 386, 8, 32, "Input"],
Cell[92057, 3025, 697, 19, 48, "Output"]
}, Open  ]],
Cell[92769, 3047, 351, 6, 67, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93157, 3058, 109, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[93291, 3063, 114, 1, 53, "Subsection"],
Cell[CellGroupData[{
Cell[93430, 3068, 255, 5, 49, "Item"],
Cell[93688, 3075, 274, 6, 31, "Item"],
Cell[93965, 3083, 241, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94243, 3091, 337, 9, 32, "Input"],
Cell[94583, 3102, 257, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94877, 3114, 291, 8, 35, "Input"],
Cell[95171, 3124, 257, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95465, 3136, 147, 3, 35, "Input"],
Cell[95615, 3141, 235, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95887, 3153, 186, 4, 58, "Input"],
Cell[96076, 3159, 338, 12, 36, "Output"]
}, Open  ]],
Cell[96429, 3174, 167, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[96621, 3181, 134, 2, 35, "Input"],
Cell[96758, 3185, 117, 3, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[96924, 3194, 130, 2, 58, "Subsection"],
Cell[CellGroupData[{
Cell[97079, 3200, 184, 4, 34, "Item"],
Cell[97266, 3206, 206, 4, 34, "Item"],
Cell[97475, 3212, 153, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97665, 3219, 369, 10, 35, "Input"],
Cell[98037, 3231, 284, 8, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98358, 3244, 461, 13, 35, "Input"],
Cell[98822, 3259, 296, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99155, 3273, 361, 8, 35, "Input"],
Cell[99519, 3283, 294, 8, 36, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[99874, 3298, 104, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[100003, 3303, 402, 7, 93, "Item"],
Cell[100408, 3312, 267, 5, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100712, 3322, 234, 6, 35, "Input"],
Cell[100949, 3330, 358, 9, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101344, 3344, 131, 2, 35, "Input"],
Cell[101478, 3348, 676, 19, 72, "Output"]
}, Open  ]],
Cell[102169, 3370, 164, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[102358, 3377, 161, 3, 35, "Input"],
Cell[102522, 3382, 543, 14, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103102, 3401, 134, 2, 35, "Input"],
Cell[103239, 3405, 753, 21, 112, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104041, 3432, 109, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[104175, 3437, 289, 8, 35, "Input"],
Cell[104467, 3447, 235, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104739, 3459, 160, 3, 35, "Input"],
Cell[104902, 3464, 639, 18, 52, "Output"]
}, Open  ]],
Cell[105556, 3485, 128, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[105709, 3490, 225, 4, 35, "Input"],
Cell[105937, 3496, 696, 20, 72, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106670, 3521, 127, 1, 34, "Item"],
Cell[106800, 3524, 120, 1, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106957, 3530, 314, 10, 58, "Input"],
Cell[107274, 3542, 213, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107524, 3554, 211, 4, 35, "Input"],
Cell[107738, 3560, 302, 11, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[108077, 3576, 292, 7, 35, "Input"],
Cell[108372, 3585, 215, 7, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[108636, 3598, 123, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[108784, 3603, 207, 4, 53, "Item"],
Cell[108994, 3609, 219, 4, 53, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109250, 3618, 287, 8, 35, "Input"],
Cell[109540, 3628, 233, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109810, 3640, 292, 8, 35, "Input"],
Cell[110105, 3650, 238, 7, 36, "Output"]
}, Open  ]],
Cell[110358, 3660, 87, 2, 35, "Input"],
Cell[CellGroupData[{
Cell[110470, 3666, 187, 4, 35, "Input"],
Cell[110660, 3672, 698, 19, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[111395, 3696, 158, 3, 35, "Input"],
Cell[111556, 3701, 644, 18, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[112237, 3724, 211, 4, 35, "Input"],
Cell[112451, 3730, 814, 24, 70, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[113314, 3760, 125, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[113464, 3765, 291, 8, 35, "Input"],
Cell[113758, 3775, 238, 7, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[114033, 3787, 133, 2, 35, "Input"],
Cell[114169, 3791, 640, 18, 52, "Output"]
}, Open  ]],
Cell[114824, 3812, 244, 4, 53, "Item"],
Cell[CellGroupData[{
Cell[115093, 3820, 341, 9, 35, "Input"],
Cell[115437, 3831, 71, 1, 33, "Output"]
}, Open  ]],
Cell[115523, 3835, 173, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[115721, 3841, 318, 9, 32, "Input"],
Cell[116042, 3852, 127, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116206, 3860, 173, 4, 32, "Input"],
Cell[116382, 3866, 118, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116537, 3874, 267, 5, 49, "Item"],
Cell[116807, 3881, 124, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116968, 3887, 318, 9, 32, "Input"],
Cell[117289, 3898, 151, 3, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[117477, 3906, 224, 6, 32, "Input"],
Cell[117704, 3914, 142, 3, 33, "Output"]
}, Open  ]],
Cell[117861, 3920, 166, 3, 31, "Item"],
Cell[118030, 3925, 223, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[118278, 3935, 133, 2, 32, "Input"],
Cell[118414, 3939, 672, 18, 48, "Output"]
}, Open  ]],
Cell[119101, 3960, 96, 1, 32, "Input"],
Cell[119200, 3963, 94, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[119331, 3969, 114, 1, 78, "Section"],
Cell[119448, 3972, 142, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[119615, 3977, 290, 8, 32, "Input"],
Cell[119908, 3987, 233, 7, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120178, 3999, 128, 2, 32, "Input"],
Cell[120309, 4003, 158, 4, 33, "Output"]
}, Open  ]],
Cell[120482, 4010, 94, 1, 32, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[120625, 4017, 111, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[120761, 4022, 108, 1, 78, "Section"],
Cell[120872, 4025, 188, 4, 49, "Item"],
Cell[121063, 4031, 373, 10, 55, "Code"],
Cell[CellGroupData[{
Cell[121461, 4045, 177, 4, 31, "Item"],
Cell[121641, 4051, 143, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121821, 4057, 501, 12, 76, "Code"],
Cell[122325, 4071, 122, 2, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[122484, 4078, 230, 4, 49, "Item"],
Cell[122717, 4084, 220, 4, 49, "Item"],
Cell[122940, 4090, 200, 4, 49, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123177, 4099, 120, 2, 32, "Input"],
Cell[123300, 4103, 71, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123408, 4109, 129, 2, 32, "Input"],
Cell[123540, 4113, 71, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123648, 4119, 241, 6, 32, "Input"],
Cell[123892, 4127, 93, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124022, 4133, 301, 6, 32, "Input"],
Cell[124326, 4141, 71, 1, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[124434, 4147, 71, 1, 35, "Input"],
Cell[124508, 4150, 73, 1, 36, "Output"]
}, Open  ]],
Cell[124596, 4154, 301, 5, 37, "Item"],
Cell[CellGroupData[{
Cell[124922, 4163, 303, 8, 58, "Input"],
Cell[125228, 4173, 97, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[125374, 4180, 112, 1, 78, "Section"],
Cell[125489, 4183, 284, 6, 49, "Item"],
Cell[125776, 4191, 273, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[126074, 4202, 305, 8, 32, "Input"],
Cell[126382, 4212, 126, 3, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[126557, 4221, 122, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[126704, 4226, 132, 1, 31, "Item"],
Cell[126839, 4229, 296, 5, 49, "Item"],
Cell[127138, 4236, 155, 3, 31, "Item"]
}, Open  ]],
Cell[127308, 4242, 175, 3, 32, "Input"],
Cell[CellGroupData[{
Cell[127508, 4249, 113, 2, 32, "Input"],
Cell[127624, 4253, 2193, 36, 88, "Print",
 CellTags->"Info-913b775d-8622-437f-a24c-3c3cd89342aa"]
}, Open  ]],
Cell[129832, 4292, 223, 6, 32, "Input"],
Cell[130058, 4300, 204, 4, 31, "Item"],
Cell[130265, 4306, 203, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[130493, 4315, 116, 2, 32, "Input"],
Cell[130612, 4319, 193, 3, 44, "Print",
 CellTags->"Info-c98bfd7b-cf22-4e0e-8b15-14e752c8c016"]
}, Open  ]],
Cell[130820, 4325, 71, 1, 35, "Input"],
Cell[130894, 4328, 148, 8, 139, "Section"],
Cell[CellGroupData[{
Cell[131067, 4340, 239, 4, 53, "Item"],
Cell[131309, 4346, 258, 5, 53, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[131628, 4358, 110, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[131763, 4363, 95, 1, 85, "Section"],
Cell[131861, 4366, 249, 7, 35, "Input"],
Cell[132113, 4375, 163, 3, 34, "Item"],
Cell[CellGroupData[{
Cell[132301, 4382, 133, 2, 35, "Input"],
Cell[132437, 4386, 6999, 187, 277, "Output"]
}, Open  ]],
Cell[139451, 4576, 134, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[139610, 4581, 137, 2, 35, "Input"],
Cell[139750, 4585, 75124, 1374, 372, 20200, 472, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214911, 5964, 332, 6, 53, "Item"],
Cell[215246, 5972, 312, 6, 53, "Item"]
}, Open  ]],
Cell[215573, 5981, 328, 10, 35, "Input"],
Cell[CellGroupData[{
Cell[215926, 5995, 184, 3, 35, "Input"],
Cell[216113, 6000, 10890, 275, 281, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[227052, 6281, 99, 1, 85, "Section"],
Cell[227154, 6284, 173, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[227352, 6292, 240, 6, 35, "Input"],
Cell[227595, 6300, 215, 5, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227847, 6310, 234, 4, 35, "Input"],
Cell[228084, 6316, 2769, 77, 294, "Output"]
}, Open  ]],
Cell[230868, 6396, 176, 4, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231081, 6405, 99, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[231205, 6410, 143, 1, 34, "Item"],
Cell[231351, 6413, 180, 2, 34, "Item"],
Cell[231534, 6417, 417, 7, 73, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231988, 6429, 275, 6, 35, "Input"],
Cell[232266, 6437, 1271, 31, 295, "Output"]
}, Open  ]],
Cell[233552, 6471, 393, 12, 35, "Input"],
Cell[CellGroupData[{
Cell[233970, 6487, 360, 11, 35, "Input"],
Cell[234333, 6500, 337, 11, 36, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234707, 6516, 131, 2, 32, "Input"],
Cell[234841, 6520, 908, 25, 270, "Output"]
}, Open  ]],
Cell[235764, 6548, 357, 6, 49, "Item"],
Cell[CellGroupData[{
Cell[236146, 6558, 238, 5, 32, "Input"],
Cell[236387, 6565, 890, 25, 270, "Output"]
}, Open  ]],
Cell[237292, 6593, 212, 4, 49, "Item"],
Cell[CellGroupData[{
Cell[237529, 6601, 438, 12, 32, "Input"],
Cell[237970, 6615, 374, 11, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238381, 6631, 241, 4, 32, "Input"],
Cell[238625, 6637, 11411, 193, 156, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[250085, 6836, 150, 2, 93, "Section"],
Cell[CellGroupData[{
Cell[250260, 6842, 156, 3, 34, "Item"],
Cell[250419, 6847, 1995, 33, 96, "Print",
 CellTags->"Info-4040fde8-0bb2-4924-84fc-c58ac301bd28"],
Cell[CellGroupData[{
Cell[252439, 6884, 253, 5, 35, "Input"],
Cell[252695, 6891, 958, 26, 295, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253702, 6923, 269, 6, 35, "Input"],
Cell[253974, 6931, 1114, 29, 269, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255125, 6965, 323, 7, 55, "Code"],
Cell[255451, 6974, 221, 5, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[255721, 6985, 108, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[255854, 6990, 134, 1, 34, "Item"],
Cell[255991, 6993, 400, 7, 53, "Item"],
Cell[256394, 7002, 344, 4, 34, "Item"],
Cell[256741, 7008, 450, 11, 51, "Print",
 CellTags->"Info-3ae9fc14-1ca0-4e31-8e95-1f8c33f7ca57"],
Cell[CellGroupData[{
Cell[257216, 7023, 245, 5, 35, "Input"],
Cell[257464, 7030, 188, 4, 36, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257701, 7040, 82, 2, 35, "Input"],
Cell[257786, 7044, 93, 2, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257916, 7051, 99, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[258040, 7056, 301, 7, 35, "Input"],
Cell[258344, 7065, 6870, 187, 286, "Output"]
}, Open  ]],
Cell[265229, 7255, 364, 7, 73, "Item"],
Cell[CellGroupData[{
Cell[265618, 7266, 254, 6, 35, "Input"],
Cell[265875, 7274, 6896, 188, 286, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[272808, 7467, 567, 17, 58, "Input"],
Cell[273378, 7486, 881, 24, 292, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274308, 7516, 102, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[274435, 7521, 293, 4, 34, "Item"],
Cell[274731, 7527, 241, 3, 34, "Item"],
Cell[274975, 7532, 477, 11, 74, "Print",
 CellTags->"Info-8e7d3d6e-9723-446f-aa4b-b9932e33a8f2"],
Cell[275455, 7545, 269, 5, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275761, 7555, 446, 8, 35, "Input"],
Cell[276210, 7565, 1442, 33, 297, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[277701, 7604, 95, 1, 58, "Subsection"],
Cell[CellGroupData[{
Cell[277821, 7609, 234, 3, 34, "Item"],
Cell[278058, 7614, 182, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278277, 7621, 169, 2, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[278471, 7627, 419, 10, 51, "Print",
 CellTags->"Info-59173d98-7577-4534-ad73-126483fd6107"],
Cell[278893, 7639, 425, 10, 51, "Print",
 CellTags->"Info-9fd2d925-143f-49b8-8be2-ba970b6a0ab0"]
}, Open  ]],
Cell[279333, 7652, 108, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[279466, 7657, 688, 15, 35, "Input"],
Cell[280157, 7674, 7547, 161, 293, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[287741, 7840, 649, 18, 80, "Input"],
Cell[288393, 7860, 33891, 605, 290, "Output"]
}, Open  ]],
Cell[322299, 8468, 161, 2, 34, "Item"],
Cell[CellGroupData[{
Cell[322485, 8474, 381, 10, 35, "Input"],
Cell[322869, 8486, 34128, 613, 290, "Output"]
}, Open  ]],
Cell[357012, 9102, 191, 4, 34, "Item"],
Cell[CellGroupData[{
Cell[357228, 9110, 466, 12, 35, "Input"],
Cell[357697, 9124, 33973, 609, 290, "Output"]
}, Open  ]],
Cell[391685, 9736, 185, 2, 34, "Item"],
Cell[CellGroupData[{
Cell[391895, 9742, 526, 13, 35, "Input"],
Cell[392424, 9757, 24511, 414, 305, "Output"]
}, Open  ]],
Cell[416950, 10174, 96, 1, 35, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417083, 10180, 168, 2, 47, "Subsubsection"],
Cell[CellGroupData[{
Cell[417276, 10186, 164, 2, 34, "Item"],
Cell[417443, 10190, 163, 2, 34, "Item"],
Cell[417609, 10194, 453, 11, 74, "Print",
 CellTags->"Info-c211ee5c-738e-4d9e-b0e9-af8233d2ab06"],
Cell[CellGroupData[{
Cell[418087, 10209, 705, 19, 58, "Input"],
Cell[418795, 10230, 38560, 855, 301, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[457440, 11094, 105, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[457570, 11099, 128, 1, 34, "Item"],
Cell[457701, 11102, 2153, 36, 96, "Print",
 CellTags->"Info-120c32a5-9ab5-42ea-9690-ab7009da7adf"],
Cell[CellGroupData[{
Cell[459879, 11142, 341, 9, 35, "Input"],
Cell[460223, 11153, 3550, 66, 283, "Output"]
}, Open  ]]
}, Open  ]],
Cell[463800, 11223, 92, 1, 35, "Input"],
Cell[463895, 11226, 142, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[464062, 11231, 439, 12, 35, "Input"],
Cell[464504, 11245, 47807, 859, 298, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[512372, 12111, 166, 2, 149, "Chapter"],
Cell[CellGroupData[{
Cell[512563, 12117, 104, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[512692, 12122, 215, 4, 53, "Item"],
Cell[512910, 12128, 319, 7, 55, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[513278, 12141, 131, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[513434, 12146, 137, 1, 34, "Item"],
Cell[513574, 12149, 5285, 79, 208, "Print",
 CellTags->"Info-562778dd-e1af-41c8-99f3-a4833404956e"],
Cell[CellGroupData[{
Cell[518884, 12232, 446, 12, 76, "Code"],
Cell[519333, 12246, 1637, 33, 135, "Output"]
}, Open  ]],
Cell[520985, 12282, 185, 2, 34, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[521207, 12289, 245, 6, 35, "Input"],
Cell[521455, 12297, 1544, 32, 148, "Output"]
}, Open  ]],
Cell[523014, 12332, 122, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[523161, 12337, 700, 17, 35, "Input"],
Cell[523864, 12356, 1804, 36, 390, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[525705, 12397, 423, 12, 35, "Input"],
Cell[526131, 12411, 1657, 34, 390, "Output"]
}, Open  ]],
Cell[527803, 12448, 263, 5, 93, "Item"],
Cell[CellGroupData[{
Cell[528091, 12457, 480, 13, 35, "Input"],
Cell[528574, 12472, 1609, 33, 148, "Output"]
}, Open  ]],
Cell[530198, 12508, 125, 1, 34, "Item"],
Cell[CellGroupData[{
Cell[530348, 12513, 685, 19, 35, "Input"],
Cell[531036, 12534, 496, 10, 25, "Message"]
}, Open  ]],
Cell[531547, 12547, 572, 17, 32, "Input"],
Cell[532122, 12566, 1982, 40, 407, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[534141, 12611, 119, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[534285, 12616, 128, 1, 31, "Item"],
Cell[534416, 12619, 2980, 46, 128, "Print",
 CellTags->"Info-6424051e-3917-44ae-9e51-993fdc960592"],
Cell[537399, 12667, 255, 5, 49, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[537691, 12677, 550, 14, 32, "Input"],
Cell[538244, 12693, 2032, 40, 351, "Output"]
}, Open  ]],
Cell[540291, 12736, 268, 5, 49, "Item"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[540608, 12747, 101, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[540734, 12752, 101, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[540860, 12757, 190, 4, 31, "Item"],
Cell[541053, 12763, 1127, 21, 68, "Print",
 CellTags->"Info-831920e9-1d2b-4e20-8db7-accb13fad66d"],
Cell[542183, 12786, 5222, 90, 127, "Input"]
}, Open  ]],
Cell[547420, 12879, 5266, 91, 128, "Input"],
Cell[552689, 12972, 189, 6, 32, "Input"],
Cell[CellGroupData[{
Cell[552903, 12982, 122, 2, 32, "Input"],
Cell[553028, 12986, 70, 1, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[553135, 12992, 122, 2, 32, "Input"],
Cell[553260, 12996, 70, 1, 33, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[553379, 13003, 102, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[553506, 13008, 183, 2, 31, "Item"],
Cell[553692, 13012, 1138, 20, 68, "Print",
 CellTags->"Info-76589ef3-135a-4a7c-8090-e3c5f4d294f3"],
Cell[CellGroupData[{
Cell[554855, 13036, 540, 14, 53, "Input"],
Cell[555398, 13052, 123, 2, 36, "Output"]
}, Open  ]],
Cell[555536, 13057, 155, 3, 34, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[555752, 13067, 105, 1, 86, "Chapter"],
Cell[CellGroupData[{
Cell[555882, 13072, 88, 1, 85, "Section"],
Cell[CellGroupData[{
Cell[555995, 13077, 87, 1, 31, "Item"],
Cell[556085, 13080, 3838, 59, 188, "Print",
 CellTags->"Info-254d5c43-8ddf-44ec-b509-8ff6315ea39b"],
Cell[559926, 13141, 122, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[560085, 13147, 214, 5, 32, "Input"],
Cell[CellGroupData[{
Cell[560324, 13156, 105, 1, 24, "Print"],
Cell[560432, 13159, 105, 1, 24, "Print"],
Cell[560540, 13162, 105, 1, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[560672, 13167, 176, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[560873, 13173, 501, 13, 53, "Input"],
Cell[CellGroupData[{
Cell[561399, 13190, 71, 1, 24, "Print"],
Cell[561473, 13193, 71, 1, 24, "Print"],
Cell[561547, 13196, 71, 1, 24, "Print"],
Cell[561621, 13199, 72, 1, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[561720, 13204, 180, 2, 31, "Item"],
Cell[CellGroupData[{
Cell[561925, 13210, 558, 17, 53, "Input"],
Cell[CellGroupData[{
Cell[562508, 13231, 88, 2, 24, "Print"],
Cell[562599, 13235, 88, 2, 24, "Print"],
Cell[562690, 13239, 71, 1, 24, "Print"],
Cell[562764, 13242, 71, 1, 24, "Print"],
Cell[562838, 13245, 71, 1, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[562936, 13250, 94, 1, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[563067, 13256, 90, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[563182, 13261, 117, 1, 31, "Item"],
Cell[563302, 13264, 694, 14, 47, "Print",
 CellTags->"Info-d985ebce-900e-4a90-930a-399ca16133dc"],
Cell[563999, 13280, 321, 11, 33, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[564357, 13296, 423, 11, 53, "Input"],
Cell[CellGroupData[{
Cell[564805, 13311, 197, 3, 24, "Print"],
Cell[565005, 13316, 197, 3, 24, "Print"],
Cell[565205, 13321, 197, 3, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[565429, 13328, 297, 7, 32, "Input"],
Cell[565729, 13337, 128, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[565882, 13342, 352, 10, 32, "Input"],
Cell[CellGroupData[{
Cell[566259, 13356, 69, 1, 24, "Print"],
Cell[566331, 13359, 69, 1, 24, "Print"],
Cell[566403, 13362, 69, 1, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[566521, 13369, 358, 10, 32, "Input"],
Cell[CellGroupData[{
Cell[566904, 13383, 71, 1, 24, "Print"],
Cell[566978, 13386, 71, 1, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[567110, 13394, 90, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[567225, 13399, 206, 4, 31, "Item"],
Cell[567434, 13405, 846, 17, 47, "Print",
 CellTags->"Info-bd6ea501-3291-4107-8607-d11b18098119"],
Cell[568283, 13424, 113, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[568433, 13430, 279, 7, 32, "Input"],
Cell[CellGroupData[{
Cell[568737, 13441, 97, 1, 24, "Print"],
Cell[568837, 13444, 97, 1, 24, "Print"],
Cell[568937, 13447, 97, 1, 24, "Print"],
Cell[569037, 13450, 97, 1, 24, "Print"],
Cell[569137, 13453, 95, 1, 24, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[569281, 13460, 310, 6, 49, "Item"],
Cell[569594, 13468, 92, 1, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[569723, 13474, 419, 13, 32, "Input"],
Cell[CellGroupData[{
Cell[570167, 13491, 141, 3, 24, "Print"],
Cell[570311, 13496, 217, 6, 28, "Print"],
Cell[570531, 13504, 302, 9, 28, "Print"]
}, Open  ]]
}, Open  ]],
Cell[570860, 13517, 411, 10, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[571308, 13532, 105, 1, 78, "Section"],
Cell[CellGroupData[{
Cell[571438, 13537, 184, 2, 31, "Item"],
Cell[571625, 13541, 439, 11, 47, "Print",
 CellTags->"Info-b078182a-0eb5-4e8f-96a9-d83ee65c2aff"],
Cell[CellGroupData[{
Cell[572089, 13556, 524, 15, 53, "Input"],
Cell[572616, 13573, 72, 1, 24, "Print"]
}, Open  ]],
Cell[572703, 13577, 129, 1, 31, "Item"],
Cell[572835, 13580, 169, 3, 31, "Item"],
Cell[573007, 13585, 471, 11, 47, "Print",
 CellTags->"Info-0d428704-2979-4809-b2e4-e8a0d2525948"],
Cell[CellGroupData[{
Cell[573503, 13600, 407, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[573935, 13616, 92, 1, 24, "Print"],
Cell[574030, 13619, 92, 1, 24, "Print"],
Cell[574125, 13622, 93, 1, 24, "Print"],
Cell[574221, 13625, 93, 1, 24, "Print"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[574399, 13635, 109, 1, 79, "Chapter"],
Cell[CellGroupData[{
Cell[574533, 13640, 155, 3, 31, "Item"],
Cell[574691, 13645, 3742, 57, 168, "Print",
 CellTags->"Info-fcf33395-6733-4906-b49c-e1e329cde97d"],
Cell[578436, 13704, 237, 4, 49, "Item"],
Cell[578676, 13710, 166, 2, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[578879, 13717, 161, 3, 32, "Input"],
Cell[579043, 13722, 306, 6, 33, "Output"]
}, Open  ]],
Cell[579364, 13731, 135, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[579524, 13736, 233, 6, 32, "Input"],
Cell[579760, 13744, 212, 5, 33, "Output"]
}, Open  ]],
Cell[579987, 13752, 118, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[580130, 13757, 225, 6, 32, "Input"],
Cell[580358, 13765, 210, 5, 33, "Output"]
}, Open  ]],
Cell[580583, 13773, 123, 1, 31, "Item"],
Cell[CellGroupData[{
Cell[580731, 13778, 342, 9, 32, "Input"],
Cell[581076, 13789, 780, 21, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[581893, 13815, 125, 1, 31, "Item"],
Cell[582021, 13818, 225, 3, 31, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[582283, 13826, 523, 12, 32, "Input"],
Cell[582809, 13840, 2989, 58, 265, "Output"]
}, Open  ]],
Cell[585813, 13901, 92, 1, 32, InheritFromParent],
Cell[585908, 13904, 118, 2, 53, "Subsection"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
